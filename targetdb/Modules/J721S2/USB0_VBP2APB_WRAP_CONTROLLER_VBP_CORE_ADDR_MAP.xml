<module name="USB0_VBP2APB_WRAP_CONTROLLER_VBP_CORE_ADDR_MAP" acronym="" XML_version="1.0" HW_revision="n/a" description="">
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_CDNS_DID" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_CDNS_DID" offset="0x0" width="32" description="Cadence Device ID Register
    ASF parity-protected: no">
		<bitfield id="DID" width="32" begin="31" end="0" resetval="0x262734" description="Cadence Device ID Register IP4024E" range="31 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_CDNS_RID" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_CDNS_RID" offset="0x4" width="32" description="Cadence Revision ID Register
    ASF parity-protected: no">
		<bitfield id="RSVD1" width="16" begin="31" end="16" resetval="0x0" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.           Note: At present the fields are implemented as RO." range="31 - 16" rwaccess="R"/> 
		<bitfield id="CDNS_RID" width="16" begin="15" end="0" resetval="0x512" description="CDNS_RID" range="15 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_OTGCAPABILITY" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_OTGCAPABILITY" offset="0x8" width="32" description="OTG Capabilities register">
		<bitfield id="OTG3REVISION" width="12" begin="31" end="20" resetval="0x272" description="Specifies implemeted OTG3.0 specification revision" range="31 - 20" rwaccess="R"/> 
		<bitfield id="OTG2REVISION" width="12" begin="19" end="8" resetval="0x512" description="Specifies implemeted OTG2.0 specification revision" range="19 - 8" rwaccess="R"/> 
		<bitfield id="RSVD1" width="2" begin="7" end="6" resetval="0x0" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.           Note: At present the fields are implemented as RO." range="7 - 6" rwaccess="R"/> 
		<bitfield id="REFCLK_DISABLE" width="1" begin="5" end="5" resetval="0x1" description="PHY Reference clock control disable.             0 - PHY Reference clock control supported             1 - PHY Reference clock control not supported" range="5" rwaccess="R"/> 
		<bitfield id="RSP_SUPPORT" width="1" begin="4" end="4" resetval="0x0" description="RSP support.             0 - RSP not supported             1 - RSP supported" range="4" rwaccess="R"/> 
		<bitfield id="BC_SUPPORT" width="1" begin="3" end="3" resetval="0x1" description="BC Support [Battery Charging specification rev 1.2].             0 - BC not supported             1 - BC supported" range="3" rwaccess="R"/> 
		<bitfield id="ADP_SUPPORT" width="1" begin="2" end="2" resetval="0x0" description="ADP support.             0 - ADP not supported             1 - ADP supported" range="2" rwaccess="R"/> 
		<bitfield id="HNP_SUPPORT" width="1" begin="1" end="1" resetval="0x1" description="HNP support.             0 - HNP not supported             1 - HNP supported" range="1" rwaccess="R"/> 
		<bitfield id="SRP_SUPPORT" width="1" begin="0" end="0" resetval="0x1" description="SRP support.             0 - SRP not supported             1 - SRP supported" range="0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_OTGCMD" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_OTGCMD" offset="0x10" width="32" description="OTGCMD">
		<bitfield id="RSVD2" width="1" begin="31" end="31" resetval="0x0" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.           Note: At present the fields are implemented as RO." range="31" rwaccess="R"/> 
		<bitfield id="DEV_VBUS_DEB_SHORT_CLR" width="1" begin="30" end="30" resetval="0x0" description="Disable forcing Device short VBUS debounce time.             Setting this bit causes DEV_VBUS_DEB_SHORT bit in OTGSTS clear." range="30" rwaccess="W"/> 
		<bitfield id="DEV_VBUS_DEB_SHORT_SET" width="1" begin="29" end="29" resetval="0x0" description="Enable forcing Device short VBUS debounce time. This bit should be set while switching from Host to Device mode takes place. Setting this bit should be done in the same time when Device mode is activated [DEV_BUS_REQ].             Setting this bit causes DEV_VBUS_DEB_SHORT bit in OTGSTS set." range="29" rwaccess="W"/> 
		<bitfield id="INIT_SRP" width="1" begin="28" end="28" resetval="0x0" description="Initiate SRP" range="28" rwaccess="W"/> 
		<bitfield id="OTG2_SWITCH_TO_PERIPH" width="1" begin="27" end="27" resetval="0x0" description="Switch to Peripheral mode when operating at USB 2.0" range="27" rwaccess="W"/> 
		<bitfield id="B_HNP_EN_CLR" width="1" begin="26" end="26" resetval="0x0" description="This bit should be written if software wants to clear b_hnp_enable" range="26" rwaccess="W"/> 
		<bitfield id="B_HNP_EN_SET" width="1" begin="25" end="25" resetval="0x0" description="This bit should be written if SetFeature[b_hnp_enable] has been accepted." range="25" rwaccess="W"/> 
		<bitfield id="A_SET_B_HNP_EN_CLR" width="1" begin="24" end="24" resetval="0x0" description="This bit should be written if upcoming USB 2.0 bus suspend should not cause Role Swap." range="24" rwaccess="W"/> 
		<bitfield id="A_SET_B_HNP_EN_SET" width="1" begin="23" end="23" resetval="0x0" description="This bit should be written if SetFeature[b_hnp_enable] has been sent." range="23" rwaccess="W"/> 
		<bitfield id="SS_PERIPH_DISABLED_CLR" width="1" begin="22" end="22" resetval="0x0" description="Enable SuperSpeed peripheral device functionality." range="22" rwaccess="W"/> 
		<bitfield id="SS_PERIPH_DISABLED_SET" width="1" begin="21" end="21" resetval="0x0" description="Disable SuperSpeed peripheral device functionality. Can be used only if Peripheral mode is not active." range="21" rwaccess="W"/> 
		<bitfield id="SS_HOST_DISABLED_CLR" width="1" begin="20" end="20" resetval="0x0" description="Enable SuperSpeed host functionality." range="20" rwaccess="W"/> 
		<bitfield id="SS_HOST_DISABLED_SET" width="1" begin="19" end="19" resetval="0x0" description="Disable SuperSpeed host functionality. Can be used only if Host mode is not active." range="19" rwaccess="W"/> 
		<bitfield id="D_WRST_FOR_SWAP_CLR" width="1" begin="18" end="18" resetval="0x0" description="Upcoming received Warm Reset should not be treated as Role Swapping indication.             This bit should be set after Warm Reset for Role Swap is received on the Port" range="18" rwaccess="W"/> 
		<bitfield id="D_WRST_FOR_SWAP_SET" width="1" begin="17" end="17" resetval="0x0" description="Upcoming Warm Reset will be received for Role Swapping.             This bit should be set before Warm Reset for Role Swap is received on the Port" range="17" rwaccess="W"/> 
		<bitfield id="H_WRST_FOR_SWAP_CLR" width="1" begin="16" end="16" resetval="0x0" description="Upcoming Warm Reset will not be generated for Role Swapping.             This bit should be set after Warm Reset for Role Swap is generated on the Port" range="16" rwaccess="W"/> 
		<bitfield id="H_WRST_FOR_SWAP_SET" width="1" begin="15" end="15" resetval="0x0" description="Upcoming Warm Reset will be generated for Role Swapping.             This bit should be set before Warm Reset for Role Swap is generated on the Port" range="15" rwaccess="W"/> 
		<bitfield id="DEV_DEVEN_FORCE_CLR" width="1" begin="14" end="14" resetval="0x0" description="Clear forcing Device DEVEN bit to 1.             Setting this bit causes DEV_DEVEN_FORCE bit in OTGSTS clear." range="14" rwaccess="W"/> 
		<bitfield id="DEV_DEVEN_FORCE_SET" width="1" begin="13" end="13" resetval="0x0" description="Set forcing Device DEVEN bit to 1.             This bit may be set while switching from Host to Device mode takes place. Setting this bit should be done in the same time when Device mode is activated [DEV_BUS_REQ].             Setting this bit causes DEV_DEVEN_FORCE bit in OTGSTS set." range="13" rwaccess="W"/> 
		<bitfield id="HOST_POWER_OFF" width="1" begin="12" end="12" resetval="0x0" description="Power Down CDNSXHCI." range="12" rwaccess="W"/> 
		<bitfield id="DEV_POWER_OFF" width="1" begin="11" end="11" resetval="0x0" description="Power Down USBSS-DEV." range="11" rwaccess="W"/> 
		<bitfield id="DIS_VBUS_DROP" width="1" begin="10" end="10" resetval="0x0" description="Do not disable vbus while bus is dropped.             This bit is valid only if DEV_BUS_DROP or HOST_BUS_DROP are set." range="10" rwaccess="W"/> 
		<bitfield id="HOST_BUS_DROP" width="1" begin="9" end="9" resetval="0x0" description="Drop the bus for Host mode. This bit should be set when Host mode is no longer needed.             It will clear HOST_ACTIVE bit is OTGSTS register" range="9" rwaccess="W"/> 
		<bitfield id="DEV_BUS_DROP" width="1" begin="8" end="8" resetval="0x0" description="Drop the bus for Device mode. This bit should be set when Device mode is no longer needed.             It will clear DEV_ACTIVE bit is OTGSTS register" range="8" rwaccess="W"/> 
		<bitfield id="DEV_SESS_VLD_USE_CLR" width="1" begin="7" end="7" resetval="0x0" description="Device should use a_vbus_vld as vbus valid indication.             This bit should be set in the same time when DEV_BUS_REQ" range="7" rwaccess="W"/> 
		<bitfield id="DEV_SESS_VLD_USE_SET" width="1" begin="6" end="6" resetval="0x0" description="Device should use b_sess_vld as vbus valid indication.             This bit should be set in the same time when DEV_BUS_REQ" range="6" rwaccess="W"/> 
		<bitfield id="A_DEV_DIS" width="1" begin="5" end="5" resetval="0x0" description="Configure OTG as B-Device. It is only valid if OTG mode is enabled.             This bit should be set in the same time when OTG_EN" range="5" rwaccess="W"/> 
		<bitfield id="A_DEV_EN" width="1" begin="4" end="4" resetval="0x0" description="Configure OTG as A-Device. It is only valid if OTG mode is enabled.             This bit should be set in the same time when OTG_EN" range="4" rwaccess="W"/> 
		<bitfield id="OTG_DIS" width="1" begin="3" end="3" resetval="0x0" description="Disable OTG mode.             It will clear OTG_IS_ENABLED bit is OTGSTS register" range="3" rwaccess="W"/> 
		<bitfield id="OTG_EN" width="1" begin="2" end="2" resetval="0x0" description="Enable OTG mode.             It will set OTG_IS_ENABLED bit is OTGSTS register" range="2" rwaccess="W"/> 
		<bitfield id="HOST_BUS_REQ" width="1" begin="1" end="1" resetval="0x0" description="Request the bus for Host mode.             It will set HOST_ACTIVE bit is OTGSTS register" range="1" rwaccess="W"/> 
		<bitfield id="DEV_BUS_REQ" width="1" begin="0" end="0" resetval="0x0" description="Request the bus for Device mode.             It will set DEV_ACTIVE bit is OTGSTS register" range="0" rwaccess="W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_OTGSTS" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_OTGSTS" offset="0x14" width="32" description="OTGSTS">
		<bitfield id="VBUS_VALID_PHY" width="1" begin="31" end="31" resetval="0x0" description="PHY VBUS valid comparator status" range="31" rwaccess="R"/> 
		<bitfield id="SESS_VALID_PHY" width="1" begin="30" end="30" resetval="0x0" description="PHY Session valid comparator status" range="30" rwaccess="R"/> 
		<bitfield id="HOST_DISCONNECT_PHY" width="1" begin="29" end="29" resetval="0x0" description="PHY hostdisconnect status" range="29" rwaccess="R"/> 
		<bitfield id="IDDIG_PHY" width="1" begin="28" end="28" resetval="0x0" description="PHY UTMI iddig status" range="28" rwaccess="R"/> 
		<bitfield id="DEV_READY" width="1" begin="27" end="27" resetval="0x0" description="Device mode is turned on. registers in USBSS-DEV domain are accessible through APB" range="27" rwaccess="R"/> 
		<bitfield id="XHC_READY" width="1" begin="26" end="26" resetval="0x0" description="Host mode is turned on. registers in CDNSXHCI AUX domain are accessible through APB" range="26" rwaccess="R"/> 
		<bitfield id="B_HNP_EN" width="1" begin="25" end="25" resetval="0x0" description="SetFeature[b_hnp_enable] has been accepted." range="25" rwaccess="R"/> 
		<bitfield id="RSVD4" width="1" begin="24" end="24" resetval="0x0" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.           Note: At present the fields are implemented as RO." range="24" rwaccess="R"/> 
		<bitfield id="A_SET_B_HNP_EN" width="1" begin="23" end="23" resetval="0x0" description="SetFeature[b_hnp_enable] has been sent and is valid." range="23" rwaccess="R"/> 
		<bitfield id="RSVD3" width="1" begin="22" end="22" resetval="0x0" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.           Note: At present the fields are implemented as RO." range="22" rwaccess="R"/> 
		<bitfield id="LINESTATE" width="2" begin="21" end="20" resetval="0x0" description="PHY UTMI linestate status" range="21 - 20" rwaccess="R"/> 
		<bitfield id="SRP_DET_NOT_COMPLIANT_DEV" width="1" begin="19" end="19" resetval="0x0" description="OTG A-device detected not compilant device.             If this bit is set then OTG A-device should disable SRP detection until not compilant device is 	    disconnected [SRP_NOT_COMP_DEV_REMOVED_INT]" range="19" rwaccess="R"/> 
		<bitfield id="SRP_INITIAL_CONDITION_MET" width="1" begin="18" end="18" resetval="0x0" description="SRP initial condition are met.             OTG B-device software should issue SRP puluse onli if this bit is set." range="18" rwaccess="R"/> 
		<bitfield id="D_WRST_FOR_SWAP" width="1" begin="17" end="17" resetval="0x0" description="Upcoming Warm Reset will be received for Role Swapping from Peripheral to Host." range="17" rwaccess="R"/> 
		<bitfield id="DEV_DEVEN_FORCE" width="1" begin="16" end="16" resetval="0x0" description="Device forcing DEVEN bit is enabled." range="16" rwaccess="R"/> 
		<bitfield id="H_WRST_FOR_SWAP" width="1" begin="15" end="15" resetval="0x0" description="Upcoming Warm Reset will be generated for Role Swapping from Host to Peripheral." range="15" rwaccess="R"/> 
		<bitfield id="STRAP" width="3" begin="14" end="12" resetval="0x0" description="Value of the strap pins.             000 - no default configuration             010 - Controller initiall configured as Host             100 - Controller initially configured as Device             other - Reserved [might be used for Type-C]" range="14 - 12" rwaccess="R"/> 
		<bitfield id="OTG_NRDY" width="1" begin="11" end="11" resetval="0x0" description="OTG Controller not ready. Software shall not read nor write any register except OTGISTS if this bit is set." range="11" rwaccess="R"/> 
		<bitfield id="DEV_SESS_VLD_USE" width="1" begin="10" end="10" resetval="0x1" description="Device mode vbus valid indication:             0: a_vbus_vld is used as vbus valid             1: b_sess_vld is used as vbus valid" range="10" rwaccess="R"/> 
		<bitfield id="DEV_VBUS_DEB_SHORT" width="1" begin="9" end="9" resetval="0x0" description="Device forcing short VBUS decounce is enabled." range="9" rwaccess="R"/> 
		<bitfield id="SS_PERIPH_DISABLED" width="1" begin="8" end="8" resetval="0x0" description="SuperSpeed device functionality is disabled. Port will be operating at USB 2.0 speed." range="8" rwaccess="R"/> 
		<bitfield id="SS_HOST_DISABLED" width="1" begin="7" end="7" resetval="0x0" description="SuperSpeed host functionality is disabled. Port will be operating at USB 2.0 speed." range="7" rwaccess="R"/> 
		<bitfield id="OTG_MODE" width="1" begin="6" end="6" resetval="0x0" description="OTG mode:             0 - A-Device             1 - B-Device             Valid only if OTG_IS_ENABLED is 1." range="6" rwaccess="R"/> 
		<bitfield id="OTG_IS_ENABLED" width="1" begin="5" end="5" resetval="0x0" description="OTG functionality is enabled" range="5" rwaccess="R"/> 
		<bitfield id="HOST_ACTIVE" width="1" begin="4" end="4" resetval="0x0" description="Device mode is active.             NOTE: It is possible that Host is in inactive state [even turned off] while HOST_ACTIVE is 1." range="4" rwaccess="R"/> 
		<bitfield id="DEV_ACTIVE" width="1" begin="3" end="3" resetval="0x0" description="Device mode is active.             NOTE: It is possible that Device is in inactive state [even turned off] while DEV_ACTIVE is 1." range="3" rwaccess="R"/> 
		<bitfield id="SESSION_VALID" width="1" begin="2" end="2" resetval="0x0" description="The sessionvalid status visible to the controller" range="2" rwaccess="R"/> 
		<bitfield id="VBUS_VALID" width="1" begin="1" end="1" resetval="0x0" description="The vbusvalid status visible to the controller" range="1" rwaccess="R"/> 
		<bitfield id="ID_VALUE" width="1" begin="0" end="0" resetval="0x0" description="Current value of the ID pin visible to the controller.  	        It is only valid when idpullup in PORTOVERRIDE_TYPE register is set to '1'. ID_VALUE must be valid within 50ms after idpullup is set to '1'" range="0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_OTGSTATE" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_OTGSTATE" offset="0x18" width="32" description="OTGSTATE">
		<bitfield id="RSVD3" width="10" begin="31" end="22" resetval="0x0" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.           Note: At present the fields are implemented as RO." range="31 - 22" rwaccess="R"/> 
		<bitfield id="HOST_POWER_STATE" width="3" begin="21" end="19" resetval="0x5" description="Current state of the Host power controlling FSM:             3'b000 : POWER_IDLE             3'b001 : POWER_OFF_ACK             3'b010 : POWER_OFF_MAIN_ACK             3'b011 : POWER_OFF             3'b100 : POWER_ON_REQ             3'b101 : POWER_ISO_DIS             3'b110 : POWER_ON             3'b111 : POWER_ON_READY" range="21 - 19" rwaccess="R"/> 
		<bitfield id="DEV_POWER_STATE" width="3" begin="18" end="16" resetval="0x5" description="Current state of the Device power controlling FSM:             3'b000 : POWER_IDLE             3'b001 : POWER_OFF_ACK             3'b010 : POWER_OFF_MAIN_ACK             3'b011 : POWER_OFF             3'b100 : POWER_ON_REQ             3'b101 : POWER_ISO_DIS             3'b110 : POWER_ON             3'b111 : POWER_ON_READY" range="18 - 16" rwaccess="R"/> 
		<bitfield id="RSVD2" width="2" begin="15" end="14" resetval="0x0" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.           Note: At present the fields are implemented as RO." range="15 - 14" rwaccess="R"/> 
		<bitfield id="UTMI_CTRL" width="2" begin="13" end="12" resetval="0x0" description="Current state of the USB2 UTMI mux selector.             2'b00 : Both modes off. OTG takes control over UTMI [SRP,BC]                      2'b01 : Host active.                     2'b10 : Device active.                 2'b11 : Illegal [both modes off]" range="13 - 12" rwaccess="R"/> 
		<bitfield id="PIPE_CTRL" width="2" begin="11" end="10" resetval="0x0" description="Current state of the USB3 PIPE mux selector.             2'b00 : Both modes off.                      2'b01 : Host active.                     2'b10 : Device active.                 2'b11 : Illegal [both modes off]" range="11 - 10" rwaccess="R"/> 
		<bitfield id="APB_AXI_CTRL" width="2" begin="9" end="8" resetval="0x0" description="Current state of the ABP/AXI mux selector.             2'b00 : Both modes off.                      2'b01 : Host active.                     2'b10 : Device active.                 2'b11 : Illegal [both modes off]" range="9 - 8" rwaccess="R"/> 
		<bitfield id="RSVD1" width="2" begin="7" end="6" resetval="0x0" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.           Note: At present the fields are implemented as RO." range="7 - 6" rwaccess="R"/> 
		<bitfield id="HOST_OTG_STATE" width="3" begin="5" end="3" resetval="0x0" description="Current state of the OTG Host FSM.             3'b000 : H_IDLE             3'b001 : H_VBUS_ON             3'b010 : H_VBUS_FAILED             3'b011 : H_OTG_HOST_MODE             3'b100 : H_HOST_MODE             3'b101 : H_SWITCH_TO_DEVICE             3'b110 : H_A_SUSPEND             3'b111 : H_WAIT_VBUS_FALL" range="5 - 3" rwaccess="R"/> 
		<bitfield id="DEV_OTG_STATE" width="3" begin="2" end="0" resetval="0x0" description="Current state of the OTG Device FSM.             3'b000 : DEV_IDLE             3'b001 : DEV_MODE             3'b010 : DEV_SRP             3'b011 : DEV_WAIT_VBUS_FALL             3'b100 : DEV_SWITCH_TO_HOST             3'b101 : DEV_WAIT_FOR_CONN" range="2 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_OTGIEN" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_OTGIEN" offset="0x20" width="32" description="OTGIEN">
		<bitfield id="DM_VLGC_COMP_RISE_INT_EN" width="1" begin="31" end="31" resetval="0x0" description="DM VLGC comparator rise detect interrupt enable" range="31" rwaccess="R/W"/> 
		<bitfield id="DCD_COMP_FALL_INT_EN" width="1" begin="30" end="30" resetval="0x0" description="DCD comparator fall detect interrupt enable" range="30" rwaccess="R/W"/> 
		<bitfield id="DCD_COMP_RISE_INT_EN" width="1" begin="29" end="29" resetval="0x0" description="DCD comparator rise detect interrupt enable" range="29" rwaccess="R/W"/> 
		<bitfield id="DP_VDAT_REF_RISE_INT_EN" width="1" begin="28" end="28" resetval="0x0" description="DP VDAT comparator rise detect interrupt enable" range="28" rwaccess="R/W"/> 
		<bitfield id="DM_VDAT_REF_RISE_INT_EN" width="1" begin="27" end="27" resetval="0x0" description="DM VDAT comparator rise detect interrupt enable" range="27" rwaccess="R/W"/> 
		<bitfield id="RID_A_RISE_INT_EN" width="1" begin="26" end="26" resetval="0x0" description="RID A comparator rise detect interrupt enable" range="26" rwaccess="R/W"/> 
		<bitfield id="RID_B_RISE_INT_EN" width="1" begin="25" end="25" resetval="0x0" description="RID B comparator rise detect interrupt enable" range="25" rwaccess="R/W"/> 
		<bitfield id="RID_C_RISE_INT_EN" width="1" begin="24" end="24" resetval="0x0" description="RID C comparator rise detect interrupt enable" range="24" rwaccess="R/W"/> 
		<bitfield id="RID_GND_RISE_INT_EN" width="1" begin="23" end="23" resetval="0x0" description="RID GND comparator rise detect interrupt enable" range="23" rwaccess="R/W"/> 
		<bitfield id="RID_FLOAT_RISE_INT_EN" width="1" begin="22" end="22" resetval="0x0" description="RID floating comparator rise detect interrupt enable" range="22" rwaccess="R/W"/> 
		<bitfield id="RID_FLOAT_FALL_INT_EN" width="1" begin="21" end="21" resetval="0x0" description="RID floating comparator detect interrupt enable" range="21" rwaccess="R/W"/> 
		<bitfield id="H_WRST_GEN_CMPL_INT_EN" width="1" begin="20" end="20" resetval="0x0" description="Host Warm Reset generation completed interrupt enable." range="20" rwaccess="R/W"/> 
		<bitfield id="H_POLL_ENTRY_INT_EN" width="1" begin="19" end="19" resetval="0x0" description="Host Polling state entry interrupt enable." range="19" rwaccess="R/W"/> 
		<bitfield id="TIMER_TMOUT_INT_EN" width="1" begin="18" end="18" resetval="0x0" description="Timer timeout interrupt enable." range="18" rwaccess="R/W"/> 
		<bitfield id="TB_AIDL_BDIS_MIN_TMOUT_INT_EN" width="1" begin="17" end="17" resetval="0x0" description="The bus has been in Idle state for the required time during HNP interrupt enable." range="17" rwaccess="R/W"/> 
		<bitfield id="TB_ASE0_BRST_TMOUT_INT_EN" width="1" begin="16" end="16" resetval="0x0" description="No response from A-Device to HNP interrupt enable." range="16" rwaccess="R/W"/> 
		<bitfield id="SRP_CMPL_INT_EN" width="1" begin="15" end="15" resetval="0x0" description="SRP completed interrupt enable." range="15" rwaccess="R/W"/> 
		<bitfield id="SRP_FAIL_INT_EN" width="1" begin="14" end="14" resetval="0x0" description="No response from SRP from A-Device interrupt enable." range="14" rwaccess="R/W"/> 
		<bitfield id="OVERCURRENT_INT_EN" width="1" begin="13" end="13" resetval="0x0" description="Overcurrent condition detected interrupt enable." range="13" rwaccess="R/W"/> 
		<bitfield id="SRP_NOT_COMP_DEV_REMOVED_INT_EN" width="1" begin="12" end="12" resetval="0x0" description="Non cmpliant device disconnect interrupt enable" range="12" rwaccess="R/W"/> 
		<bitfield id="SRP_DET_INT_EN" width="1" begin="11" end="11" resetval="0x0" description="SRP pulse detected interrupt enable.             NOTE: SRP detection can be enabled only if core is enabled to work as a A-device [OTGSTS.OTG_MODE=0]" range="11" rwaccess="R/W"/> 
		<bitfield id="TA_BIDL_ADIS_TMOUT_INT_EN" width="1" begin="10" end="10" resetval="0x0" description="No activity from B-Device timeout interrupt enable." range="10" rwaccess="R/W"/> 
		<bitfield id="TA_AIDL_BDIS_TMOUT_INT_EN" width="1" begin="9" end="9" resetval="0x0" description="No response from B-Device for HNP interrupt enable." range="9" rwaccess="R/W"/> 
		<bitfield id="ADP_PROBE_COMPLETED_INT_EN" width="1" begin="8" end="8" resetval="0x0" description="ADP probe completed interrupt enable" range="8" rwaccess="R/W"/> 
		<bitfield id="PROBE_RISE_INT_EN" width="1" begin="7" end="7" resetval="0x0" description="ADP probe comparator rise detected interrupt enable" range="7" rwaccess="R/W"/> 
		<bitfield id="SENSE_RISE_INT_EN" width="1" begin="6" end="6" resetval="0x0" description="ADP sense comparator rise detected interrupt enable" range="6" rwaccess="R/W"/> 
		<bitfield id="VBUSVALID_FALL_INT_EN" width="1" begin="5" end="5" resetval="0x0" description="Vbusvalid fall detected interrupt enable." range="5" rwaccess="R/W"/> 
		<bitfield id="VBUSVALID_RISE_INT_EN" width="1" begin="4" end="4" resetval="0x0" description="Vbusvalid fall detected interrupt enable." range="4" rwaccess="R/W"/> 
		<bitfield id="OTGSESSVALID_FALL_INT_EN" width="1" begin="3" end="3" resetval="0x0" description="Otgsessvalid fall detected interrupt enable." range="3" rwaccess="R/W"/> 
		<bitfield id="OTGSESSVALID_RISE_INT_EN" width="1" begin="2" end="2" resetval="0x0" description="Otgsessvalid rise detected interrupt enable." range="2" rwaccess="R/W"/> 
		<bitfield id="VBUS_ON_FAILED_INT_EN" width="1" begin="1" end="1" resetval="0x0" description="Enabling Vbus by A-Device has failed interrupt enable." range="1" rwaccess="R/W"/> 
		<bitfield id="ID_CHANGE_INT_EN" width="1" begin="0" end="0" resetval="0x0" description="ID change interrupt enable" range="0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_OTGIVECT" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_OTGIVECT" offset="0x24" width="32" description="OTGIVECT">
		<bitfield id="DM_VLGC_COMP_RISE_INT" width="1" begin="31" end="31" resetval="0x0" description="DM VLGC comparator rise detect interrupt" range="31" rwaccess="R/W1TC"/> 
		<bitfield id="DCD_COMP_FALL_INT" width="1" begin="30" end="30" resetval="0x0" description="DCD comparator fall detect interrupt" range="30" rwaccess="R/W1TC"/> 
		<bitfield id="DCD_COMP_RISE_INT" width="1" begin="29" end="29" resetval="0x0" description="DCD comparator rise detect interrupt" range="29" rwaccess="R/W1TC"/> 
		<bitfield id="DP_VDAT_REF_RISE_INT" width="1" begin="28" end="28" resetval="0x0" description="DP VDAT comparator rise detect interrupt" range="28" rwaccess="R/W1TC"/> 
		<bitfield id="DM_VDAT_REF_RISE_INT" width="1" begin="27" end="27" resetval="0x0" description="DM VDAT comparator rise detect interrupt" range="27" rwaccess="R/W1TC"/> 
		<bitfield id="RID_A_RISE_INT" width="1" begin="26" end="26" resetval="0x0" description="RID A comparator rise detect interrupt" range="26" rwaccess="R/W1TC"/> 
		<bitfield id="RID_B_RISE_INT" width="1" begin="25" end="25" resetval="0x0" description="RID B comparator rise detect interrupt" range="25" rwaccess="R/W1TC"/> 
		<bitfield id="RID_C_RISE_INT" width="1" begin="24" end="24" resetval="0x0" description="RID C comparator rise detect interrupt" range="24" rwaccess="R/W1TC"/> 
		<bitfield id="RID_GND_RISE_INT" width="1" begin="23" end="23" resetval="0x0" description="RID GND comparator rise detect interrupt" range="23" rwaccess="R/W1TC"/> 
		<bitfield id="RID_FLOAT_RISE_INT" width="1" begin="22" end="22" resetval="0x0" description="RID floating comparator rise detect interrupt" range="22" rwaccess="R/W1TC"/> 
		<bitfield id="RID_FLOAT_FALL_INT" width="1" begin="21" end="21" resetval="0x0" description="RID floating comparator detect interrupt" range="21" rwaccess="R/W1TC"/> 
		<bitfield id="H_WRST_GEN_CMPL_INT" width="1" begin="20" end="20" resetval="0x0" description="Host Warm Reset generation completed interrupt." range="20" rwaccess="R/W1TC"/> 
		<bitfield id="H_POLLTRY_INT" width="1" begin="19" end="19" resetval="0x0" description="Host Polling state entry interrupt." range="19" rwaccess="R/W1TC"/> 
		<bitfield id="TIMER_TMOUT_INT" width="1" begin="18" end="18" resetval="0x0" description="Timer timeout interrupt." range="18" rwaccess="R/W1TC"/> 
		<bitfield id="TB_AIDL_BDIS_MIN_TMOUT_INT" width="1" begin="17" end="17" resetval="0x0" description="The bus has been in Idle state for the required time during HNP interrupt." range="17" rwaccess="R/W1TC"/> 
		<bitfield id="TB_ASE0_BRST_TMOUT_INT" width="1" begin="16" end="16" resetval="0x0" description="No response from A-Device to HNP interrupt." range="16" rwaccess="R/W1TC"/> 
		<bitfield id="SRP_CMPL_INT" width="1" begin="15" end="15" resetval="0x0" description="SRP completed interrupt." range="15" rwaccess="R/W1TC"/> 
		<bitfield id="SRP_FAIL_INT" width="1" begin="14" end="14" resetval="0x0" description="No response from SRP from A-Device interrupt." range="14" rwaccess="R/W1TC"/> 
		<bitfield id="OVERCURRENT_INT" width="1" begin="13" end="13" resetval="0x0" description="Overcurrent condition detected interrupt." range="13" rwaccess="R/W1TC"/> 
		<bitfield id="SRP_NOT_COMP_DEV_REMOVED_INT" width="1" begin="12" end="12" resetval="0x0" description="Not cmpliant device disconnect detect interrupt." range="12" rwaccess="R/W1TC"/> 
		<bitfield id="SRP_DET_INT" width="1" begin="11" end="11" resetval="0x0" description="SRP pulse detected interrupt." range="11" rwaccess="R/W1TC"/> 
		<bitfield id="TA_BIDL_ADIS_TMOUT_INT" width="1" begin="10" end="10" resetval="0x0" description="No activity from B-Device timeout interrupt." range="10" rwaccess="R/W1TC"/> 
		<bitfield id="TA_AIDL_BDIS_TMOUT_INT" width="1" begin="9" end="9" resetval="0x0" description="No response from B-Device for HNP interrupt." range="9" rwaccess="R/W1TC"/> 
		<bitfield id="ADP_PROBE_COMPLETED_INT" width="1" begin="8" end="8" resetval="0x0" description="ADP completed. Status is reported in OTGADPSTS register." range="8" rwaccess="R/W1TC"/> 
		<bitfield id="PROBE_RISE_INT" width="1" begin="7" end="7" resetval="0x0" description="ADP probe comparator rise detected interrupt" range="7" rwaccess="R/W1TC"/> 
		<bitfield id="SENSE_RISE_INT" width="1" begin="6" end="6" resetval="0x0" description="ADP sense comparator rise detected interrupt" range="6" rwaccess="R/W1TC"/> 
		<bitfield id="VBUSVALID_FALL_INT" width="1" begin="5" end="5" resetval="0x0" description="Vbusvalid fall detected interrupt." range="5" rwaccess="R/W1TC"/> 
		<bitfield id="VBUSVALID_RISE_INT" width="1" begin="4" end="4" resetval="0x0" description="Vbusvalid fall detected interrupt." range="4" rwaccess="R/W1TC"/> 
		<bitfield id="OTGSESSVALID_FALL_INT" width="1" begin="3" end="3" resetval="0x0" description="Otgsessvalid fall detected interrupt." range="3" rwaccess="R/W1TC"/> 
		<bitfield id="OTGSESSVALID_RISE_INT" width="1" begin="2" end="2" resetval="0x0" description="Otgsessvalid rise detected interrupt." range="2" rwaccess="R/W1TC"/> 
		<bitfield id="VBUS_ON_FAILED_INT" width="1" begin="1" end="1" resetval="0x0" description="Enabling Vbus by A-Device has failed.             This bit should be cleared before enabling subsequent connection as host." range="1" rwaccess="R/W1TC"/> 
		<bitfield id="ID_CHANGE_INT" width="1" begin="0" end="0" resetval="0x0" description="ID change interrupt" range="0" rwaccess="R/W1TC"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_CLK_FREQ" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_CLK_FREQ" offset="0x28" width="32" description="CLK_FREQ">
		<bitfield id="CLK_FREQ_KHZ" width="16" begin="31" end="16" resetval="0x32" description="CLK_FREQ_KHZ defines how many cycles are needed to determine 1 ms clock base for stb_clk_predft.              Example:             Let's say that stb_clk_predft frequency is 32kHz. With CLK_FREQ_KHZ set to 32             time base would be 32 cycles of 32khz clock which gives 1 ms" range="31 - 16" rwaccess="R/W"/> 
		<bitfield id="RSVD1" width="16" begin="15" end="0" resetval="0x0" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.           Note: At present the fields are implemented as RO." range="15 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_OTGTMR" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_OTGTMR" offset="0x2C" width="32" description="OTGTMR">
		<bitfield id="ITC_EN" width="1" begin="31" end="31" resetval="0x0" description="ITC ENABLE for device mode             0 - Device IOC and ISP interrupts moderation by OTG_IVECT interrupt from OTGTMR is disabled.             1 - The OTGTMR is used for Device IOC and ISP interrupts moderation. The OTG_IVECT from OTGTMR is not requested." range="31" rwaccess="W"/> 
		<bitfield id="RSVD1" width="10" begin="30" end="21" resetval="0x0" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.           Note: At present the fields are implemented as RO." range="30 - 21" rwaccess="R"/> 
		<bitfield id="TIMER_STOP" width="1" begin="20" end="20" resetval="0x0" description="Stop timer" range="20" rwaccess="W"/> 
		<bitfield id="TIMER_START" width="1" begin="19" end="19" resetval="0x0" description="Start timer" range="19" rwaccess="W"/> 
		<bitfield id="TIMER_WRITE" width="1" begin="18" end="18" resetval="0x0" description="Timer value and units write strobe" range="18" rwaccess="W"/> 
		<bitfield id="TIMEOUT_UNITS" width="2" begin="17" end="16" resetval="0x0" description="Time units:             0 - hundreds of microseconds [valid only if otg controller clock is in MHz range]             1 - milliseconds             2 - tens of milliseconds             3 - hundreds of milliseconds             Valid only if TIMER_WRITE is 1." range="17 - 16" rwaccess="W"/> 
		<bitfield id="TIMEOUT_VALUE" width="16" begin="15" end="0" resetval="0x0" description="Timeout value for timer.             Valid only if TIMER_WRITE is 1." range="15 - 0" rwaccess="W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_OTGSIMULATE" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_OTGSIMULATE" offset="0x40" width="32" description="OTGSIMULATE">
		<bitfield id="RSVD1" width="31" begin="31" end="1" resetval="0x0" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.           Note: At present the fields are implemented as RO." range="31 - 1" rwaccess="R"/> 
		<bitfield id="OTG_CFG_FAST_SIMS" width="1" begin="0" end="0" resetval="0x0" description="Debug Feature. This bit is for simulation modes only. It enables reductions to OTG timings.             '0': Normal timings             '1': Enable fast simulation timing modes             This bit should be written '0' in normal operation" range="0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_OVERRIDE" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_OVERRIDE" offset="0x44" width="32" description="PORT_OVERRIDE
    register can be written when UTMI clock is disabled,
    ASF parity-protected: no">
		<bitfield id="RSVD3" width="4" begin="31" end="28" resetval="0x0" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.           Note: At present the fields are implemented as RO." range="31 - 28" rwaccess="R"/> 
		<bitfield id="OVERRIDE_SLEEPM_SFR" width="1" begin="27" end="27" resetval="0x0" description="SFR sleepm control. Value this bit is passed to PHY sleepm signal.       This bit is valid only with PORT_OVERRIDE. override_sleepm_sel set to '1'." range="27" rwaccess="R/W"/> 
		<bitfield id="OVERRIDE_SLEEPM_SEL" width="1" begin="26" end="26" resetval="0x0" description="sleepm override select. This register allows SW driver override sleepm pin as follows:       0: sleepm is controlled from active controller [host/device/none]       1: sleepm controlled from SFR" range="26" rwaccess="R/W"/> 
		<bitfield id="OVERRIDE_SUSPENDM_SFR" width="1" begin="25" end="25" resetval="0x0" description="SFR suspendm control. Value this bit is passed to PHY suspendm signal.       This bit is valid only with PORT_OVERRIDE. override_suspendm_sel set to '1'." range="25" rwaccess="R/W"/> 
		<bitfield id="OVERRIDE_SUSPENDM_SEL" width="1" begin="24" end="24" resetval="0x0" description=" suspendm override select. This register allows SW driver override suspendm pin as follows:       0: suspendm is controlled from active controller [host/device/none]       1: suspendm controlled from SFR" range="24" rwaccess="R/W"/> 
		<bitfield id="OVERRIDE_XCVRSEL_SFR" width="2" begin="23" end="22" resetval="0x0" description="SFR xcvrselect control.       Value of these bits is passed to PHY xcvrselect signal.       This bit is valid only with PORT_OVERRRIDE. override_opmode_sel set to 1" range="23 - 22" rwaccess="R/W"/> 
		<bitfield id="OVERRIDE_XCVRSEL_SEL" width="1" begin="21" end="21" resetval="0x0" description="xcvrselect override select. This register allows SW driver override xcvrselect pin as follows:       0: xcvrselect is controlled from active controller [host/device]       1: xcvrselect controlled from SFR" range="21" rwaccess="R/W"/> 
		<bitfield id="OVERRIDE_TXBITSTUFF_SFR" width="1" begin="20" end="20" resetval="0x0" description="SFR txbitstuffenable control. Value this bit is passed to PHY txbitstuffenable signal.       This bit is valid only with PORT_OVERRRIDE. override_txbitstuff_sel set to 1." range="20" rwaccess="R/W"/> 
		<bitfield id="OVERRIDE_TXBITSTUFF_SEL" width="1" begin="19" end="19" resetval="0x0" description="txbitstuffenable override select. This register allows SW driver override txbitstuffenable pin as follows:       0: txbitstuffenable is controlled from active controller [host/device]       1: txbitstuffenable controlled from SFR" range="19" rwaccess="R/W"/> 
		<bitfield id="OVERRIDE_OPMODE_SFR" width="2" begin="18" end="17" resetval="0x0" description="SFR opmode control. Value these bits is passed to PHY opmode signal.       This bit is valid only with PORT_OVERRRIDE. override_opmode_sel set to 1." range="18 - 17" rwaccess="R/W"/> 
		<bitfield id="OVERRIDE_OPMODE_SEL" width="1" begin="16" end="16" resetval="0x0" description="opmode override select. This register allows SW driver override opmode pin as follows:       0: opmode is controlled from active controller [host/device]       1: opmode controlled from SFR" range="16" rwaccess="R/W"/> 
		<bitfield id="OVERRIDE_TERMSEL_SFR" width="1" begin="15" end="15" resetval="0x0" description="SFR overcurrent control.       0: overcurrent = 0       1: overcurrent = 1       This bit is valid only with PORT_OVERRRIDE.overcurrent_sel set to '1'.       Note: overcurrent active state is low." range="15" rwaccess="R/W"/> 
		<bitfield id="OVERRIDE_TERMSEL_SEL" width="1" begin="14" end="14" resetval="0x0" description="termselect override select. This register allows SW driver override termselect pin as follows:       0: txbitstuffenable is controlled from active controller [host/device]       1: txbitstuffenable controlled from SFR" range="14" rwaccess="R/W"/> 
		<bitfield id="OVERCURRENT_SFR" width="1" begin="13" end="13" resetval="0x0" description="SFR termselect control. Value this bit is passed to PHY termselect signal.       This bit is valid only with PORT_OVERRRIDE. override_termsel_sel set to 1." range="13" rwaccess="R/W"/> 
		<bitfield id="OVERCURRENT_SEL" width="1" begin="12" end="12" resetval="0x0" description="Overcurrent override select       This register allows SW driver override overcurrent pin as follows:       0: overcurrent is controlled from external FAULT detector       1: overcurrent controlled from SFR" range="12" rwaccess="R/W"/> 
		<bitfield id="SESS_VLD_SFR" width="1" begin="11" end="11" resetval="0x0" description="SFR Vbusvalid/Sessvalid control.       0: Vbusvalid/Sessvalid = 0       1: Vbusvalid/Sessvalid = 1       This bit is valid only with PORT_OVERRRIDE.sess_vld_sel set to '1'." range="11" rwaccess="R/W"/> 
		<bitfield id="SESS_VLD_SEL" width="1" begin="10" end="10" resetval="0x0" description="Vbusvalid/Sessvalid override select.       This register allows SW driver override Vbusvalid/Sessvalid pins as follows:       0: Vbusvalid/Sessvalid are controlled from OTG PHY       1: Vbusvalid/Sessvalid are controlled from SFR" range="10" rwaccess="R/W"/> 
		<bitfield id="IDDIG_SFR" width="1" begin="9" end="9" resetval="0x0" description="SFR iddig control.       0: iddig = 0       1: iddig = 1       This bit is valid only with PORT_OVERRRIDE.iddig_sel set to '1'." range="9" rwaccess="R/W"/> 
		<bitfield id="IDDIG_SEL" width="1" begin="8" end="8" resetval="0x0" description="IDDIG override select.       This register allows SW driver override iddig pin as follows:       0: iddig is controlled from OTG PHY       1: iddig controlled from SFR" range="8" rwaccess="R/W"/> 
		<bitfield id="RSVD2" width="1" begin="7" end="7" resetval="0x0" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.           Note: At present the fields are implemented as RO." range="7" rwaccess="R"/> 
		<bitfield id="DRIVE_VBUS_SFR" width="1" begin="6" end="6" resetval="0x0" description="0: drive_vbus = 0       1: drive_vbus = 1       This bit is valid only with USB2_PORT_OVERRRIDE.drive_vbus_sel set to '1'.       This bit is auto-cleared upon over-current condition. Over-current doesn't disable       vbus forcing." range="6" rwaccess="R/W"/> 
		<bitfield id="DRIVE_VBUS_SEL" width="1" begin="5" end="5" resetval="0x0" description="This register allows SW driver take control over drive_vbus as follows:       0: drive_vbus controlled from OTG controller       1: drive_vbus controlled from SFR" range="5" rwaccess="R/W"/> 
		<bitfield id="RSVD1" width="1" begin="4" end="4" resetval="0x0" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.           Note: At present the fields are implemented as RO." range="4" rwaccess="R"/> 
		<bitfield id="BC_DMPULLDOWN" width="1" begin="3" end="3" resetval="0x0" description="dmpulldown enable                    This bit is valid only with PORT_OVERRRIDE.pulldownctrl_sel set to 1" range="3" rwaccess="R/W"/> 
		<bitfield id="BC_DPPULLDOWN" width="1" begin="2" end="2" resetval="0x0" description="BC dppulldown enable             This bit is valid only with PORT_OVERRRIDE.pulldownctrl_sel set to 1" range="2" rwaccess="R/W"/> 
		<bitfield id="BC_PULLDOWNCTRL" width="1" begin="1" end="1" resetval="0x0" description="pulldowncotrol       1: puldowns are controlled by dppulldown_sfr and dmpulldown_sfr       0: puldowns are controlled by OTG" range="1" rwaccess="R/W"/> 
		<bitfield id="IDPULLUP" width="1" begin="0" end="0" resetval="0x0" description="ID Pin Sample Enable: Active High. Signal that enables the sampling of the analog ID line.       0: Sampling of ID pin is disabled, iddig is not valid       1: Sampling of ID pin is enabled" range="0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_SUSP_CTRL" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_SUSP_CTRL" offset="0x48" width="32" description="SUSP_TIMING_CTRL. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.
    This is a configuration only register, therefore it can be changed by Software only during configuration phase when Power-On Reset (pwrup_rst_n) is asserted.
    ASF parity-protected: no">
		<bitfield id="RSVD1" width="12" begin="31" end="20" resetval="0x0" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.           Note: At present the fields are implemented as RO." range="31 - 20" rwaccess="R"/> 
		<bitfield id="SUSPEND_DELAY_CAPABILITY" width="1" begin="19" end="19" resetval="0x1" description="Suspend delay capability.       This is a configuration only field, therefore it can be changed by Software only during configuration phase when Power-On Reset [pwrup_rst_n] is asserted." range="19" rwaccess="R"/> 
		<bitfield id="SLEEP_RESIDENCY_ENABLE" width="1" begin="18" end="18" resetval="0x0" description="sleep minimum residency enable.       This is a configuration only field, therefore it can be changed by Software only during configuration phase when Power-On Reset [pwrup_rst_n] is asserted." range="18" rwaccess="R/W"/> 
		<bitfield id="SUSPEND_RESIDENCY_ENABLE" width="1" begin="17" end="17" resetval="0x0" description="suspend minimum residency enable.       This is a configuration only field, therefore it can be changed by Software only during configuration phase when Power-On Reset [pwrup_rst_n] is asserted." range="17" rwaccess="R/W"/> 
		<bitfield id="SUSPEND_DELAY_ENABLE" width="1" begin="16" end="16" resetval="0x0" description="suspend delay enable.       This is a configuration only field, therefore it can be changed by Software only during configuration phase when Power-On Reset [pwrup_rst_n] is asserted." range="16" rwaccess="R/W"/> 
		<bitfield id="SUSPEND_RESIDENCY" width="8" begin="15" end="8" resetval="0x3" description="Suspend/Sleep minimum residency time [us].       This is a configuration only field, therefore it can be changed by Software only during configuration phase when Power-On Reset [pwrup_rst_n] is asserted." range="15 - 8" rwaccess="R/W"/> 
		<bitfield id="SUSPEND_DELAY" width="8" begin="7" end="0" resetval="0x16" description="Suspend assertion delay time [us].       This is a configuration only field, therefore it can be changed by Software only during configuration phase when Power-On Reset [pwrup_rst_n] is asserted." range="7 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_PHYRST_CFG" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_PHYRST_CFG" offset="0x4C" width="32" description="USB20 PHY reset workaround config
    ASF parity-protected: no">
		<bitfield id="RSVD3" width="7" begin="31" end="25" resetval="0x0" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.           Note: At present the fields are implemented as RO." range="31 - 25" rwaccess="R"/> 
		<bitfield id="PHYRST_SFR_RST" width="1" begin="24" end="24" resetval="0x0" description="Software USB20 PHy reset:             0 - SW utmi_reset not asserted 			1 - SW utmi_reset asserted" range="24" rwaccess="R/W"/> 
		<bitfield id="RSVD2" width="11" begin="23" end="13" resetval="0x0" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.           Note: At present the fields are implemented as RO." range="23 - 13" rwaccess="R"/> 
		<bitfield id="PHYRST_A_VALUE" width="5" begin="12" end="8" resetval="0x14" description="phyrst_a Rx fail timeout value. 	        Value of this register is used as a timeout value for detecting Rx fail [utmi_rxactive is not up during Rx] 			Value of this register represent maximum number of UTMI clock cycles where utmi_rxactive is expected to rise with respect to Rx start judged by non-idle state utmi_linestate" range="12 - 8" rwaccess="R/W"/> 
		<bitfield id="RSVD1" width="4" begin="7" end="4" resetval="0x0" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.           Note: At present the fields are implemented as RO." range="7 - 4" rwaccess="R"/> 
		<bitfield id="PHYRST_D_ENABLE" width="1" begin="3" end="3" resetval="0x0" description="Reset PHY after each utmi_opmode change from 2'b10 to any other value: 	        0 - disabled 			1 - enabled" range="3" rwaccess="R/W"/> 
		<bitfield id="PHYRST_C_ENABLE" width="1" begin="2" end="2" resetval="0x0" description="Reset PHY after each utmi_opmode change from 2'b01 to any other value: 	        0 - disabled 			1 - enabled" range="2" rwaccess="R/W"/> 
		<bitfield id="PHYRST_B_ENABLE" width="1" begin="1" end="1" resetval="0x0" description="Reset PHY after each transmitted packet in High-Speed: 	        0 - disabled 			1 - enabled" range="1" rwaccess="R/W"/> 
		<bitfield id="PHYRST_A_ENABLE" width="1" begin="0" end="0" resetval="0x0" description="Reset PHY if Rx fail is detected: 	        0 - disabled 			1 - enabled" range="0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_OTGANASTS" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_OTGANASTS" offset="0x50" width="32" description="OTGADPBCSTS">
		<bitfield id="RSVD2" width="7" begin="31" end="25" resetval="0x0" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.           Note: At present the fields are implemented as RO." range="31 - 25" rwaccess="R"/> 
		<bitfield id="ADP_CHRG_TMOUT_DET" width="1" begin="24" end="24" resetval="0x0" description="ADP charge timeout detected" range="24" rwaccess="R"/> 
		<bitfield id="RSVD1" width="3" begin="23" end="21" resetval="0x0" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.           Note: At present the fields are implemented as RO." range="23 - 21" rwaccess="R"/> 
		<bitfield id="RID_A" width="1" begin="20" end="20" resetval="0x0" description="RID A status reg" range="20" rwaccess="R"/> 
		<bitfield id="RID_B" width="1" begin="19" end="19" resetval="0x0" description="RID B status reg" range="19" rwaccess="R"/> 
		<bitfield id="RID_C" width="1" begin="18" end="18" resetval="0x0" description="RID C status reg" range="18" rwaccess="R"/> 
		<bitfield id="RID_GND" width="1" begin="17" end="17" resetval="0x0" description="RID GND status reg" range="17" rwaccess="R"/> 
		<bitfield id="RID_FLOAT" width="1" begin="16" end="16" resetval="0x0" description="RID float status reg" range="16" rwaccess="R"/> 
		<bitfield id="LINESTATE" width="2" begin="15" end="14" resetval="0x0" description="Line State: These signals reflect the current state of the single ended receivers. They are combinatorial             until a 'usable' sieclock is available, then they are synchronized to sieclock. They reflect the current             state of the DP [linestate [0]] and DM [linestate [1]] signals.             00: SE0 [Single Ended Zero]             01: 'J' State             10: 'K' State             11: SE1 [Single Ended One]" range="15 - 14" rwaccess="R"/> 
		<bitfield id="IDDIG" width="1" begin="13" end="13" resetval="0x0" description="ID Pin Status: Indicates whether the connected USB plug is Micro-A or Micro-B. This is only valid when             idpullup is set to '1'. It must be valid within 50ms after idpullup is set to '1'.             0: Connected plug is a Micro-A             1: Connected plug is a Micro-B" range="13" rwaccess="R"/> 
		<bitfield id="RID_A_COMP_STS" width="1" begin="12" end="12" resetval="0x0" description="RID A comparator status             1: RID_A Detected on ID Pin             0: RID_A not Detected on ID Pin" range="12" rwaccess="R"/> 
		<bitfield id="RID_B_COMP_STS" width="1" begin="11" end="11" resetval="0x0" description="RID B comparator status             1: RID_B Detected on ID Pin             0: RID_B not Detected on ID Pin" range="11" rwaccess="R"/> 
		<bitfield id="RID_C_COMP_STS" width="1" begin="10" end="10" resetval="0x0" description="RID C comparator status             1: RID_C Detected on ID Pin             0: RID_C not Detected on ID Pin" range="10" rwaccess="R"/> 
		<bitfield id="RID_GND_COMP_STS" width="1" begin="9" end="9" resetval="0x0" description="RID GND comparator status             1: RID_GND Detected on ID Pin             0: RID_GND not Detected on ID Pin" range="9" rwaccess="R"/> 
		<bitfield id="RID_FLOAT_COMP_STS" width="1" begin="8" end="8" resetval="0x0" description="RID float comparator status             1: RID_FLOAT Detected on ID Pin             0: RID_FLOAT not Detected on ID Pin" range="8" rwaccess="R"/> 
		<bitfield id="SESSEND" width="1" begin="7" end="7" resetval="0x0" description="VBUS Valid: Indicates if the voltage on VBUS is at a valid level for operation [4.4V less than VTH less than 4.75V].             0: VBUS less than 4.4V             1: VBUS > 4.75V" range="7" rwaccess="R"/> 
		<bitfield id="ADP_SENSE_ANA" width="1" begin="6" end="6" resetval="0x0" description="Output of ADP Sense Comparator.             0: VBUS less than 0.2V             1: VBUS > 0.55V" range="6" rwaccess="R"/> 
		<bitfield id="ADP_PROBE_ANA" width="1" begin="5" end="5" resetval="0x0" description="Output of ADP Probe Comparator.             0: VBUS less than 0.6V             1: VBUS > 0.75V" range="5" rwaccess="R"/> 
		<bitfield id="OTGSESSVALID" width="1" begin="4" end="4" resetval="0x0" description="B-Peripheral is Valid: Indicates if the session for a B-Peripheral is valid [0.8V less than VTH less than 4.0V]. The signal             bvalid from OTG 1.3 is now renamed as otgsessvalid.             0: VBUS less than 0.8V             1: VBUS > 4.0V" range="4" rwaccess="R"/> 
		<bitfield id="DCD_COMP_STS" width="1" begin="3" end="3" resetval="0x0" description="Data Contact Detect [DCD] Comparator Status             1: DP line is asserted             0: DP line is not asserted" range="3" rwaccess="R"/> 
		<bitfield id="DM_VLGC_COMP_STS" width="1" begin="2" end="2" resetval="0x0" description="1: DM > VLGC Detected             0: DM less than VLGC Detected             Note: This status shall be re-used from the single ended receiver output of D- whenever             dm_vlgc_comp_en is '1'." range="2" rwaccess="R"/> 
		<bitfield id="DM_VDAT_REF_COMP_STS" width="1" begin="1" end="1" resetval="0x0" description="1: DM > VDAT_REF Detected             0: DM less than VDAT_REF Detected             Note: This status shall be re-used from the single ended receiver output of D- whenever             dm_vdat_ref_comp_en is '1'." range="1" rwaccess="R"/> 
		<bitfield id="DP_VDAT_REF_COMP_STS" width="1" begin="0" end="0" resetval="0x0" description="1: DP > VDAT_REF Detected             0: DP less than VDAT_REF Detected             Note: This status shall be re-used from the single ended receiver output of D+ whenever             dp_vdat_ref_comp_en is '1'." range="0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ADP_RAMP_TIME" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ADP_RAMP_TIME" offset="0x54" width="32" description="ADP_RAMP_TIME">
		<bitfield id="ADP_RAMP_TIME" width="32" begin="31" end="0" resetval="0x0" description="ADP ramp time measurement value.             Software should read this register upon ADP_PROBE_COMPLETED_INT_EN interrupt detection" range="31 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_OTGCTRL1" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_OTGCTRL1" offset="0x58" width="32" description="OTGCTRL1">
		<bitfield id="RSVD2" width="11" begin="31" end="21" resetval="0x0" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.           Note: At present the fields are implemented as RO." range="31 - 21" rwaccess="R"/> 
		<bitfield id="RID_NONFLOAT_COMP_EN" width="1" begin="20" end="20" resetval="0x0" description="1: RID Non-Float Comparator Enabled             0: RID Non-Float Comparator Disabled             Note: This ID Comparator enable is used to detect the presence of RID_A or RID_B or RID_C or             RID_GND when the ID pin is non-floating." range="20" rwaccess="R/W"/> 
		<bitfield id="RID_FLOAT_COMP_EN" width="1" begin="19" end="19" resetval="0x0" description="1: RID Float Comparator Enabled             0: RID Float Comparator Disabled             Note: This ID Comparator enable is used to detect whether the ID line is floating or non-floating. If it is             identified to be non-floating, then rid_nonfloat_comp_en is enabled to check for RID_A or RID_B or             RID_C or RID_GND." range="19" rwaccess="R/W"/> 
		<bitfield id="DP_VDAT_REF_COMP_EN" width="1" begin="18" end="18" resetval="0x0" description="1: DP to VDAT_REF Comparator Enabled             0: DP to VDAT_REF Comparator Disabled" range="18" rwaccess="R/W"/> 
		<bitfield id="DM_VLGC_COMP_EN" width="1" begin="17" end="17" resetval="0x0" description="1: DM to VLGC Comparator Enabled             0: DM to VLGC Comparator Disabled" range="17" rwaccess="R/W"/> 
		<bitfield id="DM_VDAT_REF_COMP_EN" width="1" begin="16" end="16" resetval="0x0" description="1: DM to VDAT_REF Comparator Enabled             0: DM to VDAT_REF Comparator Disabled" range="16" rwaccess="R/W"/> 
		<bitfield id="RSVD1" width="2" begin="15" end="14" resetval="0x0" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.           Note: At present the fields are implemented as RO." range="15 - 14" rwaccess="R"/> 
		<bitfield id="VDP_SRC_EN" width="1" begin="13" end="13" resetval="0x0" description="1: Voltage Source on DP Enabled             0: Voltage Source on DP Disabled" range="13" rwaccess="R/W"/> 
		<bitfield id="VDM_SRC_EN" width="1" begin="12" end="12" resetval="0x0" description="1: Voltage Source on DM Enabled             0: Voltage Source on DM Disabled" range="12" rwaccess="R/W"/> 
		<bitfield id="IDP_SRC_EN" width="1" begin="11" end="11" resetval="0x0" description="1: Current Source on DP Enabled             0: Current Source on DP Disabled" range="11" rwaccess="R/W"/> 
		<bitfield id="IDP_SINK_EN" width="1" begin="10" end="10" resetval="0x0" description="1: Current Sink on DP Enabled             0: Current Sink on DP Disabled" range="10" rwaccess="R/W"/> 
		<bitfield id="IDM_SINK_EN" width="1" begin="9" end="9" resetval="0x0" description="1: Current Sink on DM Enabled             0: Current Sink on DM Disabled" range="9" rwaccess="R/W"/> 
		<bitfield id="BC_EN" width="1" begin="8" end="8" resetval="0x0" description="Battery Charging Circuits Master Enable.             1: BC Enabled             0: BC Disabled" range="8" rwaccess="R/W"/> 
		<bitfield id="ADP_AUTO" width="1" begin="7" end="7" resetval="0x0" description="ADP mode.            If set to 1 ADP probing is controlled by internal FSM.            If set to 0 then software should control ADP sequence." range="7" rwaccess="R/W"/> 
		<bitfield id="DO_ADP_SNS" width="1" begin="6" end="6" resetval="0x0" description="ADP sensing enable in automated mode" range="6" rwaccess="R/W"/> 
		<bitfield id="DO_ADP_PRB" width="1" begin="5" end="5" resetval="0x0" description="ADP probing enable in automated mode" range="5" rwaccess="R/W"/> 
		<bitfield id="ADP_SOURCE_CURRENT_EN" width="1" begin="4" end="4" resetval="0x0" description="When this signal is high, VBUS is charged to the probe threshold [0.75V]. This signal should be             asserted 5us after the assertion of adp_en.             0: ADP Source Current Enable OFF             1: ADP Source Current Enable ON" range="4" rwaccess="R/W"/> 
		<bitfield id="ADP_SINK_CURRENT_EN" width="1" begin="3" end="3" resetval="0x0" description="When this signal is high, VBUS is discharged to ground. This signal should be asserted 5us after the             assertion of adp_en.             0: ADP Sink Current Enable OFF             1: ADP Sink Current Enable ON" range="3" rwaccess="R/W"/> 
		<bitfield id="ADP_SENSE_EN" width="1" begin="2" end="2" resetval="0x0" description="This signal enables the probe mode of the ADP. During this mode, sense comparators and the current             sources will be ON based on the source and sink current enables.             0: ADP Probe Sense OFF             1: ADP Probe Sense ON" range="2" rwaccess="R/W"/> 
		<bitfield id="ADP_PROBE_EN" width="1" begin="1" end="1" resetval="0x0" description="This signal enables the probe mode of the ADP. During this mode, probe comparators and the current             sources will be ON based on the source and sink current enables.             0: ADP Probe Mode OFF             1: ADP Probe Mode ON" range="1" rwaccess="R/W"/> 
		<bitfield id="ADP_EN" width="1" begin="0" end="0" resetval="0x0" description="ADP Feature Enable. This signal is the master enable for all the ADP PHY logics.             0: ADP Logics are powered OFF             1: ADP Logics are powered ON" range="0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_OTGCTRL2" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_OTGCTRL2" offset="0x5C" width="32" description="OTGCTRL2">
		<bitfield id="T_ADP_DSCHG" width="8" begin="31" end="24" resetval="0x4" description="ADP probing discharge time.             T_ADP_DSCHG = {reg_value} * 1 ms" range="31 - 24" rwaccess="R/W"/> 
		<bitfield id="ADP_CHRG_TMOUT" width="8" begin="23" end="16" resetval="0x32" description="ADP probing timeout value.             Defines maximum time for ADP charging. If this time is reached during charging then adp_chrg_tmout_det bit in OTGADPBCSTS is set             ADP_CHRG_TMOUT = {reg_value} * 1 ms" range="23 - 16" rwaccess="R/W"/> 
		<bitfield id="TB_ADP_PRB" width="8" begin="15" end="8" resetval="0x200" description="B-device ADP probing period.             TB_ADP_PRB = {reg_value} * 10 ms" range="15 - 8" rwaccess="R/W"/> 
		<bitfield id="TA_ADP_PRB" width="8" begin="7" end="0" resetval="0x175" description="A-device ADP probing period.             TA_ADP_PRB = {reg_value} * 10 ms" range="7 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_VBUSVALID_DBNC_CFG" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_VBUSVALID_DBNC_CFG" offset="0x60" width="32" description="VBUSVALID_DBNC_CFG
    ASF parity-protected: no">
		<bitfield id="VBUSVALID_DBNC_DIS" width="1" begin="31" end="31" resetval="0x1" description="Vbusvalid debounce disable" range="31" rwaccess="R/W"/> 
		<bitfield id="RSVD2" width="5" begin="30" end="26" resetval="0x0" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.           Note: At present the fields are implemented as RO." range="30 - 26" rwaccess="R"/> 
		<bitfield id="VBUSVALID_FALL_DBNC_VAL" width="10" begin="25" end="16" resetval="0x10" description="Vbusvalid off debounce:       Debounce timer value = reg value x 100us" range="25 - 16" rwaccess="R/W"/> 
		<bitfield id="RSVD1" width="6" begin="15" end="10" resetval="0x0" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.           Note: At present the fields are implemented as RO." range="15 - 10" rwaccess="R"/> 
		<bitfield id="VBUSVALID_RISE_DBNC_VAL" width="10" begin="9" end="0" resetval="0x10" description="Vbusvalid on debounce:       Debounce timer value = reg value x 100us" range="9 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_SESSVALID_DBNC_CFG" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_SESSVALID_DBNC_CFG" offset="0x64" width="32" description="SESSVALID_DBNC_CFG
    ASF parity-protected: no">
		<bitfield id="SESSVALID_DBNC_DIS" width="1" begin="31" end="31" resetval="0x1" description="Sessvalid debounce disable" range="31" rwaccess="R/W"/> 
		<bitfield id="RSVD2" width="5" begin="30" end="26" resetval="0x0" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.           Note: At present the fields are implemented as RO." range="30 - 26" rwaccess="R"/> 
		<bitfield id="SESSVALID_OFF_DBNC_VAL" width="10" begin="25" end="16" resetval="0x10" description="Sessvalid off debounce:       Debounce timer value = reg value x 100us" range="25 - 16" rwaccess="R/W"/> 
		<bitfield id="RSVD1" width="6" begin="15" end="10" resetval="0x0" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.           Note: At present the fields are implemented as RO." range="15 - 10" rwaccess="R"/> 
		<bitfield id="SESSVALID_ON_DBNC_VAL" width="10" begin="9" end="0" resetval="0x256" description="Sessvalid on debounce:       Debounce timer value = reg value x 100us" range="9 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_IDDIG_DBNC_CFG" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_IDDIG_DBNC_CFG" offset="0x68" width="32" description="IDDIG_DBNC_CFG
    ASF parity-protected: no">
		<bitfield id="IDDIG_DBNC_DIS" width="1" begin="31" end="31" resetval="0x1" description="Iddig debounce disable" range="31" rwaccess="R/W"/> 
		<bitfield id="RSVD2" width="5" begin="30" end="26" resetval="0x0" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.           Note: At present the fields are implemented as RO." range="30 - 26" rwaccess="R"/> 
		<bitfield id="IDDIG_OFF_DBNC_VAL" width="10" begin="25" end="16" resetval="0x10" description="Sessvalid off debounce:       Debounce timer value = reg value x 100us" range="25 - 16" rwaccess="R/W"/> 
		<bitfield id="RSVD1" width="6" begin="15" end="10" resetval="0x0" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.           Note: At present the fields are implemented as RO." range="15 - 10" rwaccess="R"/> 
		<bitfield id="IDDIG_ON_DBNC_VAL" width="10" begin="9" end="0" resetval="0x10" description="Sessvalid on debounce:       Debounce timer value = reg value x 100us" range="9 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_DB_ASF_MEM_MASK" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_DB_ASF_MEM_MASK" offset="0x8C" width="32" description="Cadence Device ID Register
    ASF parity-protected: no">
		<bitfield id="DB_ASF_MEM_MASK" width="32" begin="31" end="0" resetval="0x4294967295" description="Debug Feature. 0-DISABLE/1-ENABLE ECC check for memories" range="31 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_asf_int_status" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_asf_int_status" offset="0x100" width="32" description="ASF Interrupt Status Register. This register indicates the source of ASF interrupts. The corresponding bit in the mask register must be clear for a bit to be set. If any bit is set in this register the asf_fatal or asf_nonfatal signal will be asserted. Writing to either raw or masked status registers, clear both registers. For test purposes, trigger signal interrupt event by writing to the ASF interrupt status test register.
   ASF parity-protected: no">
		<bitfield id="RSVD2" width="27" begin="31" end="5" resetval="0x0" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.           Note: At present the fields are implemented as RO." range="31 - 5" rwaccess="R"/> 
		<bitfield id="ASF_TRANS_TO_ERR" width="1" begin="4" end="4" resetval="0x0" description="Transaction timeouts error interrupt" range="4" rwaccess="R/W1TC"/> 
		<bitfield id="RSVD1" width="2" begin="3" end="2" resetval="0x0" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.           Note: At present the fields are implemented as RO." range="3 - 2" rwaccess="R"/> 
		<bitfield id="ASF_SRAM_UNCORR_ERR" width="1" begin="1" end="1" resetval="0x0" description="SRAM uncorrectable error interrupt" range="1" rwaccess="R/W1TC"/> 
		<bitfield id="ASF_SRAM_CORR_ERR" width="1" begin="0" end="0" resetval="0x0" description="SRAM correctable error interrupt" range="0" rwaccess="R/W1TC"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_asf_int_raw_status" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_asf_int_raw_status" offset="0x104" width="32" description="ASF Interrupt Raw Status Register. A bit set in this raw register indicates a source of ASF fault in the correspoding feature. Writing to either raw or masked status registers, clear both registers. For test purposes, trigger signal interrupt event by writing to the ASF interrrupt status test register.
   ASF parity-protected: no">
		<bitfield id="RSVD2" width="27" begin="31" end="5" resetval="0x0" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.           Note: At present the fields are implemented as RO." range="31 - 5" rwaccess="R"/> 
		<bitfield id="ASF_TRANS_TO_ERR" width="1" begin="4" end="4" resetval="0x0" description="Transaction timeouts error interrupt" range="4" rwaccess="R/W1TC"/> 
		<bitfield id="RSVD1" width="2" begin="3" end="2" resetval="0x0" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.           Note: At present the fields are implemented as RO." range="3 - 2" rwaccess="R"/> 
		<bitfield id="ASF_SRAM_UNCORR_ERR" width="1" begin="1" end="1" resetval="0x0" description="SRAM uncorrectable error interrupt" range="1" rwaccess="R/W1TC"/> 
		<bitfield id="ASF_SRAM_CORR_ERR" width="1" begin="0" end="0" resetval="0x0" description="SRAM correctable error interrupt" range="0" rwaccess="R/W1TC"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_asf_int_mask" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_asf_int_mask" offset="0x108" width="32" description="The ASF interrupt mask register indicating which interrupt bits in the ASF interrupt status register are masked. All bits are set at reset. Clear the individual bit to enable the corresponding interrupt.
   ASF parity-protected: yes (only byte 0 protected)">
		<bitfield id="RSVD2" width="27" begin="31" end="5" resetval="0x0" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.           Note: At present the fields are implemented as RO." range="31 - 5" rwaccess="R"/> 
		<bitfield id="ASF_TRANS_TO_ERR_MASK" width="1" begin="4" end="4" resetval="0x1" description="Mask bit for transaction timeouts error interrupt." range="4" rwaccess="R/W"/> 
		<bitfield id="RSVD1" width="2" begin="3" end="2" resetval="0x0" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.           Note: At present the fields are implemented as RO." range="3 - 2" rwaccess="R"/> 
		<bitfield id="ASF_SRAM_UNCORR_ERR_MASK" width="1" begin="1" end="1" resetval="0x1" description="Mask bit for SRAM uncorrectable error interrupt." range="1" rwaccess="R/W"/> 
		<bitfield id="ASF_SRAM_CORR_ERR_MASK" width="1" begin="0" end="0" resetval="0x1" description="Mask bit for SRAM correctable error interrupt." range="0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_asf_int_test" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_asf_int_test" offset="0x10C" width="32" description="The ASF interrupt test register emulate hardware even. Write one to individual bit to trigger single event in (masked and raw) status registers according to mask and will generate interrrupt accordingly.
   ASF parity-protected: no">
		<bitfield id="RSVD2" width="27" begin="31" end="5" resetval="0x0" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.           Note: At present the fields are implemented as RO." range="31 - 5" rwaccess="R"/> 
		<bitfield id="ASF_TRANS_TO_ERR_TEST" width="1" begin="4" end="4" resetval="0x0" description="Test bit for transaction timeouts error interrupt." range="4" rwaccess="W"/> 
		<bitfield id="RSVD1" width="2" begin="3" end="2" resetval="0x0" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.           Note: At present the fields are implemented as RO." range="3 - 2" rwaccess="R"/> 
		<bitfield id="ASF_SRAM_UNCORR_ERR_TEST" width="1" begin="1" end="1" resetval="0x0" description="Test bit for SRAM uncorrectable error interrupt." range="1" rwaccess="W"/> 
		<bitfield id="ASF_SRAM_CORR_ERR_TEST" width="1" begin="0" end="0" resetval="0x0" description="Test bit for SRAM correctable error interrupt." range="0" rwaccess="W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_asf_fatal_nonfatal_select" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_asf_fatal_nonfatal_select" offset="0x110" width="32" description="The fatal or non-fatal interrupt register selects whether a fatal (asf_int_fatal) or non-fatal (asf_int_nonfatal) interrupt is triggered. If the bit of the event will be set to one then fatal interrupt (asf_int_fatal) will be triggered. Otherwise the non-fatal interrupt (asf_int_nonfatal) will be triggered.
   ASF parity-protected: yes (only byte 0 protected)">
		<bitfield id="RSVD2" width="27" begin="31" end="5" resetval="0x0" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.           Note: At present the fields are implemented as RO." range="31 - 5" rwaccess="R"/> 
		<bitfield id="ASF_TRANS_TO_ERR" width="1" begin="4" end="4" resetval="0x1" description="Enable transaction timeouts error interrupt as fatal." range="4" rwaccess="R/W"/> 
		<bitfield id="RSVD1" width="2" begin="3" end="2" resetval="0x0" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.           Note: At present the fields are implemented as RO." range="3 - 2" rwaccess="R"/> 
		<bitfield id="ASF_SRAM_UNCORR_ERR" width="1" begin="1" end="1" resetval="0x1" description="Enable SRAM uncorrectable error interrupt as fatal." range="1" rwaccess="R/W"/> 
		<bitfield id="ASF_SRAM_CORR_ERR" width="1" begin="0" end="0" resetval="0x1" description="Enable SRAM correctable error interrupt as fatal." range="0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_RSVD_6_ASF" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_RSVD_6_ASF" offset="0x114" width="32" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.">
		<bitfield id="RSVD_1" width="32" begin="31" end="0" resetval="0x0" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.           Note: At present the fields are implemented as RO." range="31 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_RSVD_7_ASF" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_RSVD_7_ASF" offset="0x118" width="32" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.">
		<bitfield id="RSVD_1" width="32" begin="31" end="0" resetval="0x0" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.           Note: At present the fields are implemented as RO." range="31 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_RSVD_8_ASF" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_RSVD_8_ASF" offset="0x11C" width="32" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.">
		<bitfield id="RSVD_1" width="32" begin="31" end="0" resetval="0x0" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.           Note: At present the fields are implemented as RO." range="31 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_asf_sram_corr_fault_status" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_asf_sram_corr_fault_status" offset="0x120" width="32" description="Status register for SRAM correctable fault. These fields are updated whenever asf_sram_corr_fault input is active.
   ASF parity-protected: no">
		<bitfield id="ASF_SRAM_CORR_FAULT_INST" width="8" begin="31" end="24" resetval="0x0" description="Last SRAM instance that generated fault." range="31 - 24" rwaccess="R"/> 
		<bitfield id="ASF_SRAM_CORR_FAULT_ADDR" width="24" begin="23" end="0" resetval="0x0" description="Last SRAM address that generated fault." range="23 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_asf_sram_uncorr_fault_status" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_asf_sram_uncorr_fault_status" offset="0x124" width="32" description="Status register for SRAM uncorrectable fault. These fields are updated whenever asf_sram_uncorr_fault input is active.
   ASF parity-protected: no">
		<bitfield id="ASF_SRAM_UNCORR_FAULT_INST" width="8" begin="31" end="24" resetval="0x0" description="Last SRAM instance that generated fault." range="31 - 24" rwaccess="R"/> 
		<bitfield id="ASF_SRAM_UNCORR_FAULT_ADDR" width="24" begin="23" end="0" resetval="0x0" description="Last SRAM address that generated fault." range="23 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_asf_sram_fault_stats" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_asf_sram_fault_stats" offset="0x128" width="32" description="Statistics register for SRAM faults. Note that this register clears when software writes to any field.
   ASF parity-protected: no">
		<bitfield id="ASF_SRAM_FAULT_UNCORR_STATS" width="16" begin="31" end="16" resetval="0x0" description="Count of number of uncorrectable errors if implemented. Count value will saturate at 0xffff." range="31 - 16" rwaccess="R/W1TC"/> 
		<bitfield id="ASF_SRAM_FAULT_CORR_STATS" width="16" begin="15" end="0" resetval="0x0" description="Count of number of correctable errors if implemented. Count value will saturate at 0xffff." range="15 - 0" rwaccess="R/W1TC"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_RSVD_12_ASF" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_RSVD_12_ASF" offset="0x12C" width="32" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.">
		<bitfield id="RSVD_1" width="32" begin="31" end="0" resetval="0x0" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.           Note: At present the fields are implemented as RO." range="31 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_asf_trans_to_ctrl" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_asf_trans_to_ctrl" offset="0x130" width="32" description="Control register to configure the ASF transaction timeout monitors.
   ASF parity-protected: yes (only bytes 0, 1 and 3 protected. Byte 2 is not protected)">
		<bitfield id="ASF_TRANS_TO_EN" width="1" begin="31" end="31" resetval="0x0" description="Enable transaction timeout monitoring." range="31" rwaccess="R/W"/> 
		<bitfield id="RSVD1" width="15" begin="30" end="16" resetval="0x0" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.           Note: At present the fields are implemented as RO." range="30 - 16" rwaccess="R"/> 
		<bitfield id="ASF_TRANS_TO_CTRL" width="16" begin="15" end="0" resetval="0x0" description="Timer value to use for transaction timeout monitor." range="15 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_asf_trans_to_fault_mask" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_asf_trans_to_fault_mask" offset="0x134" width="32" description="Control register to mask out ASF transaction timeout faults from triggering interrupts. On reset, all bits are set to mask out all sources. Clear the corresponding bit to enable the interrupt source. The width of this field is parametrisable and the bit definitions are implementation specific.
   ASF parity-protected: yes">
		<bitfield id="ASF_TRANS_TO_FAULT_MASK" width="32" begin="31" end="0" resetval="0x4294967295" description="Mask register for each ASF transaction timeout fault source." range="31 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_asf_trans_to_fault_status" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_asf_trans_to_fault_status" offset="0x138" width="32" description="Status register for transaction timeouts fault. If a fault occurs the relevant status bit will be set to 1. Each bit can be cleared by software writing 1 to each bit.
   ASF parity-protected: no">
		<bitfield id="RSVD1" width="26" begin="31" end="6" resetval="0x0" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.           Note: At present the fields are implemented as RO." range="31 - 6" rwaccess="R"/> 
		<bitfield id="ASF_TRANS_TIMEOUT_BAXI" width="1" begin="5" end="5" resetval="0x0" description="Status bits for transaction timeouts faults - AXI Timeout [BAXI]" range="5" rwaccess="R/W1TC"/> 
		<bitfield id="ASF_TRANS_TIMEOUT_RAXI" width="1" begin="4" end="4" resetval="0x0" description="Status bits for transaction timeouts faults - AXI Timeout [RAXI]" range="4" rwaccess="R/W1TC"/> 
		<bitfield id="ASF_TRANS_TIMEOUT_ARAXI" width="1" begin="3" end="3" resetval="0x0" description="Status bits for transaction timeouts faults - AXI Timeout [ARAXI]" range="3" rwaccess="R/W1TC"/> 
		<bitfield id="ASF_TRANS_TIMEOUT_WAXI" width="1" begin="2" end="2" resetval="0x0" description="Status bits for transaction timeouts faults - AXI Timeout [WAXI]" range="2" rwaccess="R/W1TC"/> 
		<bitfield id="ASF_TRANS_TIMEOUT_AWAXI" width="1" begin="1" end="1" resetval="0x0" description="Status bits for transaction timeouts faults - AXI Timeout [AWAXI]" range="1" rwaccess="R/W1TC"/> 
		<bitfield id="ASF_TRANS_TIMEOUT_APB" width="1" begin="0" end="0" resetval="0x0" description="Status bit for transaction timeout faults - APB timeout." range="0" rwaccess="R/W1TC"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_RSVD_16_ASF" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_RSVD_16_ASF" offset="0x13C" width="32" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.">
		<bitfield id="RSVD_1" width="32" begin="31" end="0" resetval="0x0" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.           Note: At present the fields are implemented as RO." range="31 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_RSVD_17_ASF" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_RSVD_17_ASF" offset="0x140" width="32" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.">
		<bitfield id="RSVD_1" width="32" begin="31" end="0" resetval="0x0" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.           Note: At present the fields are implemented as RO." range="31 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_RSVD_18_ASF" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_RSVD_18_ASF" offset="0x144" width="32" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.">
		<bitfield id="RSVD_1" width="32" begin="31" end="0" resetval="0x0" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.           Note: At present the fields are implemented as RO." range="31 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_HCIVERSION_CAPLENGTH" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_HCIVERSION_CAPLENGTH" offset="0x10000" width="32" description="HCIVERSION_CAPLENGTH">
		<bitfield id="HCIVERSION" width="16" begin="31" end="16" resetval="0x256" description="Host Controller Interface Version Number [HCIVERSION].              This is a two-byte register containing a BCD encoding of the xHCI specification revision number supported by this host controller. The most significant byte of this register represents a major revision and the least significant byte is the minor revision. e.g. 0100h corresponds to xHCI version 1.0." range="31 - 16" rwaccess="R"/> 
		<bitfield id="RSVD1" width="8" begin="15" end="8" resetval="0x0" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.           Note: At present the fields are implemented as RO." range="15 - 8" rwaccess="R"/> 
		<bitfield id="CAPLENGTH" width="8" begin="7" end="0" resetval="0x128" description="Capability Registers Length [CAPLENGTH].             This register is used as an offset to add to register base to find the beginning of the Operational Register Space." range="7 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_HCSPARAMS1" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_HCSPARAMS1" offset="0x10004" width="32" description="Structural Parameters 1 (HCSPARAMS1). This register defines basic structural parameters supported by this xHC implementation: Number of Device Slots support, Interrupters, Root Hub ports.">
		<bitfield id="MAXPORTS" width="8" begin="31" end="24" resetval="0x2" description="Number of Ports [MaxPorts]. This field specifies the maximum Port Number value, i.e. the highest numbered Port Register Set that are addressable in the Operational Register Space. Valid values are in the range of 1h to FFh.                The value in this field shall reflect the maximum Port Number value assigned by an xHCI Supported Protocol Capability, described in section 7.2 of xHCI specification. Software shall refer to these capabilities to identify whether a specific Port Number is valid, and the protocol supported by the associated Port Register Set." range="31 - 24" rwaccess="R"/> 
		<bitfield id="RSVD1" width="5" begin="23" end="19" resetval="0x0" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.           Note: At present the fields are implemented as RO." range="23 - 19" rwaccess="R"/> 
		<bitfield id="MAXINTRS" width="11" begin="18" end="8" resetval="0x8" description="Number of Interrupters [MaxIntrs]. This field specifies the number of Interrupters implemented on this host controller. Each Interrupter may be allocated to a MSI or MSI-X vector and controls its generation and moderation.             The value of this field determines how many Interrupter Register Sets are addressable in the Runtime Register Space [refer to section 5.5 of xHCI specification]. Valid values are in the range of 1h to 400h. A '0' in this field is undefined." range="18 - 8" rwaccess="R"/> 
		<bitfield id="MAXSLOTS" width="8" begin="7" end="0" resetval="0x64" description="Number of Device Slots [MaxSlots]. This field specifies the maximum number of Device Context Structures and Doorbell Array entries this host controller can support. Valid values are in the range of 1 to 255. The value of 0 is reserved." range="7 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_HCSPARAMS2" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_HCSPARAMS2" offset="0x10008" width="32" description="Structural Parameters 2 (HCSPARAMS 2). This register defines additional xHC structural parameters.">
		<bitfield id="MAXSPBUFLO" width="5" begin="31" end="27" resetval="0x0" description="Max Scratchpad Buffers [Max Scratchpad Bufs Lo]. Default = implementation dependent.             Valid values for Max Scratchpad Buffers [Hi and Lo] are 0-1023. This field indicates the low order 5 bits of the number of Scratchpad Buffers system software shall reserve for the xHC.             Refer to section 4.20 of xHCI specification for more information." range="31 - 27" rwaccess="R"/> 
		<bitfield id="SPR" width="1" begin="26" end="26" resetval="0x1" description="Scratchpad Restore [SPR]. Default = implementation dependent. If Max Scratchpad Buffers is > 0 then this flag indicates whether the xHC uses the Scratchpad Buffers for saving state when executing Save and Restore State operations. If Max Scratchpad Buffers is = 0 then this flag shall be 0. Refer to section 4.23.2 of xHCI specification for more information.             A value of '1' indicates that the xHC requires the integrity of the Scratchpad Buffer space to be maintained across power events.             A value of '0' indicates that the Scratchpad Buffer space may be freed and reallocated between power events." range="26" rwaccess="R"/> 
		<bitfield id="MAXSPBUFHI" width="5" begin="25" end="21" resetval="0x1" description="Max Scratchpad Buffers [Max Scratchpad Bufs Hi]. Default = implementation dependent.             This field indicates the high order 5 bits of the number of Scratchpad Buffers system software shall reserve for the xHC. Refer to section 4.20 of xHCI specification for more information." range="25 - 21" rwaccess="R"/> 
		<bitfield id="RSVD1" width="13" begin="20" end="8" resetval="0x0" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.           Note: At present the fields are implemented as RO." range="20 - 8" rwaccess="R"/> 
		<bitfield id="ERSTMAX" width="4" begin="7" end="4" resetval="0x5" description="Event Ring Segment Table Max [ERST Max]. Default = implementation dependent. Valid values are 0-15. This field determines the maximum value supported the Event Ring Segment Table Base Size registers [5.5.2.3.1], where:             The maximum number of Event Ring Segment Table entries = 2 ^[ERSTMax], e.g. if the ERST Max = 7, then the xHC Event Ring Segment Table[s] supports up to 128 entries, 15 then 32K entries, etc." range="7 - 4" rwaccess="R"/> 
		<bitfield id="IST" width="4" begin="3" end="0" resetval="0x4" description="Isochronous Scheduling Threshold [IST]. Default = implementation dependent. The value in this field indicates to system software the minimum distance [in time] that it is required to stay ahead of the host controller while adding TRBs, in order to have the host controller process them at the correct time. The value shall be specified in terms of number of frames/microframes.             If bit [3] of IST is cleared to '0', software can add a TRB no later than IST[2:0] Microframes before that TRB is scheduled to be executed.             If bit [3] of IST is set to '1', software can add a TRB no later than IST[2:0] Frames before that TRB is scheduled to be executed.             Refer to Section 4.14.2 of xHCI specification for details on how software uses this information for scheduling isochronous transfers." range="3 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_HCSPARAMS3" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_HCSPARAMS3" offset="0x1000C" width="32" description="Structural Parameters 3 (HCSPARAMS3). This register defines link exit latency related structural parameters.">
		<bitfield id="U2DEVEXITLAT" width="16" begin="31" end="16" resetval="0x4" description="U2 Device Exit Latency. Worst case latency to transition from U2 to U0. Applies to all root hub ports.             The following are permissible values:                0000h Zero,             0001h Less than 1 s.,             0002h Less than 2 s.,             ...             07FFh Less than 2047 s.,             0800-FFFFh Reserved" range="31 - 16" rwaccess="R"/> 
		<bitfield id="RSVD1" width="8" begin="15" end="8" resetval="0x0" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.           Note: At present the fields are implemented as RO." range="15 - 8" rwaccess="R"/> 
		<bitfield id="U1DEVEXITLAT" width="8" begin="7" end="0" resetval="0x1" description="U1 Device Exit Latency. Worst case latency to transition a root hub Port Link State [PLS] from U1 to U0. Applies to all root hub ports.              The following are permissible values:                 00h Zero,              01h Less than 1 s.,              02h Less than 2 s.,              ...              0Ah Less than 10 s.,              0B-FFh Reserved." range="7 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_HCCPARAMS" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_HCCPARAMS" offset="0x10010" width="32" description="Capability Parameters (HCCPARAMS). This register defines optional capabilities supported by the xHCI. The default values for all fields in this register are implementation dependent.">
		<bitfield id="XECP" width="16" begin="31" end="16" resetval="0x8192" description="xHCI Extended Capabilities Pointer [xECP]. This field indicates the existence of a capabilities list. The value of this field indicates a relative offset, in 32-bit words, from Base to the beginning of the first extended capability. For example, using the offset of Base is 1000h and the xECP value of 0068h, we can calculate the following effective address of the first extended capability: 1000h + [0068h shifted left 2] -> 1000h + 01A0h -> 11A0h" range="31 - 16" rwaccess="R"/> 
		<bitfield id="MAXPSASIZE" width="4" begin="15" end="12" resetval="0x7" description="Maximum Primary Stream Array Size [MaxPSASize]. This fields identifies the maximum size Primary Stream Array that the xHC supports. The Primary Stream Array size = 2^[MaxPSASize+1]. Valid MaxPSASize values are 0 to 15, where 0 indicates that Streams are not supported." range="15 - 12" rwaccess="R"/> 
		<bitfield id="RSVD1" width="2" begin="11" end="10" resetval="0x0" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.           Note: At present the fields are implemented as RO." range="11 - 10" rwaccess="R"/> 
		<bitfield id="SPC" width="1" begin="9" end="9" resetval="0x1" description="Stopped - Short Packet Capability [SPC]. This flag indicates that the host controller implementation is capable of generating a Stopped - Short Packet Completion Code. Refer to section 4.6.9 of xHCI specification for more information." range="9" rwaccess="R"/> 
		<bitfield id="PAE" width="1" begin="8" end="8" resetval="0x1" description="Parse All Event Data [PAE]. This flag indicates whether the host controller implementation Parses all Event Data TRBs while advancing to the next TD after a Short Packet, or it skips all but the first Event Data TRB. A '1' in this bit indicates that all Event Data TRBs are parsed. A '0' in this bit indicates that only the first Event Data TRB is parsed [refer to section 4.10.1.1 of xHCI specification]." range="8" rwaccess="R"/> 
		<bitfield id="NSS" width="1" begin="7" end="7" resetval="0x1" description="No Secondary SID Support [NSS]. This flag indicates whether the host controller implementation supports Secondary Stream IDs. A '1'in this bit indicates that Secondary Stream ID decoding is not supported. A '0' in this bit indicates that Secondary Stream ID decoding is supported. [refer to Sections 4.12.2 and 6.2.3 of xHCI specification]." range="7" rwaccess="R"/> 
		<bitfield id="LTC" width="1" begin="6" end="6" resetval="0x1" description="Latency Tolerance Messaging Capability [LTC]. This flag indicates whether the host controller implementation supports Latency Tolerance Messaging [LTM]. A '1' in this bit indicates that LTM is supported. A 0 in this bit indicates that LTM is not supported. Refer to section 4.13.1 of xHCI specification for more information on LTM." range="6" rwaccess="R"/> 
		<bitfield id="LHRC" width="1" begin="5" end="5" resetval="0x0" description="Light HC Reset Capability [LHRC]. This flag indicates whether the host controller implementation supports a Light Host Controller Reset. A '1' in this bit indicates that Light Host Controller Reset is supported. A '0' in this bit indicates that Light Host Controller Reset is not supported. The value of this flag affects the functionality of the Light Host Controller Reset [LHCRST] flag in the USBCMD register [refer to Section 5.4.1 of xHCI specification]." range="5" rwaccess="R"/> 
		<bitfield id="PIND" width="1" begin="4" end="4" resetval="0x0" description="Port Indicators [PIND]. This bit indicates whether the xHC root hub ports support port indicator control. When this bit is a '1', the port status and control registers include a read/writeable field for controlling the state of the port indicator. Refer to Section 5.4.8 of xHCI specification for definition of the Port Indicator Control field [PIC field of PORTSC register]." range="4" rwaccess="R"/> 
		<bitfield id="PPC" width="1" begin="3" end="3" resetval="0x1" description="Port Power Control [PPC]. This flag indicates whether the host controller implementation includes port power control. A '1' in this bit indicates the ports have port power switches. A '0' in this bit indicates the port do not have port power switches. The value of this flag affects the functionality of the PP flag in each port status and control register [refer to Section 5.4.8 of xHCI specification].             When DEBUG_CTRL_REG capability is used [CDNS_RM_CBIT_DEBUG_CTRL_REG is not defined] then this bit is treated as RW. Its value can be changed only by writes to bit 8 of DEBUG_CTRL_REG [port_pwr_ctrl_toggle]. Direct writes to this bit are not possible." range="3" rwaccess="R"/> 
		<bitfield id="CSZ" width="1" begin="2" end="2" resetval="0x0" description="Context Size [CSZ]. If this bit is set to '1', then the xHC uses 64 byte Context data structures. If this bit is cleared to 0, then the xHC uses 32 byte Context data structures. Note: This flag does not apply to Stream Contexts." range="2" rwaccess="R"/> 
		<bitfield id="BNC" width="1" begin="1" end="1" resetval="0x0" description="BW Negotiation Capability [BNC]. This flag identifies whether the xHC has implemented the Bandwidth Negotiation. Values for this flag have the following interpretation:               '0': BW Negotiation not implemented               '1': BW Negotiation implemented               Refer to section 4.16 of xHCI specification for more information on Bandwidth Negotiation." range="1" rwaccess="R"/> 
		<bitfield id="AC64" width="1" begin="0" end="0" resetval="0x1" description="64-bit Addressing Capability [AC64]. This flag documents the addressing range capability of this implementation. The value of this flag determines whether the xHC has implemented the high order 32 bits of 64 bit register and data structure pointer fields. Values for this flag have the following interpretation:               '0': 32-bit address memory pointers implemented,               '1': 64-bit address memory pointers implemented.               If 32-bit address memory pointers are implemented, the xHC shall ignore the high order 32 bits of 64 bit data structure pointer fields, and system software shall ignore the high order 32 bits of 64 bit xHC registers." range="0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_DBOFF" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_DBOFF" offset="0x10014" width="32" description="This register defines the offset of the Doorbell Array base address from the Base.">
		<bitfield id="DAO" width="30" begin="31" end="2" resetval="0x3072" description="Doorbell Array Offset, RO. Default = implementation dependent. This field defines the offset in Dwords of the Doorbell Array base address from the Base [i.e. the base address of the xHCI Capability register address space]." range="31 - 2" rwaccess="R"/> 
		<bitfield id="RSVD1" width="2" begin="1" end="0" resetval="0x0" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.           Note: At present the fields are implemented as RO." range="1 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_RTSOFF" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_RTSOFF" offset="0x10018" width="32" description="This register defines the offset of the xHCI Runtime Registers from the Base.">
		<bitfield id="RRSO" width="27" begin="31" end="5" resetval="0x256" description="Runtime Register Space Offset, RO. Default = implementation dependent. This field defines the 32-byte offset of the xHCI Runtime Registers from the Base. i.e. Runtime Register Base Address = Base + Runtime Register Set Offset." range="31 - 5" rwaccess="R"/> 
		<bitfield id="RSVD1" width="5" begin="4" end="0" resetval="0x0" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.           Note: At present the fields are implemented as RO." range="4 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_HCCPARAMS2" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_HCCPARAMS2" offset="0x1001C" width="32" description="Capability Parameters 2 (HCCPARAMS2). This register defines optional capabilities supported by the xHCI. The default values for all fields in this register are implementation dependent.">
		<bitfield id="RSVD2" width="28" begin="31" end="4" resetval="0x0" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.           Note: At present the fields are implemented as RO." range="31 - 4" rwaccess="R"/> 
		<bitfield id="CTC" width="1" begin="3" end="3" resetval="0x1" description="This bit indicates whether the xHC USB3 Root Hub ports support the Compliance Transition Enabled [CTE] flag. When this bit is 1 USB3 Root Hub port state machine transitions to the Compliance substate shall be explicitly enabled software. When this bit is 0. USB3 Root Hub port state machine transitions to the Compliance substate are automatically enabled." range="3" rwaccess="R"/> 
		<bitfield id="RSVD1" width="3" begin="2" end="0" resetval="0x0" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.           Note: At present the fields are implemented as RO." range="2 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_RSVD_CR" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_RSVD_CR" offset="0x10020" width="32" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.">
		<bitfield id="RSVD_1" width="32" begin="31" end="0" resetval="0x0" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.           Note: At present the fields are implemented as RO." range="31 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_USBCMD" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_USBCMD" offset="0x10080" width="32" description="USB Command Register (USBCMD). The Command Register indicates the command to be executed by the serial bus host controller. Writing to the register causes a command to be executed.">
		<bitfield id="RSVDP2" width="20" begin="31" end="12" resetval="0x0" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.           Note: At present the fields are implemented as RO." range="31 - 12" rwaccess="R"/> 
		<bitfield id="EU3S" width="1" begin="11" end="11" resetval="0x0" description="Enable U3 MFINDEX Stop [EU3S], RW. Default = '0'. When set to '1', the xHC may stop the MFINDEX counting action if all Root Hub ports are in the U3, Disconnected, Disabled, or Powered-off state. When cleared to '0' the xHC may stop the MFINDEX counting action if all Root Hub ports are in the Disconnected, Disabled, Training, or Powered-off state. Refer to section 4.14.2 of xHCI specification for more information." range="11" rwaccess="R/W"/> 
		<bitfield id="EWE" width="1" begin="10" end="10" resetval="0x0" description="Enable Wrap Event [EWE], RW. Default = '0'. When set to '1', the xHC shall generate a MFINDEX Wrap Event every time the MFINDEX register transitions from 03FFFh to 0. When cleared to '0' no MFINDEX Wrap Events are generated. Refer to section 4.14.2 of xHCI specification for more information.             When this register is exposed by a Virtual Function [VF], the generation of MFINDEX Wrap Events to VFs shall be emulated by the VMM." range="10" rwaccess="R/W"/> 
		<bitfield id="CRS" width="1" begin="9" end="9" resetval="0x0" description="Controller Restore State [CRS], RW. Default = '0'. When set to '1', and HCHalted [HCH] = '1', then the xHC shall perform a Restore State operation and restore its internal state. When set to '1' and Run/Stop [R/S] = '1' or HCHalted [HCH] = '0', or when cleared to '0', no Restore State operation shall be performed. This flag always returns '0' when read. Refer to the Restore State Status [RSS] flag in the USBSTS register for information on Restore State completion. Refer to section 4.23.2 of xHCI specification for more information.             Note that undefined behavior may occur if a Restore State operation is initiated while Save State Status [SSS] = '1'.             When this register is exposed by a Virtual Function [VF], this bit only controls restoring the state of the xHC instance presented by the selected VF. Refer to section 8 of xHCI specification for more information." range="9" rwaccess="R/W"/> 
		<bitfield id="CSS" width="1" begin="8" end="8" resetval="0x0" description="Controller Save State [CSS], RW. Default = '0'. When written by software with '1' and HCHalted [HCH] = '1', then the xHC shall save any internal state that may be restored by a subsequent Restore State operation. When written by software with '1' and HCHalted [HCH] = '0', or written with '0', no Save State operation shall be performed. This flag always returns '0' when read. Refer to the Save State Status [SSS] flag in the USBSTS register for information on Save State completion. Refer to section 4.23.2 of xHCI specification for more information on xHC Save/Restore operation.             Note that undefined behavior may occur if a Save State operation is initiated while Restore State Status [RSS] ='1'.             When this register is exposed by a Virtual Function [VF], this bit only controls saving the state of the xHC instance presented by the selected VF. Refer to section 8 of xHCI specifications for more information." range="8" rwaccess="R/W"/> 
		<bitfield id="LHCRST" width="1" begin="7" end="7" resetval="0x0" description="Light Host Controller Reset [LHCRST],  RO or RW. Optional normative. Default = '0'.             If the Light HC Reset Capability [LHRC] bit in the HCCPARAMS register is '1', then this flag allows the driver to reset the xHC without affecting the state of the ports.             A system software read of this bit as '0' indicates the Light Host Controller Reset has completed and it is safe for software to re-initialize the xHC.             A software read of this bit as a '1' indicates that the Light Host Controller Reset has not yet completed.                If not implemented, a read of this flag shall always return a '0'. All registers in the Aux Power well shall maintain the values that had been asserted prior to the Light Host Controller Reset. Refer to section 4.23.1 of xHCI specification for more information.             When this register is exposed by a Virtual Function [VF], this bit only generates a Light Reset to the xHC instance presented by the selected VF, e.g. Disable the VFs device slots and set the associated VF Run bit to Stopped. Refer to section 8 of xHCI specification for more information." range="7" rwaccess="R"/> 
		<bitfield id="RSVDP1" width="3" begin="6" end="4" resetval="0x0" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.           Note: At present the fields are implemented as RO." range="6 - 4" rwaccess="R"/> 
		<bitfield id="HSEE" width="1" begin="3" end="3" resetval="0x0" description="Host System Error Enable [HSEE],  RW. Default = '0'.             When this bit is a '1', and the HSE bit in the USBSTS             register is a '1', the xHC shall assert out-of-band error             signaling to the host. The signaling is acknowledged by software clearing the HSE bit. Refer to section 4.10.2.6 of xHCI specification for more information.             When this register is exposed by a Virtual Function [VF], the effect of the assertion of this bit on the Physical Function [PF0] is determined by the VMM. Refer to section 8 of xHCI specification for more information." range="3" rwaccess="R/W"/> 
		<bitfield id="INTE" width="1" begin="2" end="2" resetval="0x0" description="Interrupter Enable [INTE],  RW. Default = '0'. This bit provides system software with a means of enabling or disabling the host system interrupts generated by Interrupters. When this bit is a '1', then Interrupter host system interrupt generation is allowed, e.g. the xHC shall issue an interrupt at the next interrupt threshold if the host system interrupt mechanism [e.g. MSI, MSIX, etc.] is enabled. The interrupt is acknowledged by a host system interrupt specific mechanism.             When this register is exposed by a Virtual Function [VF], this bit only enables the set of Interrupters assigned to the selected VF. Refer to section 7.7.2 of xHCI specification for more information." range="2" rwaccess="R/W"/> 
		<bitfield id="HCRST" width="1" begin="1" end="1" resetval="0x0" description="Host Controller Reset [HCRST],  RW. Default = '0'. This control bit is used by software to reset the host controller. The effects of this bit on the xHC and the Root Hub registers are similar to a Chip Hardware Reset. When software writes a '1' to this bit, the Host Controller resets its internal pipelines, timers, counters, state machines, etc. to their initial value. Any transaction currently in progress on the USB is immediately terminated. A USB reset shall not be driven on USB2 downstream ports, however a Hot or Warm Reset shall be initiated on USB3 Root Hub downstream ports.             PCI Configuration registers are not affected by this reset. All operational registers, including port registers and port state machines are set to their initial values. Software shall reinitialize the host controller as described in Section 4.1 of xHCI specification in order to return the host controller to an operational state.                This bit is cleared to '0' by the Host Controller when the reset process is complete. Software cannot terminate the reset process early by writing a '0' to this bit and shall not write any xHC Operational or Runtime registers until while HCRST is '1'. Note, the completion of the xHC reset process is not gated by the Root Hub port reset process.             Software shall not set this bit to '1' when the HCHalted [HCH] bit in the USBSTS register is a '0'. Attempting to reset an actively running host controller may result in undefined behavior.             When this register is exposed by a Virtual Function [VF], this bit only resets the xHC instance presented by the selected VF. Refer to section 8 of xHCI specification for more information." range="1" rwaccess="R/W"/> 
		<bitfield id="R_S" width="1" begin="0" end="0" resetval="0x0" description="Run/Stop [R/S],  RW. Default = '0'. '1' = Run. '0' = Stop. When set to a '1', the xHC proceeds with execution of the schedule. The xHC continues execution as long as this bit is set to a '1'.             When this bit is cleared to '0', the xHC completes any current or queued commands or TDs, and any USB transactions associated with them, then halts. Refer to section 5.4.1.1 of xHCI specification for more information on how R/S shall be managed.             The xHC shall halt within 16 ms after software clears the Run/Stop bit if the above conditions have been met. The HCHalted [HCH] bit in the USBSTS register indicates when the xHC has finished its pending pipelined transactions and has entered the stopped state. Software shall not write a '1' to this flag unless the xHC is in the Halted state [i.e. HCH in the USBSTS register is '1']. Doing so may yield undefined results. Writing a '0' to this flag when the xHC is in the Running state [i.e. HCH = '0'] and any Event Rings are in the Event Ring Full state [refer to section 4.9.4 of xHCI specification] may result in lost events.             When this register is exposed by a Virtual Function [VF], this bit only controls the run state of the xHC instance presented by the selected VF. Refer to section 8 of xHCI specification for more information." range="0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_USBSTS" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_USBSTS" offset="0x10084" width="32" description="USB Status Register (USBSTS). This register indicates pending interrupts and various states of the Host Controller. The status resulting from a transaction on the serial bus is not indicated in this register. Software sets a bit to '0' in this register by writing a '1' to it (RW1C). Refer to Section 4.17 of xHCI specification for additional information concerning USB interrupt conditions.">
		<bitfield id="RSVDP" width="19" begin="31" end="13" resetval="0x0" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.           Note: At present the fields are implemented as RO." range="31 - 13" rwaccess="R"/> 
		<bitfield id="HCE" width="1" begin="12" end="12" resetval="0x0" description="Host Controller Error [HCE], RO. Default = '0'. '0' = No internal xHC error conditions exist and '1' = Internal xHC error condition. This flag shall be set to indicate that an internal error condition has been detected which requires software to reset and reinitialize the xHC. Refer to section 4.24.1 of xHCI specification for more information." range="12" rwaccess="R"/> 
		<bitfield id="CNR" width="1" begin="11" end="11" resetval="0x1" description="Controller Not Ready [CNR], RO. Default = '1'. '0' = Ready and '1' = Not Ready. When this bit is '1', software shall not read or write any register of the xHC, other than those explicitly listed in the Design Specification section titled Register Accessibility. This flag is set by the xHC after a Chip Hardware Reset and cleared when the xHC is ready to begin accepting register reads or writes to all registers. This flag shall remain cleared ['0'] until the next Chip Hardware Reset." range="11" rwaccess="R"/> 
		<bitfield id="SRE" width="1" begin="10" end="10" resetval="0x0" description="Save/Restore Error [SRE], RW1C. Default = '0'. If an error occurs during a Save or Restore operation this bit shall be set to '1'. This bit shall be cleared to '0' when a Save or Restore operation is initiated or when written with '1'. Refer to section 4.23.2 of xHCI specification for more information.             When this register is exposed by a Virtual Function [VF], the VMM determines the state of this bit as a function of the Save/Restore completion status for the selected VF. Refer to section 8 of xHCI specification for more information." range="10" rwaccess="R/W1TC"/> 
		<bitfield id="RSS" width="1" begin="9" end="9" resetval="0x0" description="Restore State Status [RSS], RO. Default = '0'. When the Controller Restore State [CRS] flag in the USBCMD register is written with '1' this bit shall be set to '1' and remain '1' while the xHC restores its internal state. When the Restore State operation is complete, this bit shall be cleared to '0'. Refer to section 4.23.2 of xHCI specification for more information.                When this register is exposed by a Virtual Function [VF], the VMM determines the state of this bit as a function of the restoring the state for the selected VF. Refer to section 8 of xHCI specification for more information." range="9" rwaccess="R"/> 
		<bitfield id="SSS" width="1" begin="8" end="8" resetval="0x0" description="Save State Status [SSS], RO. Default = '0'. When the Controller Save State [CSS] flag in the USBCMD register is written with '1' this bit shall be set to '1' and remain '1' while the xHC saves its internal state. When the Save State operation is complete, this bit shall be cleared to '0'. Refer to section 4.23.2 of xHCI specification for more information.             When this register is exposed by a Virtual Function [VF], the VMM determines the state of this bit as a function of the saving the state for the selected VF. Refer to section 8 of xHCI specification for more information." range="8" rwaccess="R"/> 
		<bitfield id="RSVDZ2" width="3" begin="7" end="5" resetval="0x0" description="Reserved and Zero: Reserved for future RW1C implementations. Software shall use zero for writes to these bits.           Note: At present the fields are implemented as RO." range="7 - 5" rwaccess="R"/> 
		<bitfield id="PCD" width="1" begin="4" end="4" resetval="0x0" description="Port Change Detect [PCD],  RW1C. Default = '0'. The xHC sets this bit to a '1' when any port has a change bit transition from a '0' to a '1'. This bit is allowed to be maintained in the Aux Power well. Alternatively, it is also acceptable that on a D3 to D0 transition of the xHC, this bit is loaded with the OR of all of the PORTSC change bits. Refer to section 4.19.3 of xHCI specification. This bit provides system software an efficient means of determining if there has been Root Hub port activity. Refer to section 4.15.2.3 of xHCI specification for more information. When this register is exposed by a Virtual Function [VF], the VMM determines the state of this bit as a function of the Root Hub Ports associated with the Device Slots assigned to the selected VF. Refer to section 8 of xHCI specification for more information." range="4" rwaccess="R/W1TC"/> 
		<bitfield id="EINT" width="1" begin="3" end="3" resetval="0x0" description="Event Interrupt [EINT],  RW1C. Default = '0'. The xHC sets this bit to '1' when the Interrupt Pending [IP] bit of any Interrupter transitions from '0' to '1'. Refer to section 7.1.2 of xHCI specification for use. Software that uses EINT shall clear it prior to clearing any IP flags. A race condition may occur if software clears the IP flags then clears the EINT flag, and between the operations another IP '0' to '1' transition occurs. In this case the new IP transition shall be lost.                 When this register is exposed by a Virtual Function [VF], this bit is the logical 'OR' of the IP bits for the Interrupters assigned to the selected VF. And it shall be cleared to '0' when all associated interrupter IP bits are cleared, i.e. all the VFs Interrupter Event Ring[s] are empty. Refer to section 8 of xHCI specification for more information" range="3" rwaccess="R/W1TC"/> 
		<bitfield id="HSE" width="1" begin="2" end="2" resetval="0x0" description="Host System Error [HSE],  RW1C. Default = '0'. The xHC sets this bit to '1' when a serious error is detected, either internal to the xHC or during a host system access involving the xHC module. [In a PCI system, conditions that set this bit to 1 include PCI Parity error, PCI Master Abort, and PCI Target Abort.] When this error occurs, the xHC clears the Run/Stop [R/S] bit in the USBCMD register to prevent further execution of the scheduled TDs. If the HSEE bit in the USBCMD register is a '1', the xHC shall also assert out-of-band error signaling to the host. Refer to section 4.10.2.6 of xHCI specification for more information.                  When this register is exposed by a Virtual Function [VF], the assertion of this bit affects all VFs and reflects the Host System Error state of the Physical Function [PF0]. Refer to section 8 of xHCI specification for more information." range="2" rwaccess="R/W1TC"/> 
		<bitfield id="RSVDZ1" width="1" begin="1" end="1" resetval="0x0" description="Reserved and Zero: Reserved for future RW1C implementations. Software shall use zero for writes to these bits.           Note: At present the fields are implemented as RO." range="1" rwaccess="R"/> 
		<bitfield id="HCH" width="1" begin="0" end="0" resetval="0x1" description="HCHalted [HCH],  RO. Default = '1'. This bit is a '0' whenever the Run/Stop [R/S] bit is a '1'. The xHC sets this bit to '1' after it has stopped executing as a result of the Run/Stop [R/S] bit being cleared to '0', either by software or by the xHC hardware [e.g. internal error]. If this bit is '1', then SOFs, microSOFs, or Isochronous Timestamp Packets [ITP] shall not be generated by the xHC, and any received Transaction Packet shall be dropped.                  When this register is exposed by a Virtual Function [VF], this bit only reflects the Halted state of the xHC instance presented by the selected VF. Refer to section 8 of xHCI specification for more information." range="0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_PAGESIZE" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_PAGESIZE" offset="0x10088" width="32" description="Page Size Register (PAGESIZE).">
		<bitfield id="RSVD1" width="16" begin="31" end="16" resetval="0x0" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.           Note: At present the fields are implemented as RO." range="31 - 16" rwaccess="R"/> 
		<bitfield id="PAGESIZE" width="16" begin="15" end="0" resetval="0x1" description="Page Size, RO. Default = Implementation defined. This field defines the page size supported by             the xHC implementation. This xHC supports a page size of 2^[n+12] if bit n is Set. For example,             if bit 0 is Set, the xHC supports 4k byte page sizes.               For a Virtual Function, this register reflects the page size selected in the System Page Size field             of the SR-IOV Extended Capability structure. For the Physical Function 0, this register reflects             the implementation dependent default xHC page size.             Various xHC resources reference PAGESIZE to describe their minimum alignment requirements.             The maximum possible page size is 128M." range="15 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_RSVDZ8C" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_RSVDZ8C" offset="0x1008C" width="32" description="Reserved and Zero: Reserved for future RW1C implementations. Software shall use zero for writes to these bits.">
		<bitfield id="RSVDZ_1" width="32" begin="31" end="0" resetval="0x0" description="Reserved and Zero: Reserved for future RW1C implementations. Software shall use zero for writes to these bits.           Note: At present the fields are implemented as RO." range="31 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_RSVDZ90" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_RSVDZ90" offset="0x10090" width="32" description="Reserved and Zero: Reserved for future RW1C implementations. Software shall use zero for writes to these bits.">
		<bitfield id="RSVDZ_1" width="32" begin="31" end="0" resetval="0x0" description="Reserved and Zero: Reserved for future RW1C implementations. Software shall use zero for writes to these bits.           Note: At present the fields are implemented as RO." range="31 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_DNCTRL" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_DNCTRL" offset="0x10094" width="32" description="Device Notification Control Register (DNCTRL). This register is used by software to enable or disable the reporting of the reception of specific USB Device Notification Transaction Packets. A Notification Enable (Nx, where x = 0 to 15) flag is defined for each of the 16 possible device notification types. If a flag is set for a specific notification type, a Device Notification Event shall be generated when the respective notification packet is received. After reset all notifications are disabled. Refer to section 6.4.2.7 of xHCI specification. This register shall be written as a Dword. Byte writes produce undefined results. When a Notification Enable bit is set, a Device Notification Event shall be generated when a Device Notification Transaction Packet is received with the matching value in the Notification Type field. For example, setting N1 to '1' enables Device Notification Event generation if a Device Notification TP is received with its Notification Type field set to '1' (FUNCTION_WAKE), etc. 
          Note: Of the currently defined USB3 Device Notification Types, only the FUNCTION_WAKE type should not be handled automatically by the xHC. Only under debug conditions would software write the DNCTRL register with a value other than 0002h. Refer to section 8.5.6 in the USB3 specification for more information on Notification Types. If new Device Notification Types are defined, software may receive them by setting the respective Notification Enable bit.">
		<bitfield id="RSVDP1" width="16" begin="31" end="16" resetval="0x0" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.           Note: At present the fields are implemented as RO." range="31 - 16" rwaccess="R"/> 
		<bitfield id="N15" width="1" begin="15" end="15" resetval="0x0" description="Notification Enable flag 15" range="15" rwaccess="R/W"/> 
		<bitfield id="N14" width="1" begin="14" end="14" resetval="0x0" description="Notification Enable flag 14" range="14" rwaccess="R/W"/> 
		<bitfield id="N13" width="1" begin="13" end="13" resetval="0x0" description="Notification Enable flag 13" range="13" rwaccess="R/W"/> 
		<bitfield id="N12" width="1" begin="12" end="12" resetval="0x0" description="Notification Enable flag 12" range="12" rwaccess="R/W"/> 
		<bitfield id="N11" width="1" begin="11" end="11" resetval="0x0" description="Notification Enable flag 11" range="11" rwaccess="R/W"/> 
		<bitfield id="N10" width="1" begin="10" end="10" resetval="0x0" description="Notification Enable flag 10" range="10" rwaccess="R/W"/> 
		<bitfield id="N9" width="1" begin="9" end="9" resetval="0x0" description="Notification Enable flag 9" range="9" rwaccess="R/W"/> 
		<bitfield id="N8" width="1" begin="8" end="8" resetval="0x0" description="Notification Enable flag 8" range="8" rwaccess="R/W"/> 
		<bitfield id="N7" width="1" begin="7" end="7" resetval="0x0" description="Notification Enable flag 7" range="7" rwaccess="R/W"/> 
		<bitfield id="N6" width="1" begin="6" end="6" resetval="0x0" description="Notification Enable flag 6" range="6" rwaccess="R/W"/> 
		<bitfield id="N5" width="1" begin="5" end="5" resetval="0x0" description="Notification Enable flag 5" range="5" rwaccess="R/W"/> 
		<bitfield id="N4" width="1" begin="4" end="4" resetval="0x0" description="Notification Enable flag 4" range="4" rwaccess="R/W"/> 
		<bitfield id="N3" width="1" begin="3" end="3" resetval="0x0" description="Notification Enable flag 3. BUS_INTERVAL_ADJUSTMENT_MESSAGE." range="3" rwaccess="R/W"/> 
		<bitfield id="N2" width="1" begin="2" end="2" resetval="0x0" description="Notification Enable flag 2. LATENCY_TOLERANCE_MESSAGE." range="2" rwaccess="R/W"/> 
		<bitfield id="N1" width="1" begin="1" end="1" resetval="0x0" description="Notification Enable flag 1" range="1" rwaccess="R/W"/> 
		<bitfield id="N0" width="1" begin="0" end="0" resetval="0x0" description="Notification Enable flag 0" range="0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_CRCR_LO" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_CRCR_LO" offset="0x10098" width="32" description="Command Ring Control Register Low (CRCR_L). The Command Ring Control Register provides Command Ring control and status capabilities, and identifies the address and Cycle bit state of the Command Ring Dequeue Pointer.">
		<bitfield id="CRPTR_L" width="26" begin="31" end="6" resetval="0x0" description="Command Ring Pointer Low, RW. Default = 0. This field defines low order bits of the initial value of the 64-bit Command Ring Dequeue Pointer. Writes to this field are ignored when Command Ring Running [CRR] = '1'. If the CRCR is written while the Command Ring is stopped [CCR = '0'], the value of this field shall be used to fetch the first Command TRB the next time the Host Controller Doorbell register is written with the DB Reason field set to Host Controller Command. If the CRCR is not written while the Command Ring is stopped [CCR = '0'] then the Command Ring shall begin fetching Command TRBs at the current value of the internal xHC Command Ring Dequeue Pointer.             Reading this field always returns zero." range="31 - 6" rwaccess="R/W"/> 
		<bitfield id="RSVD1" width="2" begin="5" end="4" resetval="0x0" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.           Note: At present the fields are implemented as RO." range="5 - 4" rwaccess="R"/> 
		<bitfield id="CRR" width="1" begin="3" end="3" resetval="0x0" description="Command Ring Running [CRR], RO. Default = '0'. This flag is set to '1' if the Run/Stop [R/S] bit is '1' and the Host Controller Doorbell register is written with the DB Reason field set to Host Controller Command. It is cleared to '0' when the Command Ring is stopped after writing a '1' to the Command Stop [CS] or Command Abort [CA] flags, or if the R/S bit is cleared to '0'." range="3" rwaccess="R"/> 
		<bitfield id="CA" width="1" begin="2" end="2" resetval="0x0" description="Command Abort [CA], RW1S. Default = '0'. Writing a '1' to this bit shall immediately terminate the currently executing command, stop the Command Ring, and generate a Command Completion Event with the Completion Code set to Command Ring Stopped. Refer to section 4.6.1.2 of xHCI specification for more information on aborting a command. The next write to the Host Controller Doorbell with DB Reason field set to Host Controller Command shall restart the Command Ring operation. Writes to this flag are ignored by the xHC if Command Ring Running [CRR] = '0'.             Reading this bit always returns '0'." range="2" rwaccess="R/W1TS"/> 
		<bitfield id="CS" width="1" begin="1" end="1" resetval="0x0" description="Command Stop [CS], RW1S. Default = '0'. Writing a '1' to this bit shall stop the operation of the Command Ring after the completion of the currently executing command, and generate a Command Completion Event with the Completion Code set to Command Ring Stopped and the Command TRB Pointer set to the current value of the Command Ring Dequeue Pointer. Refer to section 4.6.1.1 of xHCI specification for more information on stopping a command. The next write to the Host Controller Doorbell with DB Reason field set to Host Controller Command shall restart the Command Ring operation. Writes to this flag are ignored by the xHC if Command Ring Running [CRR] = '0'.             Reading this bit shall always return '0'." range="1" rwaccess="R/W1TS"/> 
		<bitfield id="RCS" width="1" begin="0" end="0" resetval="0x0" description="Ring Cycle State [RCS], RW. This bit identifies the value of the xHC Consumer Cycle State [CCS] flag for the TRB referenced by the Command Ring Pointer. Refer to section 4.9.3 of xHCI specification for more information. Writes to this flag are ignored if Command Ring Running [CRR] is '1'. If the CRCR is written while the Command Ring is stopped [CRR = '0'], then the value of this flag shall be used to fetch the first Command TRB the next time the Host Controller Doorbell register is written with the DB Reason field set to Host Controller Command. If the CRCR is not written while the Command Ring is stopped [CRR = '0'], then the Command Ring shall begin fetching Command TRBs using the current value of the internal Command Ring CCS flag. Reading this flag always returns '0'." range="0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_CRCR_HI" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_CRCR_HI" offset="0x1009C" width="32" description="Command Ring Control Register High (CRCR_HI). The Command Ring Control Register provides high order bits of the Command Ring Dequeue Pointer.">
		<bitfield id="CRPTR_H" width="32" begin="31" end="0" resetval="0x0" description="Command Ring Pointer High, RW. Default = 0. This field defines high order bits of the initial value of the 64-bit Command Ring Dequeue Pointer. Writes to this field are ignored when Command Ring Running [CRR] = '1'. If the CRCR is written while the Command Ring is stopped [CCR = '0'], the value of this field shall be used to fetch the first Command TRB the next time the Host Controller Doorbell register is written with the DB Reason field set to Host Controller Command.             If the CRCR is not written while the Command Ring is stopped [CCR = '0'] then the Command Ring shall begin fetching Command TRBs at the current value of the internal xHC Command Ring Dequeue Pointer.             Reading this field always returns zero." range="31 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_RSVDZA0" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_RSVDZA0" offset="0x100A0" width="32" description="Reserved and Zero: Reserved for future RW1C implementations. Software shall use zero for writes to these bits.">
		<bitfield id="RSVDZ_1" width="32" begin="31" end="0" resetval="0x0" description="Reserved and Zero: Reserved for future RW1C implementations. Software shall use zero for writes to these bits.           Note: At present the fields are implemented as RO." range="31 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_RSVDZA4" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_RSVDZA4" offset="0x100A4" width="32" description="Reserved and Zero: Reserved for future RW1C implementations. Software shall use zero for writes to these bits.">
		<bitfield id="RSVDZ_1" width="32" begin="31" end="0" resetval="0x0" description="Reserved and Zero: Reserved for future RW1C implementations. Software shall use zero for writes to these bits.           Note: At present the fields are implemented as RO." range="31 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_RSVDZA8" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_RSVDZA8" offset="0x100A8" width="32" description="Reserved and Zero: Reserved for future RW1C implementations. Software shall use zero for writes to these bits.">
		<bitfield id="RSVDZ_1" width="32" begin="31" end="0" resetval="0x0" description="Reserved and Zero: Reserved for future RW1C implementations. Software shall use zero for writes to these bits.           Note: At present the fields are implemented as RO." range="31 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_RSVDZAC" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_RSVDZAC" offset="0x100AC" width="32" description="Reserved and Zero: Reserved for future RW1C implementations. Software shall use zero for writes to these bits.">
		<bitfield id="RSVDZ_1" width="32" begin="31" end="0" resetval="0x0" description="Reserved and Zero: Reserved for future RW1C implementations. Software shall use zero for writes to these bits.           Note: At present the fields are implemented as RO." range="31 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_DCBAAP_LO" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_DCBAAP_LO" offset="0x100B0" width="32" description="Device Context Base Address Array Pointer Register (DCBAAP_LO). The Device Context Base Address Array Pointer Register identifies the base address of the Device Context Base Address Array.
          The memory structure referenced by this physical memory pointer is assumed to be physically contiguous and 64-byte aligned.">
		<bitfield id="DCBAAPTR_L" width="26" begin="31" end="6" resetval="0x0" description="Device Context Base Address Array Pointer, RW. Default = 0. This field defines low order bits of the 64-bit base address of the Device Context Pointer Array. A table of address pointers that reference Device Context structures for the devices attached to the host." range="31 - 6" rwaccess="R/W"/> 
		<bitfield id="RSVDZ1" width="6" begin="5" end="0" resetval="0x0" description="Reserved and Zero: Reserved for future RW1C implementations. Software shall use zero for writes to these bits.           Note: At present the fields are implemented as RO." range="5 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_DCBAAP_HI" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_DCBAAP_HI" offset="0x100B4" width="32" description="Device Context Base Address Array Pointer Register (DCBAAP_HI). The Device Context Base Address Array Pointer Register identifies the base address of the Device Context Base Address Array.
          The memory structure referenced by this physical memory pointer is assumed to be physically contiguous and 64-byte aligned.">
		<bitfield id="DCBAAPTR_H" width="32" begin="31" end="0" resetval="0x0" description="Device Context Base Address Array Pointer, RW. Default = 0. This field defines high order bits of the 64-bit base address of the Device Context Pointer Array. A table of address pointers that reference Device Context structures for the devices attached to the host." range="31 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_CONFIG" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_CONFIG" offset="0x100B8" width="32" description="Configure Register (CONFIG). This register defines runtime xHC configuration parameters.">
		<bitfield id="RSVDP1" width="24" begin="31" end="8" resetval="0x0" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.           Note: At present the fields are implemented as RO." range="31 - 8" rwaccess="R"/> 
		<bitfield id="MAXSLOTSEN" width="8" begin="7" end="0" resetval="0x0" description="Max Device Slots Enabled [MaxSlotsEn],  RW. Default = 0. This field specifies the maximum number of enabled Device Slots. Valid values are in the range of 0 to MaxSlots. Enabled Devices Slots are allocated contiguously. e.g. A value of 16 specifies that Device Slots 1 to 16 are active. A value of 0 disables all Device Slots. A disabled Device Slot shall not respond to Doorbell Register references.              This field shall not be modified by software if the xHC is running [Run/Stop [R/S] = 1]." range="7 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_RSVDZBC" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_RSVDZBC" offset="0x100BC" width="32" description="Reserved and Zero: Reserved for future RW1C implementations. Software shall use zero for writes to these bits.">
		<bitfield id="RSVDZ_1" width="32" begin="31" end="0" resetval="0x0" description="Reserved and Zero: Reserved for future RW1C implementations. Software shall use zero for writes to these bits.           Note: At present the fields are implemented as RO." range="31 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_RSVDZ_OP" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_RSVDZ_OP" offset="0x100C0" width="32" description="Reserved and Zero: Reserved for future RW1C implementations. Software shall use zero for writes to these bits.">
		<bitfield id="RSVDZ_1" width="32" begin="31" end="0" resetval="0x0" description="Reserved and Zero: Reserved for future RW1C implementations. Software shall use zero for writes to these bits.           Note: At present the fields are implemented as RO." range="31 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_PORTSC1USB2" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_PORTSC1USB2" offset="0x10480" width="32" description="Port Status and Control Register for USB2 protocol port. This register may be read from or written to at any time, including whilst the CNR field in the USBSTS register is high. ">
		<bitfield id="RSVDZ_4" width="1" begin="31" end="31" resetval="0x0" description="Reserved and Zero: Reserved for future RW1C implementations. Software shall use zero for writes to these bits.           Note: At present the fields are implemented as RO." range="31" rwaccess="R"/> 
		<bitfield id="DR" width="1" begin="30" end="30" resetval="0x0" description="Device Removable [DR], RO. This flag indicates if this port has a removable device attached.             '0' = Device is removable.             '1' = Device is non-removable." range="30" rwaccess="R"/> 
		<bitfield id="RSVDZ_3" width="2" begin="29" end="28" resetval="0x0" description="Reserved and Zero: Reserved for future RW1C implementations. Software shall use zero for writes to these bits.           Note: At present the fields are implemented as RO." range="29 - 28" rwaccess="R"/> 
		<bitfield id="WOE" width="1" begin="27" end="27" resetval="0x0" description="Wake on Over-current Enable [WOE],  RWS. Default = '0'.             Writing this bit to a '1' enables the port to be sensitive to over-current conditions as system wake-up events. Refer to section 4.15 of xHCI specification for operational model." range="27" rwaccess="R/W"/> 
		<bitfield id="WDE" width="1" begin="26" end="26" resetval="0x0" description="Wake on Disconnect Enable [WDE],  RWS. Default = '0'.               Writing this bit to a '1' enables the port to be sensitive to device disconnects as system wake-up events. Refer to section 4.15 of xHCI specification for operational model." range="26" rwaccess="R/W"/> 
		<bitfield id="WCE" width="1" begin="25" end="25" resetval="0x0" description="Wake on Connect Enable [WCE],  RWS. Default = '0'.               Writing this bit to a '1' enables the port to be sensitive to device connects as system wake-up events. Refer to section 4.15 of xHCI specification for operational model." range="25" rwaccess="R/W"/> 
		<bitfield id="CAS" width="1" begin="24" end="24" resetval="0x0" description="Cold Attach Status [CAS], RO. Default = '0'.               '1' = Far-end Receiver Terminations were detected in the Disconnected state and the Root Hub Port State Machine was unable to advance to the Enabled state. Refer to sections 4.19.8 of xHCI specification for more details on the Cold Attach Status [CAS] assertion conditions. Software shall clear this bit by writing a '1' to WPR or the xHC shall clear this bit if CCS transitions to '1'. This flag is '0' for USB2 protocol ports." range="24" rwaccess="R"/> 
		<bitfield id="RSVDZ_2" width="1" begin="23" end="23" resetval="0x0" description="Reserved and Zero: Reserved for future RW1C implementations. Software shall use zero for writes to these bits.           Note: At present the fields are implemented as RO." range="23" rwaccess="R"/> 
		<bitfield id="PLC" width="1" begin="22" end="22" resetval="0x0" description="Port Link State Change [PLC],  RW1CS.             Default = '0'. This flag is set to '1' due to the following PLS transitions:              U3 -> Resume [Wakeup signaling from a device],             Resume -> Recovery -> U0 [Device Resume complete [USB3 protocol ports only]],             Resume -> U0 [Device Resume complete [USB2 protocol ports only]],             U3 -> Recovery -> U0 [Software Resume complete [USB3 protocol ports only]],             U3 -> U0 [Software Resume complete [USB2 protocol ports only]],             U2 -> U0 [L1 Resume complete [USB2 protocol ports only]],             U0 -> U0 [L1 Entry Reject [USB2 protocol ports only]],             Any state -> Inactive [Error [USB3 protocol ports only]].             Note that this flag shall not be set if the PLS transition was due to software setting PP to 0.             Refer to section 4.23.5 of xHCI specification for more information. '0' = No change. '1' = Link Status Changed. Software shall clear this bit by writing a '1' to it. Refer to PLC Condition: references in section 4.19.1 for the specific port state transitions that set this flag. Refer to section 4.19.2 of xHCI specification for more information on change bit usage." range="22" rwaccess="R/W1TC"/> 
		<bitfield id="PRC" width="1" begin="21" end="21" resetval="0x0" description="Port Reset Change [PRC],  RW1CS. Default = '0'.                This flag is set to '1' due to a '1' to '0' transition of Port Reset [PR], e.g. when any reset processing [Warm or Hot] on this port is complete. Note that this flag shall not be set to '1' if the reset processing was forced to terminate due to software clearing PP or PED to '0'.                '0' = No change. '1' = Reset complete.                Software shall clear this bit by writing a '1' to it. Refer to section 4.19.5 of xHCI specification. Refer to section 4.19.2 of xHCI specification for more information on change bit usage." range="21" rwaccess="R/W1TC"/> 
		<bitfield id="OCC" width="1" begin="20" end="20" resetval="0x0" description="Over-current Change [OCC],  RW1CS.             Default = '0'. This bit shall be set to a '1' when there is a '0' to '1' or '1' to '0' transition of Over-current Active [OCA]. Software shall clear this bit by writing a '1' to it. Refer to section 4.19.2 of xHCI specification for more information on change bit usage." range="20" rwaccess="R/W1TC"/> 
		<bitfield id="WRC" width="1" begin="19" end="19" resetval="0x0" description="Warm Port Reset Change [WRC],  RW1CS/RsvdZ. Default = '0'. This bit is set when Warm Reset processing on this port completes. '0' = No change. '1' = Warm Reset complete.             Note that this flag shall not be set to '1' if the Warm Reset processing was forced to terminate due to software clearing PP or PED to '0'.             Software shall clear this bit by writing a '1' to it. Refer to section 4.19.5.1 of xHCI specification. Refer to section 4.19.2 of xHCI specification for more information on change bit usage. This bit only applies to USB3 protocol ports. For USB2 protocol ports it shall be RsvdZ." range="19" rwaccess="R/W1TC"/> 
		<bitfield id="PEC" width="1" begin="18" end="18" resetval="0x0" description="Port Enabled/Disabled Change [PEC],  RW1CS. Default = '0'.             '1' = change in PED. '0' = No change. Note that this flag shall not be set if the PED transition was due to software setting PP to '0'. Software shall clear this bit by writing a '1' to it. Refer to section 4.19.2 of xHCI specification for more information on change bit usage.               This bit shall be set to '1' only when the port is disabled due to the appropriate conditions existing at the EOF2 point [refer to section 11.8.1 of the USB2 Specification for the definition of a Port Error]." range="18" rwaccess="R/W1TC"/> 
		<bitfield id="CSC" width="1" begin="17" end="17" resetval="0x0" description="Connect Status Change [CSC],  RW1CS.             Default = '0'. '1' = Change in CCS. '0' = No change. This flag indicates a change has occurred in the ports Current Connect Status [CCS] or Cold Attach Status [CAS] bits.              Note that this flag shall not be set if the CCS transition was due to software setting PP to '0', or the CAS transition was due to software setting WPR to '1'.              The xHC sets this bit to '1' for all changes to the port device connect status, even if system software has not cleared an existing Connect Status Change. For example, the insertion status changes twice before system software has cleared the changed condition, root hub hardware will be setting an already-set bit [i.e., the bit will remain 1]. Software shall clear this bit by writing a '1' to it. Refer to section 4.19.2 of xHCI specification for more information on change bit usage." range="17" rwaccess="R/W1TC"/> 
		<bitfield id="LWS" width="1" begin="16" end="16" resetval="0x0" description="Port Link State Write Strobe [LWS],  RW. Default = '0'. When this bit is set to '1' on a write reference to this register, this flag enables writes to the PLS field. When '0', write data in PLS field is ignored. Reads to this bit return '0'." range="16" rwaccess="R/W"/> 
		<bitfield id="PIC" width="2" begin="15" end="14" resetval="0x0" description="Port Indicator Control [PIC],  RWS.             Default = '0'. Writing to these bits has no effect if the Port Indicators [PIND] bit in the HCCPARAMS register is a '0'. If PIND bit is a '1', then the bit encodings are:              0: Port indicators are off,             1: Amber,             2: Green,             3: Undefined.             Refer to the USB2 Specification section 11.5.3 for a description on how these bits shall be used. This field is '0' if PP is '0'." range="15 - 14" rwaccess="R/W"/> 
		<bitfield id="PORTSPEED" width="4" begin="13" end="10" resetval="0x0" description="Port Speed [Port Speed],  ROS.             Default = '0'. This field identifies the speed of the connected USB Device. This field is only relevant if a device is connected [CCS = '1'] in all other cases this field shall indicate Undefined Speed.             Possible values:               0: Undefined Speed              1-15: Protocol Speed ID [PSI], refer to section 7.2.1 of xHCI specification for the definition of PSIV field in the PSI Dword.              Note: This field is invalid on a USB2 protocol port until after the port is reset." range="13 - 10" rwaccess="R"/> 
		<bitfield id="PP" width="1" begin="9" end="9" resetval="0x1" description="Port Power [PP],  RWS.             Default = '1'. This flag reflects a port's logical, power control state. Because host controllers can implement different methods of port power switching, this flag may or may not represent whether [VBus] power is actually applied to the port. When PP equals a '0' the port is nonfunctional and shall not report attaches, detaches, or Port Link State [PLS] changes. However, the port shall report over-current conditions when PP = '0' if PPC = '0'. After modifying PP, software shall read PP and confirm that it has reached its target state before modifying it again, undefined behavior may occur if this procedure is not followed.              '0' = This port is in the Powered-off state.              '1' = This port is not in the Powered-off state.              If the Port Power Control [PPC] flag in the HCCPARAMS register is '1', then xHC has port power control switches and this bit represents the current setting of the switch ['0' = off, '1'=on].              If the Port Power Control [PPC] flag in the HCCPARAMS register is '0', then xHC does not have port power control switches and each port is hard wired to power, and not affected by this bit.              When an over-current condition is detected on a powered port, the xHC shall transition the PP bit in each affected port from a '1' to '0' [removing power from the port]. Refer to section 4.19.4 for more information." range="9" rwaccess="R/W"/> 
		<bitfield id="PLS" width="4" begin="8" end="5" resetval="0x5" description="Port Link State [PLS], RWS. Default = RxDetect ['5']. This field is used to power manage the port and reflects its current link state. When the port is in the Enabled state, system software may set the link U state by writing this field. System software may also write this field to force a Disabled to Disconnected state transition of the port.              Write Values:               0: The link shall transition to a U0 state from any of the U states.             2: The link should transition to the U2 State.             3: The link shall transition to a U3 state from the U0 state. This action selectively suspends the device connected to this port. While the Port Link State = U3, the hub does not propagate downstream-directed traffic to this port, but the hub shall respond to resume signaling from the port.             5: USB3 protocol ports only. If the port is in the Disabled state [PLS = Disabled, PP = 1], then the link shall transition to a RxDetect state and the port shall transition to the Disconnected state, else ignored.             10: USB3 protocol ports only. If CTC bit in HCCPARAMS2 is 2, it shall enable a link transition to the Compliance state, i.e. CTE = 1.  Refer to section 4.19.1.2.4.1 of xHCI specification for more information.             15: If the port is in the U3 state [PLS = U3], then the link shall remain in the U3 state and the port shall transition to the Resume substate, else ignored. Refer to section 4.15.2 of xHCI specification for more information.              others: Ignored.             State Encoding:             0: Link is in the U0 State,             1: Link is in the U1 State,             2: Link is in the U2 State,             3: Link is in the U3 State [Device Suspended],             4: Link is in the Disabled State,             5: Link is in the RxDetect State,             6: Link is in the Inactive State,             7: Link is in the Polling State,             8: Link is in the Recovery State,             9: Link is in the Hot Reset State,             10 Link is in the Compliance Mode State,             11: Link is in the Test Mode State,             12-14: Reserved,             15: Link is in the Resume State.             Note: The Port Link State Write Strobe [LWS] shall also be set to '1' to write this field. This field is undefined if PP = '0'.             Writing a value of '2' to this field shall request LPM, asserting L1 signaling on the USB2 bus. Software may read this field to determine if the transition to the U2 state was successful. Writing a value of '0' shall deassert L1 signaling on the USB. Writing a value of '1' shall have no effect. The U1 state shall never be reported by a USB2 protocol port.             Note: Transitions between different states are not reflected until the transition is complete.             Refer to section 4.19 of xHCI specification for PLS transition conditions. Refer to sections 4.15.2 and 4.23.5 for more information on the use of this field. Refer to the USB2 LPM ECR for more information on USB link power management operation." range="8 - 5" rwaccess="R/W"/> 
		<bitfield id="PR" width="1" begin="4" end="4" resetval="0x0" description="Port Reset [PR],  RW1S. Default = '0'.             '1' = Port Reset signaling is asserted. '0' = Port is not in Reset. When software writes a '1' to this bit generating a '0' to '1' transition, the bus reset sequence is initiated. USB2 protocol ports shall execute the bus reset sequence as defined in the USB2 Spec. PR remains set until reset signaling is completed by the root hub.             Note that software shall write a '1' to this flag to transition a USB2 port from the Polling state to the Enabled state. Refer to sections 4.15.2.3 and 4.19.1.1 of xHCI specification.             This flag is '0' if PP is '0'." range="4" rwaccess="R/W1TS"/> 
		<bitfield id="OCA" width="1" begin="3" end="3" resetval="0x0" description="Over-current Active [OCA],  RO. Default = '0'.             '1' = This port currently has an over-current condition. '0' = This port does not have an over-current condition.             This bit shall automatically transition from a '1' to a '0' when the over-current condition is removed." range="3" rwaccess="R"/> 
		<bitfield id="RSVDZ_1" width="1" begin="2" end="2" resetval="0x0" description="Reserved and Zero: Reserved for future RW1C implementations. Software shall use zero for writes to these bits.           Note: At present the fields are implemented as RO." range="2" rwaccess="R"/> 
		<bitfield id="PED" width="1" begin="1" end="1" resetval="0x0" description="Port Enabled/Disabled [PED],  RW1CS. Default = '0'. '1' = Enabled. '0' = Disabled.             Ports may only be enabled by the xHC. Software cannot enable a port by writing a '1' to this flag. A port may be disabled by software writing a '1' to this flag.             This flag shall automatically be cleared to '0' by a disconnect event or other fault condition. Note that the bit status does not change until the port state actually changes. There may be a delay in disabling or enabling a port due to other host controller or bus events.             When the port is disabled [PED = '0'] downstream propagation of data is blocked on this port, except for reset.              When the port is in the Disabled state, software shall reset the port [PR = '1'] to transition PED to '1' and the port to the Enabled state.               Note that when software writes this bit to a '1', it shall also write a '0' to the PR bit.             This flag is '0' if PP is '0'." range="1" rwaccess="R/W1TC"/> 
		<bitfield id="CCS" width="1" begin="0" end="0" resetval="0x0" description="Current Connect Status [CCS], ROS. Default = '0'.               '1' = A device is connected to the port. '0' = A device is not connected.             This value reflects the current state of the port, and may not correspond directly to the event that caused the Connect Status Change [CSC] bit to be set to '1'. Refer to sections 4.19.3 and 4.19.4 of xHCI specification for more details on the Connect Status Change [CSC] assertion conditions. This flag is '0' if PP is '0'." range="0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_PORTPMSC1USB2" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_PORTPMSC1USB2" offset="0x10484" width="32" description="The USB2 Port Power Management Status and Control register. Provides the USB2 LPM parameters necessary for the xHC to generate a LPM Token to the downstream device. This register may be read from or written to at any time, including whilst the CNR field in the USBSTS register is high.">
		<bitfield id="PTC" width="4" begin="31" end="28" resetval="0x0" description="Port Test Control, RW. Default = '0'. When this field is '0', the port is NOT operating in a test mode. A non-zero value indicates that it is operating in test mode and the specific test mode is indicated by the specific value.               A non-zero Port Test Control value is only valid to a port that is in the Powered-Off state [PLS = Disabled]. If the port is not in this state, the xHC shall respond with the Port Test Control field set to Port Test Control Error. Refer to section 4.19.6 for the operational model for using these test modes.             The encoding of the Test Mode bits for a USB2 protocol port are:              0: Test mode not enabled               1: Test J_STATE               2: Test K_STATE               3: Test SE0_NAK               4: Test Packet               5: Test FORCE_ENABLE               6-14: Reserved.               15: Port Test Control Error.               Refer to the sections 7.1.20 and 11.24.2.13 of the USB2 spec for more information on Test Modes." range="31 - 28" rwaccess="R/W"/> 
		<bitfield id="RSVDP" width="11" begin="27" end="17" resetval="0x0" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.           Note: At present the fields are implemented as RO." range="27 - 17" rwaccess="R"/> 
		<bitfield id="HLE" width="1" begin="16" end="16" resetval="0x0" description="Hardware LPM Enable [HLE], RW.  Default = '0'. If this bit is set to '1', then hardware controlled LPM shall be enabled for this port. Refer to section 4.23.5.1.1.1 of xHCI specification. If the USB2 Hardware LPM Capability is not supported [HLC = '0'] this field shall be RsvdZ." range="16" rwaccess="R/W"/> 
		<bitfield id="L1DS" width="8" begin="15" end="8" resetval="0x0" description="L1 Device Slot, RW. Default = 0. System software sets this field to indicate the ID of the Device Slot associated with the device directly attached to the Root Hub port. A value of '0' indicates no device is present. The xHC uses this field to lookup information necessary to generate the LPM Token packet." range="15 - 8" rwaccess="R/W"/> 
		<bitfield id="BESL" width="4" begin="7" end="4" resetval="0x0" description="Best Effort Service Latency [BESL], RW. Default = 0.               System software sets this field to indicate to the recipient device how long the xHC will drive resume if it [the xHC] initiates an exit from L1. The BESL value encoding is defined in Table 13.                Note that the BESL field is used by both software and hardware controlled LPM. Refer to section 4.23.5.1.1 of xHCI specification for more information on BESL use. Refer to section 5.2.5 of xHCI specification for information on how DBESL may be used to establish an initial value for BESL." range="7 - 4" rwaccess="R/W"/> 
		<bitfield id="RWE" width="1" begin="3" end="3" resetval="0x0" description="Remote Wake Enable [RWE], RW. Default = '0'. System software sets this flag to enable or disable the device for remote wake from L1. The value of this flag shall temporarily [while in L1] override the current setting of the Remote Wake feature set by the standard Set/ClearFeature[] commands defined in Universal Serial Bus Specification, revision 2.0, Chapter 9." range="3" rwaccess="R/W"/> 
		<bitfield id="L1S" width="3" begin="2" end="0" resetval="0x0" description="L1 Status [L1S], RO. Default = 0. This field is used by software to determine whether an L1-based suspend request [LPM transaction] was successful, specifically:              0: Invalid - This field shall be ignored by software.               1: Success - Port successfully transitioned to L1 [ACK]               2: Not Yet - Device is unable to enter L1 at this time [NYET]               3: Not Supported - Device does not support L1 transitions [STALL]               4: Timeout/Error - Device failed to respond to the LPM Transaction or an error occurred               5-7: Reserved               The value of this field is only valid when the port resides in the L0 or L1 state [PLS = 0 or 2]. Refer to section 4.23.5.1.1 of xHCI specification for more information." range="2 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_RSVDP1USB2" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_RSVDP1USB2" offset="0x10488" width="32" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.">
		<bitfield id="RSVDP_1" width="32" begin="31" end="0" resetval="0x0" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.           Note: At present the fields are implemented as RO." range="31 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_PORT1HLPMC" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_PORT1HLPMC" offset="0x1048C" width="32" description="The optional normative USB2 Port Hardware LPM Control register provides the USB2 LPM parameters necessary for the xHC to automatically generate a LPM Token to the downstream device. Refer to section 4.23.5.1.1.1 of xHCI specification for more information.  This register may be read from or written to at any time, including whilst the CNR field in the USBSTS register is high.">
		<bitfield id="RSVDP" width="18" begin="31" end="14" resetval="0x0" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.           Note: At present the fields are implemented as RO." range="31 - 14" rwaccess="R"/> 
		<bitfield id="BESLD" width="4" begin="13" end="10" resetval="0x0" description="Best Effort Service Latency Deep [BESLD], RWS. Default = '0'.   System software sets this field to indicate to the recipient device how long the xHC will drive resume on an exit from U2. Refer to section 4.23.5.1.1.1 of xHCI specification for more information on BESLD use. The BESLD value encoding is defined in Table 13. Refer to section 5.2.6 of xHCI specification for information on how DBESLD may be used to establish an initial value for BESLD." range="13 - 10" rwaccess="R/W"/> 
		<bitfield id="L1_TIMEOUT" width="8" begin="9" end="2" resetval="0x0" description="L1 Timeout,  RWS. Default = 00h. Timeout value for the L1 inactivity timer [LPM Timer]. This field shall be set to 00h by the assertion of PR to '1'. Refer to section 4.23.5.1.1.1 of xHci specification for more information on L1 Timeout operation.             The following are permissible values:               00h 128 us. [default]              01h 256 us.              02h 512 us.              03h 768 us.              ...               FFh 65,280 us." range="9 - 2" rwaccess="R/W"/> 
		<bitfield id="HIRDM" width="2" begin="1" end="0" resetval="0x0" description="Host Initiated Resume Duration Mode [HIRDM], RWS. Default = 0h. Indicates which HIRD value should be used.             The following are permissible values:              0: Initiate L1 using BESL only on timeout. [default]              1: Initiate L1 using BESLD on timeout. If rejected by device, initiate L1 using BESL.               3-2: Reserved." range="1 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_PORTSC1USB3" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_PORTSC1USB3" offset="0x10490" width="32" description="Port Status and Control Register for USB3 protocol port. The register cannot be accessed if USB3 PHY is not active (i.e. when there is no USB3 PHY or when USB3 PHY has not started providing USB3 PIPE PCLK after reset).">
		<bitfield id="WPR" width="1" begin="31" end="31" resetval="0x0" description="Warm Port Reset [WPR],  RW1S. Default = '0'. When software writes a '1' to this bit, the Warm Reset sequence as defined in the USB3 Specification is initiated and the PR flag is set to '1'. Once initiated, the PR, PRC, and WRC flags shall reflect the progress of the Warm Reset sequence. This flag shall always return 0 when read. Refer to section 4.19.5.1 of xHCI specification." range="31" rwaccess="R/W1TS"/> 
		<bitfield id="DR" width="1" begin="30" end="30" resetval="0x0" description="Device Removable [DR], RO. This flag indicates if this port has a removable device attached.             '0' = Device is removable.             '1' = Device is non-removable." range="30" rwaccess="R"/> 
		<bitfield id="RSVDZ_2" width="2" begin="29" end="28" resetval="0x0" description="Reserved and Zero: Reserved for future RW1C implementations. Software shall use zero for writes to these bits.           Note: At present the fields are implemented as RO." range="29 - 28" rwaccess="R"/> 
		<bitfield id="WOE" width="1" begin="27" end="27" resetval="0x0" description="Wake on Over-current Enable [WOE],  RWS. Default = '0'.             Writing this bit to a '1' enables the port to be sensitive to over-current conditions as system wake-up events. Refer to section 4.15 of xHCI specification for operational model." range="27" rwaccess="R/W"/> 
		<bitfield id="WDE" width="1" begin="26" end="26" resetval="0x0" description="Wake on Disconnect Enable [WDE],  RWS. Default = '0'.             Writing this bit to a '1' enables the port to be sensitive to device disconnects as system wake-up events. Refer to section 4.15 of xHCI specification for operational model." range="26" rwaccess="R/W"/> 
		<bitfield id="WCE" width="1" begin="25" end="25" resetval="0x0" description="Wake on Connect Enable [WCE],  RWS. Default = '0'.               Writing this bit to a '1' enables the port to be sensitive to device connects as system wake-up events. Refer to section 4.15 of xHCI specification for operational model." range="25" rwaccess="R/W"/> 
		<bitfield id="CAS" width="1" begin="24" end="24" resetval="0x0" description="Cold Attach Status [CAS], RO. Default = '0'.               '1' = Far-end Receiver Terminations were detected in the Disconnected state and the Root Hub Port State Machine was unable to advance to the Enabled state. Refer to sections 4.19.8 of xHCI specification for more details on the Cold Attach Status [CAS] assertion conditions. Software shall clear this bit by writing a '1' to WPR or the xHC shall clear this bit if CCS transitions to '1'. This flag is 0 if PP is 0 or for USB2 protocol ports.                 Note: Additionally to the xHCI spec the CAS may be set in D1/D2 state. If customer's PLL lock time ensures finishing LFPS in tPollingLFPSTimeout [360ms] the SW driver may ignore the CAS and wait for PORTSC.CCS. It prevents additional reset on USB port. However, handling CAS in normal way should not have any negative impact on the device." range="24" rwaccess="R"/> 
		<bitfield id="CEC" width="1" begin="23" end="23" resetval="0x0" description="Port Config Error Change [CEC], RW1CS. Default = '0'.               This flag indicates that the port failed to configure its link partner.               '0' = No change. '1' = Port Config Error detected. Software shall clear this bit by writing a '1' to it. Refer to section 4.19.2 of xHCI specification for more information on change bit usage." range="23" rwaccess="R/W1TC"/> 
		<bitfield id="PLC" width="1" begin="22" end="22" resetval="0x0" description="Port Link State Change [PLC],  RW1CS.               Default = '0'. This flag is set to '1' due to the following PLS transitions:                U3 -> Resume [Wakeup signaling from a device],               Resume -> Recovery -> U0 [Device Resume complete [USB3 protocol ports only]],               Resume -> U0 [Device Resume complete [USB2 protocol ports only]],               U3 -> Recovery -> U0 [Software Resume complete [USB3 protocol ports only]],               U3 -> U0 [Software Resume complete [USB2 protocol ports only]],               U2 -> U0 [L1 Resume complete [USB2 protocol ports only]],               U0 -> U0 [L1 Entry Reject [USB2 protocol ports only]],               Any state -> Inactive [Error [USB3 protocol ports only]].               Note that this flag shall not be set if the PLS transition was due to software setting PP to 0.               Refer to section 4.23.5 of xHCI specification for more information. '0' = No change. '1' = Link Status Changed. Software shall clear this bit by writing a '1' to it. Refer to PLC Condition: references in section 4.19.1 for the specific port state transitions that set this flag. Refer to section 4.19.2 of xHCI specification for more information on change bit usage." range="22" rwaccess="R/W1TC"/> 
		<bitfield id="PRC" width="1" begin="21" end="21" resetval="0x0" description="Port Reset Change [PRC],  RW1CS. Default = '0'.                This flag is set to '1' due to a '1' to '0' transition of Port Reset [PR], e.g. when any reset processing [Warm or Hot] on this port is complete. Note that this flag shall not be set to '1' if the reset processing was forced to terminate due to software clearing PP or PED to '0'.                '0' = No change. '1' = Reset complete.                Software shall clear this bit by writing a '1' to it. Refer to section 4.19.5 of xHCI specification. Refer to section 4.19.2 of xHCI specification for more information on change bit usage." range="21" rwaccess="R/W1TC"/> 
		<bitfield id="OCC" width="1" begin="20" end="20" resetval="0x0" description="Over-current Change [OCC],  RW1CS.               Default = '0'. This bit shall be set to a '1' when there is a '0' to '1' or '1' to '0' transition of Over-current Active [OCA]. Software shall clear this bit by writing a '1' to it. Refer to section 4.19.2 of xHCI specification for more information on change bit usage." range="20" rwaccess="R/W1TC"/> 
		<bitfield id="WRC" width="1" begin="19" end="19" resetval="0x0" description="Warm Port Reset Change [WRC],  RW1CS. Default = '0'. This bit is set when Warm Reset processing on this port completes. '0' = No change. '1' = Warm Reset complete.               Note that this flag shall not be set to '1' if the Warm Reset processing was forced to terminate due to software clearing PP or PED to '0'.               Software shall clear this bit by writing a '1' to it. Refer to section 4.19.5.1 of xHCI specification. Refer to section 4.19.2 of xHCI specification for more information on change bit usage." range="19" rwaccess="R/W1TC"/> 
		<bitfield id="PEC" width="1" begin="18" end="18" resetval="0x0" description="Port Enabled/Disabled Change [PEC],  RW1CS. Default = '0'.               '1' = change in PED. '0' = No change. Note that this flag shall not be set if the PED transition was due to software setting PP to '0'. Software shall clear this bit by writing a '1' to it. Refer to section 4.19.2 of xHCI specification for more information on change bit usage.                 This bit shall never be set to '1'." range="18" rwaccess="R/W1TC"/> 
		<bitfield id="CSC" width="1" begin="17" end="17" resetval="0x0" description="Connect Status Change [CSC],  RW1CS.               Default = '0'. '1' = Change in CCS. '0' = No change. This flag indicates a change has occurred in the ports Current Connect Status [CCS] or Cold Attach Status [CAS] bits.                Note that this flag shall not be set if the CCS transition was due to software setting PP to '0', or the CAS transition was due to software setting WPR to '1'.                The xHC sets this bit to '1' for all changes to the port device connect status, even if system software has not cleared an existing Connect Status Change. For example, the insertion status changes twice before system software has cleared the changed condition, root hub hardware will be setting an already-set bit [i.e., the bit will remain 1]. Software shall clear this bit by writing a '1' to it. Refer to section 4.19.2 of xHCI specification for more information on change bit usage." range="17" rwaccess="R/W1TC"/> 
		<bitfield id="LWS" width="1" begin="16" end="16" resetval="0x0" description="Port Link State Write Strobe [LWS],  RW. Default = '0'. When this bit is set to '1' on a write reference to this register, this flag enables writes to the PLS field. When '0', write data in PLS field is ignored. Reads to this bit return '0'." range="16" rwaccess="R/W"/> 
		<bitfield id="PIC" width="2" begin="15" end="14" resetval="0x0" description="Port Indicator Control [PIC],  RWS.             Default = '0'. Writing to these bits has no effect if the Port Indicators [PIND] bit in the HCCPARAMS register is a '0'. If PIND bit is a '1', then the bit encodings are:              0: Port indicators are off,             1: Amber,             2: Green,             3: Undefined.             This field is '0' if PP is '0'." range="15 - 14" rwaccess="R/W"/> 
		<bitfield id="PORTSPEED" width="4" begin="13" end="10" resetval="0x0" description="Port Speed [Port Speed],  ROS.             Default = '0'. This field identifies the speed of the connected USB Device. This field is only relevant if a device is connected [CCS = '1'] in all other cases this field shall indicate Undefined Speed.               Possible values:               0: Undefined Speed              1-15: Protocol Speed ID [PSI], refer to section 7.2.1 of xHCI specification for the definition of PSIV field in the PSI Dword." range="13 - 10" rwaccess="R"/> 
		<bitfield id="PP" width="1" begin="9" end="9" resetval="0x1" description="Port Power [PP],  RWS.             Default = '1'. This flag reflects a port's logical, power control state. Because host controllers can implement different methods of port power switching, this flag may or may not represent whether [VBus] power is actually applied to the port. When PP equals a '0' the port is nonfunctional and shall not report attaches, detaches, or Port Link State [PLS] changes. However, the port shall report over-current conditions when PP = '0' if PPC = '0'. After modifying PP, software shall read PP and confirm that it has reached its target state before modifying it again, undefined behavior may occur if this procedure is not followed.              '0' = This port is in the Powered-off state.              '1' = This port is not in the Powered-off state.              If the Port Power Control [PPC] flag in the HCCPARAMS register is '1', then xHC has port power control switches and this bit represents the current setting of the switch ['0' = off, '1'=on].              If the Port Power Control [PPC] flag in the HCCPARAMS register is '0', then xHC does not have port power control switches and each port is hard wired to power, and not affected by this bit.              When an over-current condition is detected on a powered port, the xHC shall transition the PP bit in each affected port from a '1' to '0' [removing power from the port]. Refer to section 4.19.4 for more information." range="9" rwaccess="R/W"/> 
		<bitfield id="PLS" width="4" begin="8" end="5" resetval="0x5" description="Port Link State [PLS], RWS. Default = RxDetect ['5']. This field is used to power manage the port and reflects its current link state. When the port is in the Enabled state, system software may set the link U state by writing this field. System software may also write this field to force a Disabled to Disconnected state transition of the port.              Write Values:               0: The link shall transition to a U0 state from any of the U states.             3: The link shall transition to a U3 state from the U0 state. This action selectively suspends the device connected to this port. While the Port Link State = U3, the hub does not propagate downstream-directed traffic to this port, but the hub shall respond to resume signaling from the port.             5: If the port is in the Disabled state [PLS = Disabled, PP = '1'], then the link shall transition to a RxDetect state and the port shall transition to the Disconnected state, else ignored.              1-2,4,6-15: Ignored.                State Encoding:             0: Link is in the U0 State,             1: Link is in the U1 State,             2: Link is in the U2 State,             3: Link is in the U3 State [Device Suspended],             4: Link is in the Disabled State,             5: Link is in the RxDetect State,             6: Link is in the Inactive State,             7: Link is in the Polling State,             8: Link is in the Recovery State,             9: Link is in the Hot Reset State,             10 Link is in the Compliance Mode State,             11: Link is in the Test Mode State,             12-14: Reserved,             15: Link is in the Resume State.             Note: The Port Link State Write Strobe [LWS] shall also be set to '1' to write this field. This field is undefined if PP = '0'.             Note: Transitions between different states are not reflected until the transition is complete.             Refer to section 4.19 of xHCI specification for PLS transition conditions. Refer to sections 4.15.2 and 4.23.5 for more information on the use of this field." range="8 - 5" rwaccess="R/W"/> 
		<bitfield id="PR" width="1" begin="4" end="4" resetval="0x0" description="Port Reset [PR],  RW1S. Default = '0'.               '1' = Port Reset signaling is asserted. '0' = Port is not in Reset. When software writes a '1' to this bit generating a '0' to '1' transition, the bus reset sequence is initiated. USB3 protocol ports shall execute the Hot Reset sequence as defined in the USB3 Spec. PR remains set until reset signaling is completed by the root hub.               This flag is '0' if PP is '0'." range="4" rwaccess="R/W1TS"/> 
		<bitfield id="OCA" width="1" begin="3" end="3" resetval="0x0" description="Over-current Active [OCA],  RO. Default = '0'.               '1' = This port currently has an over-current condition. '0' = This port does not have an over-current condition.               This bit shall automatically transition from a '1' to a '0' when the over-current condition is removed." range="3" rwaccess="R"/> 
		<bitfield id="RSVDZ_1" width="1" begin="2" end="2" resetval="0x0" description="Reserved and Zero: Reserved for future RW1C implementations. Software shall use zero for writes to these bits.           Note: At present the fields are implemented as RO." range="2" rwaccess="R"/> 
		<bitfield id="PED" width="1" begin="1" end="1" resetval="0x0" description="Port Enabled/Disabled [PED],  RW1CS. Default = '0'. '1' = Enabled. '0' = Disabled.               Ports may only be enabled by the xHC. Software cannot enable a port by writing a '1' to this flag. A port may be disabled by software writing a '1' to this flag.               This flag shall automatically be cleared to '0' by a disconnect event or other fault condition. Note that the bit status does not change until the port state actually changes. There may be a delay in disabling or enabling a port due to other host controller or bus events.               When the port is disabled [PED = '0'] downstream propagation of data is blocked on this port, except for reset.                When the port is in the Polling state [after detecting an attach], the port shall automatically transition to the Enabled state and set PED to '1' upon the completion of successful link training. When the port is in the Disabled state, software shall write a 5 [RxDetect] to the PLS field to transition the port to the Disconnected state. Refer to section 4.19.1.2 of xHCI specification. PED shall automatically be cleared to '0' when PR is set to '1', and set to '1' when PR transitions from '1' to '0' after a successful reset. Refer to Port Reset [PR] bit for more information on how the PED bit is managed.                 Note that when software writes this bit to a '1', it shall also write a '0' to the PR bit.               This flag is '0' if PP is '0'." range="1" rwaccess="R/W1TC"/> 
		<bitfield id="CCS" width="1" begin="0" end="0" resetval="0x0" description="Current Connect Status [CCS], ROS. Default = '0'.               '1' = A device is connected to the port. '0' = A device is not connected.             This value reflects the current state of the port, and may not correspond directly to the event that caused the Connect Status Change [CSC] bit to be set to '1'. Refer to sections 4.19.3 and 4.19.4 of xHCI specification for more details on the Connect Status Change [CSC] assertion conditions. This flag is '0' if PP is '0'." range="0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_PORTPMSC1USB3" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_PORTPMSC1USB3" offset="0x10494" width="32" description="USB3 Port Power Management Status and Control register. Controls the SuperSpeed USB link U-State timeouts. The register cannot be accessed if USB3 PHY is not active (i.e. when there is no USB3 PHY or when USB3 PHY has not started providing USB3 PIPE PCLK after reset).">
		<bitfield id="RSVDP" width="15" begin="31" end="17" resetval="0x0" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.           Note: At present the fields are implemented as RO." range="31 - 17" rwaccess="R"/> 
		<bitfield id="FLA" width="1" begin="16" end="16" resetval="0x0" description="Force Link PM Accept [FLA], RW. Default = '0'. When this bit is set to '1', the port shall generate a Set Link Function LMP with the Force_LinkPM_Accept bit asserted ['1']. When this bit is cleared to '0', the port shall generate a Set Link Function LMP with the Force_LinkPM_Accept bit de-asserted ['0'].             This flag shall be set to '0' by the assertion of PR to '1' or when CCS = transitions from '0' to '1'. Writes to this flag have no effect if PP = '0'.               The Set Link Function LMP is sent by the xHC to the device connected on this port when this bit transitions from '0' to '1' or '1' to '0'. Refer to Sections 8.4.2 and 10.14.2.2 of the USB3 specification for more details.              Improper use of the SS Force_LinkPM_Accept functionality can impact the performance of the link significantly. This bit shall only be used for compliance and testing purposes. Software shall ensure that there are no pending packets at the link level before setting this bit.             This flag is '0' if PP is '0'." range="16" rwaccess="R/W"/> 
		<bitfield id="U2_TIMEOUT" width="8" begin="15" end="8" resetval="0x0" description="U2 Timeout,  RWS.   Default = 0. Timeout value for U2 inactivity timer. If equal to FFh, the port is disabled from initiating U2 entry. This field shall be set to '0' by the assertion of PR to '1'. Refer to section 4.19.4.1 of xHCI specification for more information on U2 Timeout operation.             The following are permissible values:               00h Zero [default]               01h 256 us              02h 512 us               ...               FEh 65,.024 ms               FFh Infinite               A U2 Inactivity Timeout LMP shall be sent by the xHC to the device connected on this port when this field is written. Refer to Sections 8.4.3 and 10.4.2.10 of the USB3 specification for more details." range="15 - 8" rwaccess="R/W"/> 
		<bitfield id="U1_TIMEOUT" width="8" begin="7" end="0" resetval="0x0" description="U1 Timeout,  RWS.               Default = 0. Timeout value for U1 inactivity timer. If equal to FFh, the port is disabled from initiating U1 entry. This field shall be set to '0' by the assertion of PR to '1'. Refer to section 4.19.4.1 of xHCI specification for more information on U1 Timeout operation.             The following are permissible values:               00h Zero [default]               01h 1 us.               02h 2 us.               ...                    7Fh 127 us.              80h - FEh Reserved              FFh Infinite" range="7 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_PORTLI1" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_PORTLI1" offset="0x10498" width="32" description="The USB3 Port Link Info register reports the Link Error Count.">
		<bitfield id="RSVDP" width="16" begin="31" end="16" resetval="0x0" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.           Note: At present the fields are implemented as RO." range="31 - 16" rwaccess="R"/> 
		<bitfield id="LEC" width="16" begin="15" end="0" resetval="0x0" description="Link Error Count,  RO. Default = '0'. This field returns the number of link errors detected by the port. This value shall be reset to '0' by the assertion of a Chip Hardware Reset, HCRST, when PR transitions from 1 to 0, or when CCS = transitions from '0' to '1'." range="15 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_RSVDP1USB3" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_RSVDP1USB3" offset="0x1049C" width="32" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.">
		<bitfield id="RSVDP_1" width="32" begin="31" end="0" resetval="0x0" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.           Note: At present the fields are implemented as RO." range="31 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_MFINDEX" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_MFINDEX" offset="0x12000" width="32" description="This register is used by the system software to determine the current periodic frame. The register value is
         incremented every 125 microseconds (once each microframe). This register is only incremented while Run/Stop (R/S) = '1'.
         The value of this register affects the SOF value generated by USB2 Bus Instances.">
		<bitfield id="RSVDZ1" width="18" begin="31" end="14" resetval="0x0" description="Reserved and Zero: Reserved for future RW1C implementations. Software shall use zero for writes to these bits.           Note: At present the fields are implemented as RO." range="31 - 14" rwaccess="R"/> 
		<bitfield id="MFINDEX" width="14" begin="13" end="0" resetval="0x0" description="Microframe Index,  RO. The value in this register increments at the end of each microframe               [e.g. 125us.]. Bits [13:3] may be used to determine the current 1ms Frame Index.               Note: Setting frindex_wr_en to '1' [bit 31 of XECP_CMDM_CTRL_REG3] enables software writes to this field." range="13 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_RSVDZ_RT" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_RSVDZ_RT" offset="0x12004" width="32" description="Reserved and Zero: Reserved for future RW1C implementations. Software shall use zero for writes to these bits.">
		<bitfield id="RSVDZ_1" width="32" begin="31" end="0" resetval="0x0" description="Reserved and Zero: Reserved for future RW1C implementations. Software shall use zero for writes to these bits.           Note: At present the fields are implemented as RO." range="31 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_IMAN0" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_IMAN0" offset="0x12020" width="32" description="Interrupter Management Register (IMAN). The Interrupter Management register allows system software to enable, disable, detect, and force xHC interrupts.">
		<bitfield id="RSVDP1" width="30" begin="31" end="2" resetval="0x0" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.           Note: At present the fields are implemented as RO." range="31 - 2" rwaccess="R"/> 
		<bitfield id="IE" width="1" begin="1" end="1" resetval="0x0" description="Interrupt Enable [IE], RW. Default = '0'. This flag specifies whether the Interrupter is capable of generating an interrupt. When this bit and the IP bit are set ['1'], the Interrupter shall generate an interrupt when the Interrupter Moderation Counter reaches 0. If this bit is '0', then the Interrupter is prohibited from generating interrupts." range="1" rwaccess="R/W"/> 
		<bitfield id="IP" width="1" begin="0" end="0" resetval="0x0" description="Interrupt Pending [IP], RW1C. Default = '0'. This flag represents the current state of the Interrupter. If IP = '1', an interrupt is pending for this Interrupter. A '0' value indicates that no interrupt is pending for the Interrupter. Refer to section 4.17.5 of the xHCI specification for the conditions that modify the state of this flag." range="0" rwaccess="R/W1TC"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_IMOD0" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_IMOD0" offset="0x12024" width="32" description="Interrupter Moderation Register (IMOD). The Interrupter Moderation Register controls the interrupt moderation feature of an Interrupter, allowing system software to throttle the interrupt rate generated by the xHC.">
		<bitfield id="IMODC" width="16" begin="31" end="16" resetval="0x0" description="Interrupt Moderation Counter [IMODC],  RW. Default = undefined. Down counter. Loaded with the IMODI value whenever IP is cleared to '0', counts down to 0, and stops. The associated interrupt shall be signaled whenever this counter is zero, the Event Ring is not empty, the IE and IP flags = '1', and EHB = '0'. This counter may be directly written by software at any time to alter the interrupt rate." range="31 - 16" rwaccess="R/W"/> 
		<bitfield id="IMODI" width="16" begin="15" end="0" resetval="0x4000" description="Interrupt Moderation Interval [IMODI],  RW. Default = 'hFA0' [~1ms]. Minimum inter-interrupt interval. The interval is specified in 250ns increments. A value of zero disables interrupt throttling logic and interrupts shall be generated immediately if IP = '0', EHB = '0', and the Event Ring is not empty. The IMODI field shall default to 'hFA0' [1 ms] upon initialization and reset. It may be loaded with an alternative value by software when the Interrupter is initialized." range="15 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERSTSZ0" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERSTSZ0" offset="0x12028" width="32" description="Event Ring Segment Table Size Register (ERSTSZ). The Event Ring Segment Table Size Register defines the number of segments supported by the Event Ring Segment Table.">
		<bitfield id="RSVDP1" width="16" begin="31" end="16" resetval="0x0" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.           Note: At present the fields are implemented as RO." range="31 - 16" rwaccess="R"/> 
		<bitfield id="ERSTS" width="16" begin="15" end="0" resetval="0x0" description="Event Ring Segment Table Size,  RW. Default = 0. This field identifies the number of valid Event Ring Segment Table entries in the Event Ring Segment Table pointed to by the Event Ring Segment Table Base Address register. The maximum value supported by an xHC implementation for this register is defined by the ERST Max field in the HCSPARAMS2 register.              For Secondary Interrupters: Writing a value of 0 to this field disables the Event Ring. Any events targeted at this Event Ring when it is disabled shall result in undefined behavior of the Event Ring.             For the Primary Interrupter: Writing a value of 0 to this field shall result in undefined behavior of the Event Ring. The Primary Event Ring cannot be disabled." range="15 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_reserved0" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_reserved0" offset="0x1202C" width="32" description="Reserved">
		<bitfield id="RSVDP1" width="32" begin="31" end="0" resetval="0x0" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.           Note: At present the fields are implemented as RO." range="31 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERSTBA0_LO" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERSTBA0_LO" offset="0x12030" width="32" description="The Event Ring Segment Table Base Address Register identifies the start address of the Event Ring Segment Table.">
		<bitfield id="ERSTBADDR_LO" width="26" begin="31" end="6" resetval="0x0" description="Event Ring Segment Table Base Address Register, RW. Default = 0. This field defines the low order bit [25:0] of the start address of the Event Ring Segment Table [the address is 58 bits wide] . Writing this register sets the Event Ring State Machine: EREP Advancement to the Start state. This field shall not be modified if HCHalted [HCH] = '0'." range="31 - 6" rwaccess="R/W"/> 
		<bitfield id="RSVDP1" width="6" begin="5" end="0" resetval="0x0" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.           Note: At present the fields are implemented as RO." range="5 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERSTBA0_HI" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERSTBA0_HI" offset="0x12034" width="32" description="The Event Ring Segment Table Base Address Register identifies the start address of the Event Ring Segment Table.">
		<bitfield id="ERSTBADDR_HI" width="32" begin="31" end="0" resetval="0x0" description="Event Ring Segment Table Base Address Register, RW. Default = 0. This field defines the high order bits [57:26] of the start address of the Event Ring Segment Table [the address is 58 bits wide] . Writing this register sets the Event Ring State Machine:EREP Advancement to the Start state. Refer to Figure 20 in xHCI specificationfor more information. This field shall not be modified if HCHalted [HCH] = '0'." range="31 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERDP0_LO" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERDP0_LO" offset="0x12038" width="32" description="Event Ring Dequeue Pointer Register (ERDP). The Event Ring Dequeue Pointer Register is written by software to define the Event Ring Dequeue Pointer location to the xHC. Software updates this pointer when it has finished the evaluation of an Event(s) on the Event Ring.">
		<bitfield id="ERDPTR" width="28" begin="31" end="4" resetval="0x0" description="Event Ring Dequeue Pointer, RW. Default = 0. This field defines the 28 low order bits of the 64-bit address of the current Event Ring Dequeue Pointer." range="31 - 4" rwaccess="R/W"/> 
		<bitfield id="EHB" width="1" begin="3" end="3" resetval="0x0" description="Event Handler Busy [EHB], RW1C. Default = '0'. This flag shall be set to '1' when the IP bit is set to '1' and cleared to '0' by software when the Dequeue Pointer register is written. Refer to section 4.17.2 of xHCI specification for more information" range="3" rwaccess="R/W1TC"/> 
		<bitfield id="DESI" width="3" begin="2" end="0" resetval="0x0" description="Dequeue ERST Segment Index [DESI]. Default = 0. This field may be used by the xHC to accelerate checking the Event Ring full condition. This field is written with the low order 3 bits of the offset of the ERST entry which defines the Event Ring segment that the Event Ring Dequeue Pointer resides in." range="2 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERDP0_HI" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERDP0_HI" offset="0x1203C" width="32" description="Event Ring Dequeue Pointer Register (ERDP). The Event Ring Dequeue Pointer Register is written by software to define the Event Ring Dequeue Pointer location to the xHC. Software updates this pointer when it has finished the evaluation of an Event(s) on the Event Ring.">
		<bitfield id="ERDPTR_HI" width="32" begin="31" end="0" resetval="0x0" description="Event Ring Dequeue Pointer, RW. Default = 0. This field defines the 32 high order bits of the 64-bit address of the current Event Ring Dequeue Pointer." range="31 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_IMAN1" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_IMAN1" offset="0x12040" width="32" description="Interrupter Management Register (IMAN). The Interrupter Management register allows system software to enable, disable, detect, and force xHC interrupts.">
		<bitfield id="RSVDP1" width="30" begin="31" end="2" resetval="0x0" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.           Note: At present the fields are implemented as RO." range="31 - 2" rwaccess="R"/> 
		<bitfield id="IE" width="1" begin="1" end="1" resetval="0x0" description="Interrupt Enable [IE], RW. Default = '0'. This flag specifies whether the Interrupter is capable of generating an interrupt. When this bit and the IP bit are set ['1'], the Interrupter shall generate an interrupt when the Interrupter Moderation Counter reaches 0. If this bit is '0', then the Interrupter is prohibited from generating interrupts." range="1" rwaccess="R/W"/> 
		<bitfield id="IP" width="1" begin="0" end="0" resetval="0x0" description="Interrupt Pending [IP], RW1C. Default = '0'. This flag represents the current state of the Interrupter. If IP = '1', an interrupt is pending for this Interrupter. A '0' value indicates that no interrupt is pending for the Interrupter. Refer to section 4.17.5 of the xHCI specification for the conditions that modify the state of this flag." range="0" rwaccess="R/W1TC"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_IMOD1" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_IMOD1" offset="0x12044" width="32" description="Interrupter Moderation Register (IMOD). The Interrupter Moderation Register controls the interrupt moderation feature of an Interrupter, allowing system software to throttle the interrupt rate generated by the xHC.">
		<bitfield id="IMODC" width="16" begin="31" end="16" resetval="0x0" description="Interrupt Moderation Counter [IMODC],  RW. Default = undefined. Down counter. Loaded with the IMODI value whenever IP is cleared to '0', counts down to 0, and stops. The associated interrupt shall be signaled whenever this counter is zero, the Event Ring is not empty, the IE and IP flags = '1', and EHB = '0'. This counter may be directly written by software at any time to alter the interrupt rate." range="31 - 16" rwaccess="R/W"/> 
		<bitfield id="IMODI" width="16" begin="15" end="0" resetval="0x4000" description="Interrupt Moderation Interval [IMODI],  RW. Default = 'hFA0' [~1ms]. Minimum inter-interrupt interval. The interval is specified in 250ns increments. A value of zero disables interrupt throttling logic and interrupts shall be generated immediately if IP = '0', EHB = '0', and the Event Ring is not empty. The IMODI field shall default to 'hFA0' [1 ms] upon initialization and reset. It may be loaded with an alternative value by software when the Interrupter is initialized." range="15 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERSTSZ1" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERSTSZ1" offset="0x12048" width="32" description="Event Ring Segment Table Size Register (ERSTSZ). The Event Ring Segment Table Size Register defines the number of segments supported by the Event Ring Segment Table.">
		<bitfield id="RSVDP1" width="16" begin="31" end="16" resetval="0x0" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.           Note: At present the fields are implemented as RO." range="31 - 16" rwaccess="R"/> 
		<bitfield id="ERSTS" width="16" begin="15" end="0" resetval="0x0" description="Event Ring Segment Table Size,  RW. Default = 0. This field identifies the number of valid Event Ring Segment Table entries in the Event Ring Segment Table pointed to by the Event Ring Segment Table Base Address register. The maximum value supported by an xHC implementation for this register is defined by the ERST Max field in the HCSPARAMS2 register.              For Secondary Interrupters: Writing a value of 0 to this field disables the Event Ring. Any events targeted at this Event Ring when it is disabled shall result in undefined behavior of the Event Ring.             For the Primary Interrupter: Writing a value of 0 to this field shall result in undefined behavior of the Event Ring. The Primary Event Ring cannot be disabled." range="15 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_reserved1" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_reserved1" offset="0x1204C" width="32" description="Reserved">
		<bitfield id="RSVDP1" width="32" begin="31" end="0" resetval="0x0" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.           Note: At present the fields are implemented as RO." range="31 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERSTBA1_LO" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERSTBA1_LO" offset="0x12050" width="32" description="The Event Ring Segment Table Base Address Register identifies the start address of the Event Ring Segment Table.">
		<bitfield id="ERSTBADDR_LO" width="26" begin="31" end="6" resetval="0x0" description="Event Ring Segment Table Base Address Register, RW. Default = 0. This field defines the low order bit [25:0] of the start address of the Event Ring Segment Table [the address is 58 bits wide] . Writing this register sets the Event Ring State Machine: EREP Advancement to the Start state. This field shall not be modified if HCHalted [HCH] = '0'." range="31 - 6" rwaccess="R/W"/> 
		<bitfield id="RSVDP1" width="6" begin="5" end="0" resetval="0x0" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.           Note: At present the fields are implemented as RO." range="5 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERSTBA1_HI" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERSTBA1_HI" offset="0x12054" width="32" description="The Event Ring Segment Table Base Address Register identifies the start address of the Event Ring Segment Table.">
		<bitfield id="ERSTBADDR_HI" width="32" begin="31" end="0" resetval="0x0" description="Event Ring Segment Table Base Address Register, RW. Default = 0. This field defines the high order bits [57:26] of the start address of the Event Ring Segment Table [the address is 58 bits wide] . Writing this register sets the Event Ring State Machine:EREP Advancement to the Start state. Refer to Figure 20 in xHCI specificationfor more information. This field shall not be modified if HCHalted [HCH] = '0'." range="31 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERDP1_LO" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERDP1_LO" offset="0x12058" width="32" description="Event Ring Dequeue Pointer Register (ERDP). The Event Ring Dequeue Pointer Register is written by software to define the Event Ring Dequeue Pointer location to the xHC. Software updates this pointer when it has finished the evaluation of an Event(s) on the Event Ring.">
		<bitfield id="ERDPTR" width="28" begin="31" end="4" resetval="0x0" description="Event Ring Dequeue Pointer, RW. Default = 0. This field defines the 28 low order bits of the 64-bit address of the current Event Ring Dequeue Pointer." range="31 - 4" rwaccess="R/W"/> 
		<bitfield id="EHB" width="1" begin="3" end="3" resetval="0x0" description="Event Handler Busy [EHB], RW1C. Default = '0'. This flag shall be set to '1' when the IP bit is set to '1' and cleared to '0' by software when the Dequeue Pointer register is written. Refer to section 4.17.2 of xHCI specification for more information" range="3" rwaccess="R/W1TC"/> 
		<bitfield id="DESI" width="3" begin="2" end="0" resetval="0x0" description="Dequeue ERST Segment Index [DESI]. Default = 0. This field may be used by the xHC to accelerate checking the Event Ring full condition. This field is written with the low order 3 bits of the offset of the ERST entry which defines the Event Ring segment that the Event Ring Dequeue Pointer resides in." range="2 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERDP1_HI" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERDP1_HI" offset="0x1205C" width="32" description="Event Ring Dequeue Pointer Register (ERDP). The Event Ring Dequeue Pointer Register is written by software to define the Event Ring Dequeue Pointer location to the xHC. Software updates this pointer when it has finished the evaluation of an Event(s) on the Event Ring.">
		<bitfield id="ERDPTR_HI" width="32" begin="31" end="0" resetval="0x0" description="Event Ring Dequeue Pointer, RW. Default = 0. This field defines the 32 high order bits of the 64-bit address of the current Event Ring Dequeue Pointer." range="31 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_IMAN2" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_IMAN2" offset="0x12060" width="32" description="Interrupter Management Register (IMAN). The Interrupter Management register allows system software to enable, disable, detect, and force xHC interrupts.">
		<bitfield id="RSVDP1" width="30" begin="31" end="2" resetval="0x0" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.           Note: At present the fields are implemented as RO." range="31 - 2" rwaccess="R"/> 
		<bitfield id="IE" width="1" begin="1" end="1" resetval="0x0" description="Interrupt Enable [IE], RW. Default = '0'. This flag specifies whether the Interrupter is capable of generating an interrupt. When this bit and the IP bit are set ['1'], the Interrupter shall generate an interrupt when the Interrupter Moderation Counter reaches 0. If this bit is '0', then the Interrupter is prohibited from generating interrupts." range="1" rwaccess="R/W"/> 
		<bitfield id="IP" width="1" begin="0" end="0" resetval="0x0" description="Interrupt Pending [IP], RW1C. Default = '0'. This flag represents the current state of the Interrupter. If IP = '1', an interrupt is pending for this Interrupter. A '0' value indicates that no interrupt is pending for the Interrupter. Refer to section 4.17.5 of the xHCI specification for the conditions that modify the state of this flag." range="0" rwaccess="R/W1TC"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_IMOD2" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_IMOD2" offset="0x12064" width="32" description="Interrupter Moderation Register (IMOD). The Interrupter Moderation Register controls the interrupt moderation feature of an Interrupter, allowing system software to throttle the interrupt rate generated by the xHC.">
		<bitfield id="IMODC" width="16" begin="31" end="16" resetval="0x0" description="Interrupt Moderation Counter [IMODC],  RW. Default = undefined. Down counter. Loaded with the IMODI value whenever IP is cleared to '0', counts down to 0, and stops. The associated interrupt shall be signaled whenever this counter is zero, the Event Ring is not empty, the IE and IP flags = '1', and EHB = '0'. This counter may be directly written by software at any time to alter the interrupt rate." range="31 - 16" rwaccess="R/W"/> 
		<bitfield id="IMODI" width="16" begin="15" end="0" resetval="0x4000" description="Interrupt Moderation Interval [IMODI],  RW. Default = 'hFA0' [~1ms]. Minimum inter-interrupt interval. The interval is specified in 250ns increments. A value of zero disables interrupt throttling logic and interrupts shall be generated immediately if IP = '0', EHB = '0', and the Event Ring is not empty. The IMODI field shall default to 'hFA0' [1 ms] upon initialization and reset. It may be loaded with an alternative value by software when the Interrupter is initialized." range="15 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERSTSZ2" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERSTSZ2" offset="0x12068" width="32" description="Event Ring Segment Table Size Register (ERSTSZ). The Event Ring Segment Table Size Register defines the number of segments supported by the Event Ring Segment Table.">
		<bitfield id="RSVDP1" width="16" begin="31" end="16" resetval="0x0" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.           Note: At present the fields are implemented as RO." range="31 - 16" rwaccess="R"/> 
		<bitfield id="ERSTS" width="16" begin="15" end="0" resetval="0x0" description="Event Ring Segment Table Size,  RW. Default = 0. This field identifies the number of valid Event Ring Segment Table entries in the Event Ring Segment Table pointed to by the Event Ring Segment Table Base Address register. The maximum value supported by an xHC implementation for this register is defined by the ERST Max field in the HCSPARAMS2 register.              For Secondary Interrupters: Writing a value of 0 to this field disables the Event Ring. Any events targeted at this Event Ring when it is disabled shall result in undefined behavior of the Event Ring.             For the Primary Interrupter: Writing a value of 0 to this field shall result in undefined behavior of the Event Ring. The Primary Event Ring cannot be disabled." range="15 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_reserved2" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_reserved2" offset="0x1206C" width="32" description="Reserved">
		<bitfield id="RSVDP1" width="32" begin="31" end="0" resetval="0x0" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.           Note: At present the fields are implemented as RO." range="31 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERSTBA2_LO" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERSTBA2_LO" offset="0x12070" width="32" description="The Event Ring Segment Table Base Address Register identifies the start address of the Event Ring Segment Table.">
		<bitfield id="ERSTBADDR_LO" width="26" begin="31" end="6" resetval="0x0" description="Event Ring Segment Table Base Address Register, RW. Default = 0. This field defines the low order bit [25:0] of the start address of the Event Ring Segment Table [the address is 58 bits wide] . Writing this register sets the Event Ring State Machine: EREP Advancement to the Start state. This field shall not be modified if HCHalted [HCH] = '0'." range="31 - 6" rwaccess="R/W"/> 
		<bitfield id="RSVDP1" width="6" begin="5" end="0" resetval="0x0" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.           Note: At present the fields are implemented as RO." range="5 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERSTBA2_HI" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERSTBA2_HI" offset="0x12074" width="32" description="The Event Ring Segment Table Base Address Register identifies the start address of the Event Ring Segment Table.">
		<bitfield id="ERSTBADDR_HI" width="32" begin="31" end="0" resetval="0x0" description="Event Ring Segment Table Base Address Register, RW. Default = 0. This field defines the high order bits [57:26] of the start address of the Event Ring Segment Table [the address is 58 bits wide] . Writing this register sets the Event Ring State Machine:EREP Advancement to the Start state. Refer to Figure 20 in xHCI specificationfor more information. This field shall not be modified if HCHalted [HCH] = '0'." range="31 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERDP2_LO" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERDP2_LO" offset="0x12078" width="32" description="Event Ring Dequeue Pointer Register (ERDP). The Event Ring Dequeue Pointer Register is written by software to define the Event Ring Dequeue Pointer location to the xHC. Software updates this pointer when it has finished the evaluation of an Event(s) on the Event Ring.">
		<bitfield id="ERDPTR" width="28" begin="31" end="4" resetval="0x0" description="Event Ring Dequeue Pointer, RW. Default = 0. This field defines the 28 low order bits of the 64-bit address of the current Event Ring Dequeue Pointer." range="31 - 4" rwaccess="R/W"/> 
		<bitfield id="EHB" width="1" begin="3" end="3" resetval="0x0" description="Event Handler Busy [EHB], RW1C. Default = '0'. This flag shall be set to '1' when the IP bit is set to '1' and cleared to '0' by software when the Dequeue Pointer register is written. Refer to section 4.17.2 of xHCI specification for more information" range="3" rwaccess="R/W1TC"/> 
		<bitfield id="DESI" width="3" begin="2" end="0" resetval="0x0" description="Dequeue ERST Segment Index [DESI]. Default = 0. This field may be used by the xHC to accelerate checking the Event Ring full condition. This field is written with the low order 3 bits of the offset of the ERST entry which defines the Event Ring segment that the Event Ring Dequeue Pointer resides in." range="2 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERDP2_HI" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERDP2_HI" offset="0x1207C" width="32" description="Event Ring Dequeue Pointer Register (ERDP). The Event Ring Dequeue Pointer Register is written by software to define the Event Ring Dequeue Pointer location to the xHC. Software updates this pointer when it has finished the evaluation of an Event(s) on the Event Ring.">
		<bitfield id="ERDPTR_HI" width="32" begin="31" end="0" resetval="0x0" description="Event Ring Dequeue Pointer, RW. Default = 0. This field defines the 32 high order bits of the 64-bit address of the current Event Ring Dequeue Pointer." range="31 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_IMAN3" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_IMAN3" offset="0x12080" width="32" description="Interrupter Management Register (IMAN). The Interrupter Management register allows system software to enable, disable, detect, and force xHC interrupts.">
		<bitfield id="RSVDP1" width="30" begin="31" end="2" resetval="0x0" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.           Note: At present the fields are implemented as RO." range="31 - 2" rwaccess="R"/> 
		<bitfield id="IE" width="1" begin="1" end="1" resetval="0x0" description="Interrupt Enable [IE], RW. Default = '0'. This flag specifies whether the Interrupter is capable of generating an interrupt. When this bit and the IP bit are set ['1'], the Interrupter shall generate an interrupt when the Interrupter Moderation Counter reaches 0. If this bit is '0', then the Interrupter is prohibited from generating interrupts." range="1" rwaccess="R/W"/> 
		<bitfield id="IP" width="1" begin="0" end="0" resetval="0x0" description="Interrupt Pending [IP], RW1C. Default = '0'. This flag represents the current state of the Interrupter. If IP = '1', an interrupt is pending for this Interrupter. A '0' value indicates that no interrupt is pending for the Interrupter. Refer to section 4.17.5 of the xHCI specification for the conditions that modify the state of this flag." range="0" rwaccess="R/W1TC"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_IMOD3" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_IMOD3" offset="0x12084" width="32" description="Interrupter Moderation Register (IMOD). The Interrupter Moderation Register controls the interrupt moderation feature of an Interrupter, allowing system software to throttle the interrupt rate generated by the xHC.">
		<bitfield id="IMODC" width="16" begin="31" end="16" resetval="0x0" description="Interrupt Moderation Counter [IMODC],  RW. Default = undefined. Down counter. Loaded with the IMODI value whenever IP is cleared to '0', counts down to 0, and stops. The associated interrupt shall be signaled whenever this counter is zero, the Event Ring is not empty, the IE and IP flags = '1', and EHB = '0'. This counter may be directly written by software at any time to alter the interrupt rate." range="31 - 16" rwaccess="R/W"/> 
		<bitfield id="IMODI" width="16" begin="15" end="0" resetval="0x4000" description="Interrupt Moderation Interval [IMODI],  RW. Default = 'hFA0' [~1ms]. Minimum inter-interrupt interval. The interval is specified in 250ns increments. A value of zero disables interrupt throttling logic and interrupts shall be generated immediately if IP = '0', EHB = '0', and the Event Ring is not empty. The IMODI field shall default to 'hFA0' [1 ms] upon initialization and reset. It may be loaded with an alternative value by software when the Interrupter is initialized." range="15 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERSTSZ3" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERSTSZ3" offset="0x12088" width="32" description="Event Ring Segment Table Size Register (ERSTSZ). The Event Ring Segment Table Size Register defines the number of segments supported by the Event Ring Segment Table.">
		<bitfield id="RSVDP1" width="16" begin="31" end="16" resetval="0x0" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.           Note: At present the fields are implemented as RO." range="31 - 16" rwaccess="R"/> 
		<bitfield id="ERSTS" width="16" begin="15" end="0" resetval="0x0" description="Event Ring Segment Table Size,  RW. Default = 0. This field identifies the number of valid Event Ring Segment Table entries in the Event Ring Segment Table pointed to by the Event Ring Segment Table Base Address register. The maximum value supported by an xHC implementation for this register is defined by the ERST Max field in the HCSPARAMS2 register.              For Secondary Interrupters: Writing a value of 0 to this field disables the Event Ring. Any events targeted at this Event Ring when it is disabled shall result in undefined behavior of the Event Ring.             For the Primary Interrupter: Writing a value of 0 to this field shall result in undefined behavior of the Event Ring. The Primary Event Ring cannot be disabled." range="15 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_reserved3" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_reserved3" offset="0x1208C" width="32" description="Reserved">
		<bitfield id="RSVDP1" width="32" begin="31" end="0" resetval="0x0" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.           Note: At present the fields are implemented as RO." range="31 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERSTBA3_LO" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERSTBA3_LO" offset="0x12090" width="32" description="The Event Ring Segment Table Base Address Register identifies the start address of the Event Ring Segment Table.">
		<bitfield id="ERSTBADDR_LO" width="26" begin="31" end="6" resetval="0x0" description="Event Ring Segment Table Base Address Register, RW. Default = 0. This field defines the low order bit [25:0] of the start address of the Event Ring Segment Table [the address is 58 bits wide] . Writing this register sets the Event Ring State Machine: EREP Advancement to the Start state. This field shall not be modified if HCHalted [HCH] = '0'." range="31 - 6" rwaccess="R/W"/> 
		<bitfield id="RSVDP1" width="6" begin="5" end="0" resetval="0x0" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.           Note: At present the fields are implemented as RO." range="5 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERSTBA3_HI" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERSTBA3_HI" offset="0x12094" width="32" description="The Event Ring Segment Table Base Address Register identifies the start address of the Event Ring Segment Table.">
		<bitfield id="ERSTBADDR_HI" width="32" begin="31" end="0" resetval="0x0" description="Event Ring Segment Table Base Address Register, RW. Default = 0. This field defines the high order bits [57:26] of the start address of the Event Ring Segment Table [the address is 58 bits wide] . Writing this register sets the Event Ring State Machine:EREP Advancement to the Start state. Refer to Figure 20 in xHCI specificationfor more information. This field shall not be modified if HCHalted [HCH] = '0'." range="31 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERDP3_LO" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERDP3_LO" offset="0x12098" width="32" description="Event Ring Dequeue Pointer Register (ERDP). The Event Ring Dequeue Pointer Register is written by software to define the Event Ring Dequeue Pointer location to the xHC. Software updates this pointer when it has finished the evaluation of an Event(s) on the Event Ring.">
		<bitfield id="ERDPTR" width="28" begin="31" end="4" resetval="0x0" description="Event Ring Dequeue Pointer, RW. Default = 0. This field defines the 28 low order bits of the 64-bit address of the current Event Ring Dequeue Pointer." range="31 - 4" rwaccess="R/W"/> 
		<bitfield id="EHB" width="1" begin="3" end="3" resetval="0x0" description="Event Handler Busy [EHB], RW1C. Default = '0'. This flag shall be set to '1' when the IP bit is set to '1' and cleared to '0' by software when the Dequeue Pointer register is written. Refer to section 4.17.2 of xHCI specification for more information" range="3" rwaccess="R/W1TC"/> 
		<bitfield id="DESI" width="3" begin="2" end="0" resetval="0x0" description="Dequeue ERST Segment Index [DESI]. Default = 0. This field may be used by the xHC to accelerate checking the Event Ring full condition. This field is written with the low order 3 bits of the offset of the ERST entry which defines the Event Ring segment that the Event Ring Dequeue Pointer resides in." range="2 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERDP3_HI" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERDP3_HI" offset="0x1209C" width="32" description="Event Ring Dequeue Pointer Register (ERDP). The Event Ring Dequeue Pointer Register is written by software to define the Event Ring Dequeue Pointer location to the xHC. Software updates this pointer when it has finished the evaluation of an Event(s) on the Event Ring.">
		<bitfield id="ERDPTR_HI" width="32" begin="31" end="0" resetval="0x0" description="Event Ring Dequeue Pointer, RW. Default = 0. This field defines the 32 high order bits of the 64-bit address of the current Event Ring Dequeue Pointer." range="31 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_IMAN4" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_IMAN4" offset="0x120A0" width="32" description="Interrupter Management Register (IMAN). The Interrupter Management register allows system software to enable, disable, detect, and force xHC interrupts.">
		<bitfield id="RSVDP1" width="30" begin="31" end="2" resetval="0x0" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.           Note: At present the fields are implemented as RO." range="31 - 2" rwaccess="R"/> 
		<bitfield id="IE" width="1" begin="1" end="1" resetval="0x0" description="Interrupt Enable [IE], RW. Default = '0'. This flag specifies whether the Interrupter is capable of generating an interrupt. When this bit and the IP bit are set ['1'], the Interrupter shall generate an interrupt when the Interrupter Moderation Counter reaches 0. If this bit is '0', then the Interrupter is prohibited from generating interrupts." range="1" rwaccess="R/W"/> 
		<bitfield id="IP" width="1" begin="0" end="0" resetval="0x0" description="Interrupt Pending [IP], RW1C. Default = '0'. This flag represents the current state of the Interrupter. If IP = '1', an interrupt is pending for this Interrupter. A '0' value indicates that no interrupt is pending for the Interrupter. Refer to section 4.17.5 of the xHCI specification for the conditions that modify the state of this flag." range="0" rwaccess="R/W1TC"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_IMOD4" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_IMOD4" offset="0x120A4" width="32" description="Interrupter Moderation Register (IMOD). The Interrupter Moderation Register controls the interrupt moderation feature of an Interrupter, allowing system software to throttle the interrupt rate generated by the xHC.">
		<bitfield id="IMODC" width="16" begin="31" end="16" resetval="0x0" description="Interrupt Moderation Counter [IMODC],  RW. Default = undefined. Down counter. Loaded with the IMODI value whenever IP is cleared to '0', counts down to 0, and stops. The associated interrupt shall be signaled whenever this counter is zero, the Event Ring is not empty, the IE and IP flags = '1', and EHB = '0'. This counter may be directly written by software at any time to alter the interrupt rate." range="31 - 16" rwaccess="R/W"/> 
		<bitfield id="IMODI" width="16" begin="15" end="0" resetval="0x4000" description="Interrupt Moderation Interval [IMODI],  RW. Default = 'hFA0' [~1ms]. Minimum inter-interrupt interval. The interval is specified in 250ns increments. A value of zero disables interrupt throttling logic and interrupts shall be generated immediately if IP = '0', EHB = '0', and the Event Ring is not empty. The IMODI field shall default to 'hFA0' [1 ms] upon initialization and reset. It may be loaded with an alternative value by software when the Interrupter is initialized." range="15 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERSTSZ4" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERSTSZ4" offset="0x120A8" width="32" description="Event Ring Segment Table Size Register (ERSTSZ). The Event Ring Segment Table Size Register defines the number of segments supported by the Event Ring Segment Table.">
		<bitfield id="RSVDP1" width="16" begin="31" end="16" resetval="0x0" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.           Note: At present the fields are implemented as RO." range="31 - 16" rwaccess="R"/> 
		<bitfield id="ERSTS" width="16" begin="15" end="0" resetval="0x0" description="Event Ring Segment Table Size,  RW. Default = 0. This field identifies the number of valid Event Ring Segment Table entries in the Event Ring Segment Table pointed to by the Event Ring Segment Table Base Address register. The maximum value supported by an xHC implementation for this register is defined by the ERST Max field in the HCSPARAMS2 register.              For Secondary Interrupters: Writing a value of 0 to this field disables the Event Ring. Any events targeted at this Event Ring when it is disabled shall result in undefined behavior of the Event Ring.             For the Primary Interrupter: Writing a value of 0 to this field shall result in undefined behavior of the Event Ring. The Primary Event Ring cannot be disabled." range="15 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_reserved4" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_reserved4" offset="0x120AC" width="32" description="Reserved">
		<bitfield id="RSVDP1" width="32" begin="31" end="0" resetval="0x0" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.           Note: At present the fields are implemented as RO." range="31 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERSTBA4_LO" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERSTBA4_LO" offset="0x120B0" width="32" description="The Event Ring Segment Table Base Address Register identifies the start address of the Event Ring Segment Table.">
		<bitfield id="ERSTBADDR_LO" width="26" begin="31" end="6" resetval="0x0" description="Event Ring Segment Table Base Address Register, RW. Default = 0. This field defines the low order bit [25:0] of the start address of the Event Ring Segment Table [the address is 58 bits wide] . Writing this register sets the Event Ring State Machine: EREP Advancement to the Start state. This field shall not be modified if HCHalted [HCH] = '0'." range="31 - 6" rwaccess="R/W"/> 
		<bitfield id="RSVDP1" width="6" begin="5" end="0" resetval="0x0" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.           Note: At present the fields are implemented as RO." range="5 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERSTBA4_HI" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERSTBA4_HI" offset="0x120B4" width="32" description="The Event Ring Segment Table Base Address Register identifies the start address of the Event Ring Segment Table.">
		<bitfield id="ERSTBADDR_HI" width="32" begin="31" end="0" resetval="0x0" description="Event Ring Segment Table Base Address Register, RW. Default = 0. This field defines the high order bits [57:26] of the start address of the Event Ring Segment Table [the address is 58 bits wide] . Writing this register sets the Event Ring State Machine:EREP Advancement to the Start state. Refer to Figure 20 in xHCI specificationfor more information. This field shall not be modified if HCHalted [HCH] = '0'." range="31 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERDP4_LO" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERDP4_LO" offset="0x120B8" width="32" description="Event Ring Dequeue Pointer Register (ERDP). The Event Ring Dequeue Pointer Register is written by software to define the Event Ring Dequeue Pointer location to the xHC. Software updates this pointer when it has finished the evaluation of an Event(s) on the Event Ring.">
		<bitfield id="ERDPTR" width="28" begin="31" end="4" resetval="0x0" description="Event Ring Dequeue Pointer, RW. Default = 0. This field defines the 28 low order bits of the 64-bit address of the current Event Ring Dequeue Pointer." range="31 - 4" rwaccess="R/W"/> 
		<bitfield id="EHB" width="1" begin="3" end="3" resetval="0x0" description="Event Handler Busy [EHB], RW1C. Default = '0'. This flag shall be set to '1' when the IP bit is set to '1' and cleared to '0' by software when the Dequeue Pointer register is written. Refer to section 4.17.2 of xHCI specification for more information" range="3" rwaccess="R/W1TC"/> 
		<bitfield id="DESI" width="3" begin="2" end="0" resetval="0x0" description="Dequeue ERST Segment Index [DESI]. Default = 0. This field may be used by the xHC to accelerate checking the Event Ring full condition. This field is written with the low order 3 bits of the offset of the ERST entry which defines the Event Ring segment that the Event Ring Dequeue Pointer resides in." range="2 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERDP4_HI" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERDP4_HI" offset="0x120BC" width="32" description="Event Ring Dequeue Pointer Register (ERDP). The Event Ring Dequeue Pointer Register is written by software to define the Event Ring Dequeue Pointer location to the xHC. Software updates this pointer when it has finished the evaluation of an Event(s) on the Event Ring.">
		<bitfield id="ERDPTR_HI" width="32" begin="31" end="0" resetval="0x0" description="Event Ring Dequeue Pointer, RW. Default = 0. This field defines the 32 high order bits of the 64-bit address of the current Event Ring Dequeue Pointer." range="31 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_IMAN5" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_IMAN5" offset="0x120C0" width="32" description="Interrupter Management Register (IMAN). The Interrupter Management register allows system software to enable, disable, detect, and force xHC interrupts.">
		<bitfield id="RSVDP1" width="30" begin="31" end="2" resetval="0x0" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.           Note: At present the fields are implemented as RO." range="31 - 2" rwaccess="R"/> 
		<bitfield id="IE" width="1" begin="1" end="1" resetval="0x0" description="Interrupt Enable [IE], RW. Default = '0'. This flag specifies whether the Interrupter is capable of generating an interrupt. When this bit and the IP bit are set ['1'], the Interrupter shall generate an interrupt when the Interrupter Moderation Counter reaches 0. If this bit is '0', then the Interrupter is prohibited from generating interrupts." range="1" rwaccess="R/W"/> 
		<bitfield id="IP" width="1" begin="0" end="0" resetval="0x0" description="Interrupt Pending [IP], RW1C. Default = '0'. This flag represents the current state of the Interrupter. If IP = '1', an interrupt is pending for this Interrupter. A '0' value indicates that no interrupt is pending for the Interrupter. Refer to section 4.17.5 of the xHCI specification for the conditions that modify the state of this flag." range="0" rwaccess="R/W1TC"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_IMOD5" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_IMOD5" offset="0x120C4" width="32" description="Interrupter Moderation Register (IMOD). The Interrupter Moderation Register controls the interrupt moderation feature of an Interrupter, allowing system software to throttle the interrupt rate generated by the xHC.">
		<bitfield id="IMODC" width="16" begin="31" end="16" resetval="0x0" description="Interrupt Moderation Counter [IMODC],  RW. Default = undefined. Down counter. Loaded with the IMODI value whenever IP is cleared to '0', counts down to 0, and stops. The associated interrupt shall be signaled whenever this counter is zero, the Event Ring is not empty, the IE and IP flags = '1', and EHB = '0'. This counter may be directly written by software at any time to alter the interrupt rate." range="31 - 16" rwaccess="R/W"/> 
		<bitfield id="IMODI" width="16" begin="15" end="0" resetval="0x4000" description="Interrupt Moderation Interval [IMODI],  RW. Default = 'hFA0' [~1ms]. Minimum inter-interrupt interval. The interval is specified in 250ns increments. A value of zero disables interrupt throttling logic and interrupts shall be generated immediately if IP = '0', EHB = '0', and the Event Ring is not empty. The IMODI field shall default to 'hFA0' [1 ms] upon initialization and reset. It may be loaded with an alternative value by software when the Interrupter is initialized." range="15 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERSTSZ5" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERSTSZ5" offset="0x120C8" width="32" description="Event Ring Segment Table Size Register (ERSTSZ). The Event Ring Segment Table Size Register defines the number of segments supported by the Event Ring Segment Table.">
		<bitfield id="RSVDP1" width="16" begin="31" end="16" resetval="0x0" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.           Note: At present the fields are implemented as RO." range="31 - 16" rwaccess="R"/> 
		<bitfield id="ERSTS" width="16" begin="15" end="0" resetval="0x0" description="Event Ring Segment Table Size,  RW. Default = 0. This field identifies the number of valid Event Ring Segment Table entries in the Event Ring Segment Table pointed to by the Event Ring Segment Table Base Address register. The maximum value supported by an xHC implementation for this register is defined by the ERST Max field in the HCSPARAMS2 register.              For Secondary Interrupters: Writing a value of 0 to this field disables the Event Ring. Any events targeted at this Event Ring when it is disabled shall result in undefined behavior of the Event Ring.             For the Primary Interrupter: Writing a value of 0 to this field shall result in undefined behavior of the Event Ring. The Primary Event Ring cannot be disabled." range="15 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_reserved5" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_reserved5" offset="0x120CC" width="32" description="Reserved">
		<bitfield id="RSVDP1" width="32" begin="31" end="0" resetval="0x0" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.           Note: At present the fields are implemented as RO." range="31 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERSTBA5_LO" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERSTBA5_LO" offset="0x120D0" width="32" description="The Event Ring Segment Table Base Address Register identifies the start address of the Event Ring Segment Table.">
		<bitfield id="ERSTBADDR_LO" width="26" begin="31" end="6" resetval="0x0" description="Event Ring Segment Table Base Address Register, RW. Default = 0. This field defines the low order bit [25:0] of the start address of the Event Ring Segment Table [the address is 58 bits wide] . Writing this register sets the Event Ring State Machine: EREP Advancement to the Start state. This field shall not be modified if HCHalted [HCH] = '0'." range="31 - 6" rwaccess="R/W"/> 
		<bitfield id="RSVDP1" width="6" begin="5" end="0" resetval="0x0" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.           Note: At present the fields are implemented as RO." range="5 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERSTBA5_HI" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERSTBA5_HI" offset="0x120D4" width="32" description="The Event Ring Segment Table Base Address Register identifies the start address of the Event Ring Segment Table.">
		<bitfield id="ERSTBADDR_HI" width="32" begin="31" end="0" resetval="0x0" description="Event Ring Segment Table Base Address Register, RW. Default = 0. This field defines the high order bits [57:26] of the start address of the Event Ring Segment Table [the address is 58 bits wide] . Writing this register sets the Event Ring State Machine:EREP Advancement to the Start state. Refer to Figure 20 in xHCI specificationfor more information. This field shall not be modified if HCHalted [HCH] = '0'." range="31 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERDP5_LO" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERDP5_LO" offset="0x120D8" width="32" description="Event Ring Dequeue Pointer Register (ERDP). The Event Ring Dequeue Pointer Register is written by software to define the Event Ring Dequeue Pointer location to the xHC. Software updates this pointer when it has finished the evaluation of an Event(s) on the Event Ring.">
		<bitfield id="ERDPTR" width="28" begin="31" end="4" resetval="0x0" description="Event Ring Dequeue Pointer, RW. Default = 0. This field defines the 28 low order bits of the 64-bit address of the current Event Ring Dequeue Pointer." range="31 - 4" rwaccess="R/W"/> 
		<bitfield id="EHB" width="1" begin="3" end="3" resetval="0x0" description="Event Handler Busy [EHB], RW1C. Default = '0'. This flag shall be set to '1' when the IP bit is set to '1' and cleared to '0' by software when the Dequeue Pointer register is written. Refer to section 4.17.2 of xHCI specification for more information" range="3" rwaccess="R/W1TC"/> 
		<bitfield id="DESI" width="3" begin="2" end="0" resetval="0x0" description="Dequeue ERST Segment Index [DESI]. Default = 0. This field may be used by the xHC to accelerate checking the Event Ring full condition. This field is written with the low order 3 bits of the offset of the ERST entry which defines the Event Ring segment that the Event Ring Dequeue Pointer resides in." range="2 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERDP5_HI" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERDP5_HI" offset="0x120DC" width="32" description="Event Ring Dequeue Pointer Register (ERDP). The Event Ring Dequeue Pointer Register is written by software to define the Event Ring Dequeue Pointer location to the xHC. Software updates this pointer when it has finished the evaluation of an Event(s) on the Event Ring.">
		<bitfield id="ERDPTR_HI" width="32" begin="31" end="0" resetval="0x0" description="Event Ring Dequeue Pointer, RW. Default = 0. This field defines the 32 high order bits of the 64-bit address of the current Event Ring Dequeue Pointer." range="31 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_IMAN6" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_IMAN6" offset="0x120E0" width="32" description="Interrupter Management Register (IMAN). The Interrupter Management register allows system software to enable, disable, detect, and force xHC interrupts.">
		<bitfield id="RSVDP1" width="30" begin="31" end="2" resetval="0x0" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.           Note: At present the fields are implemented as RO." range="31 - 2" rwaccess="R"/> 
		<bitfield id="IE" width="1" begin="1" end="1" resetval="0x0" description="Interrupt Enable [IE], RW. Default = '0'. This flag specifies whether the Interrupter is capable of generating an interrupt. When this bit and the IP bit are set ['1'], the Interrupter shall generate an interrupt when the Interrupter Moderation Counter reaches 0. If this bit is '0', then the Interrupter is prohibited from generating interrupts." range="1" rwaccess="R/W"/> 
		<bitfield id="IP" width="1" begin="0" end="0" resetval="0x0" description="Interrupt Pending [IP], RW1C. Default = '0'. This flag represents the current state of the Interrupter. If IP = '1', an interrupt is pending for this Interrupter. A '0' value indicates that no interrupt is pending for the Interrupter. Refer to section 4.17.5 of the xHCI specification for the conditions that modify the state of this flag." range="0" rwaccess="R/W1TC"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_IMOD6" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_IMOD6" offset="0x120E4" width="32" description="Interrupter Moderation Register (IMOD). The Interrupter Moderation Register controls the interrupt moderation feature of an Interrupter, allowing system software to throttle the interrupt rate generated by the xHC.">
		<bitfield id="IMODC" width="16" begin="31" end="16" resetval="0x0" description="Interrupt Moderation Counter [IMODC],  RW. Default = undefined. Down counter. Loaded with the IMODI value whenever IP is cleared to '0', counts down to 0, and stops. The associated interrupt shall be signaled whenever this counter is zero, the Event Ring is not empty, the IE and IP flags = '1', and EHB = '0'. This counter may be directly written by software at any time to alter the interrupt rate." range="31 - 16" rwaccess="R/W"/> 
		<bitfield id="IMODI" width="16" begin="15" end="0" resetval="0x4000" description="Interrupt Moderation Interval [IMODI],  RW. Default = 'hFA0' [~1ms]. Minimum inter-interrupt interval. The interval is specified in 250ns increments. A value of zero disables interrupt throttling logic and interrupts shall be generated immediately if IP = '0', EHB = '0', and the Event Ring is not empty. The IMODI field shall default to 'hFA0' [1 ms] upon initialization and reset. It may be loaded with an alternative value by software when the Interrupter is initialized." range="15 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERSTSZ6" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERSTSZ6" offset="0x120E8" width="32" description="Event Ring Segment Table Size Register (ERSTSZ). The Event Ring Segment Table Size Register defines the number of segments supported by the Event Ring Segment Table.">
		<bitfield id="RSVDP1" width="16" begin="31" end="16" resetval="0x0" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.           Note: At present the fields are implemented as RO." range="31 - 16" rwaccess="R"/> 
		<bitfield id="ERSTS" width="16" begin="15" end="0" resetval="0x0" description="Event Ring Segment Table Size,  RW. Default = 0. This field identifies the number of valid Event Ring Segment Table entries in the Event Ring Segment Table pointed to by the Event Ring Segment Table Base Address register. The maximum value supported by an xHC implementation for this register is defined by the ERST Max field in the HCSPARAMS2 register.              For Secondary Interrupters: Writing a value of 0 to this field disables the Event Ring. Any events targeted at this Event Ring when it is disabled shall result in undefined behavior of the Event Ring.             For the Primary Interrupter: Writing a value of 0 to this field shall result in undefined behavior of the Event Ring. The Primary Event Ring cannot be disabled." range="15 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_reserved6" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_reserved6" offset="0x120EC" width="32" description="Reserved">
		<bitfield id="RSVDP1" width="32" begin="31" end="0" resetval="0x0" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.           Note: At present the fields are implemented as RO." range="31 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERSTBA6_LO" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERSTBA6_LO" offset="0x120F0" width="32" description="The Event Ring Segment Table Base Address Register identifies the start address of the Event Ring Segment Table.">
		<bitfield id="ERSTBADDR_LO" width="26" begin="31" end="6" resetval="0x0" description="Event Ring Segment Table Base Address Register, RW. Default = 0. This field defines the low order bit [25:0] of the start address of the Event Ring Segment Table [the address is 58 bits wide] . Writing this register sets the Event Ring State Machine: EREP Advancement to the Start state. This field shall not be modified if HCHalted [HCH] = '0'." range="31 - 6" rwaccess="R/W"/> 
		<bitfield id="RSVDP1" width="6" begin="5" end="0" resetval="0x0" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.           Note: At present the fields are implemented as RO." range="5 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERSTBA6_HI" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERSTBA6_HI" offset="0x120F4" width="32" description="The Event Ring Segment Table Base Address Register identifies the start address of the Event Ring Segment Table.">
		<bitfield id="ERSTBADDR_HI" width="32" begin="31" end="0" resetval="0x0" description="Event Ring Segment Table Base Address Register, RW. Default = 0. This field defines the high order bits [57:26] of the start address of the Event Ring Segment Table [the address is 58 bits wide] . Writing this register sets the Event Ring State Machine:EREP Advancement to the Start state. Refer to Figure 20 in xHCI specificationfor more information. This field shall not be modified if HCHalted [HCH] = '0'." range="31 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERDP6_LO" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERDP6_LO" offset="0x120F8" width="32" description="Event Ring Dequeue Pointer Register (ERDP). The Event Ring Dequeue Pointer Register is written by software to define the Event Ring Dequeue Pointer location to the xHC. Software updates this pointer when it has finished the evaluation of an Event(s) on the Event Ring.">
		<bitfield id="ERDPTR" width="28" begin="31" end="4" resetval="0x0" description="Event Ring Dequeue Pointer, RW. Default = 0. This field defines the 28 low order bits of the 64-bit address of the current Event Ring Dequeue Pointer." range="31 - 4" rwaccess="R/W"/> 
		<bitfield id="EHB" width="1" begin="3" end="3" resetval="0x0" description="Event Handler Busy [EHB], RW1C. Default = '0'. This flag shall be set to '1' when the IP bit is set to '1' and cleared to '0' by software when the Dequeue Pointer register is written. Refer to section 4.17.2 of xHCI specification for more information" range="3" rwaccess="R/W1TC"/> 
		<bitfield id="DESI" width="3" begin="2" end="0" resetval="0x0" description="Dequeue ERST Segment Index [DESI]. Default = 0. This field may be used by the xHC to accelerate checking the Event Ring full condition. This field is written with the low order 3 bits of the offset of the ERST entry which defines the Event Ring segment that the Event Ring Dequeue Pointer resides in." range="2 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERDP6_HI" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERDP6_HI" offset="0x120FC" width="32" description="Event Ring Dequeue Pointer Register (ERDP). The Event Ring Dequeue Pointer Register is written by software to define the Event Ring Dequeue Pointer location to the xHC. Software updates this pointer when it has finished the evaluation of an Event(s) on the Event Ring.">
		<bitfield id="ERDPTR_HI" width="32" begin="31" end="0" resetval="0x0" description="Event Ring Dequeue Pointer, RW. Default = 0. This field defines the 32 high order bits of the 64-bit address of the current Event Ring Dequeue Pointer." range="31 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_IMAN7" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_IMAN7" offset="0x12100" width="32" description="Interrupter Management Register (IMAN). The Interrupter Management register allows system software to enable, disable, detect, and force xHC interrupts.">
		<bitfield id="RSVDP1" width="30" begin="31" end="2" resetval="0x0" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.           Note: At present the fields are implemented as RO." range="31 - 2" rwaccess="R"/> 
		<bitfield id="IE" width="1" begin="1" end="1" resetval="0x0" description="Interrupt Enable [IE], RW. Default = '0'. This flag specifies whether the Interrupter is capable of generating an interrupt. When this bit and the IP bit are set ['1'], the Interrupter shall generate an interrupt when the Interrupter Moderation Counter reaches 0. If this bit is '0', then the Interrupter is prohibited from generating interrupts." range="1" rwaccess="R/W"/> 
		<bitfield id="IP" width="1" begin="0" end="0" resetval="0x0" description="Interrupt Pending [IP], RW1C. Default = '0'. This flag represents the current state of the Interrupter. If IP = '1', an interrupt is pending for this Interrupter. A '0' value indicates that no interrupt is pending for the Interrupter. Refer to section 4.17.5 of the xHCI specification for the conditions that modify the state of this flag." range="0" rwaccess="R/W1TC"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_IMOD7" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_IMOD7" offset="0x12104" width="32" description="Interrupter Moderation Register (IMOD). The Interrupter Moderation Register controls the interrupt moderation feature of an Interrupter, allowing system software to throttle the interrupt rate generated by the xHC.">
		<bitfield id="IMODC" width="16" begin="31" end="16" resetval="0x0" description="Interrupt Moderation Counter [IMODC],  RW. Default = undefined. Down counter. Loaded with the IMODI value whenever IP is cleared to '0', counts down to 0, and stops. The associated interrupt shall be signaled whenever this counter is zero, the Event Ring is not empty, the IE and IP flags = '1', and EHB = '0'. This counter may be directly written by software at any time to alter the interrupt rate." range="31 - 16" rwaccess="R/W"/> 
		<bitfield id="IMODI" width="16" begin="15" end="0" resetval="0x4000" description="Interrupt Moderation Interval [IMODI],  RW. Default = 'hFA0' [~1ms]. Minimum inter-interrupt interval. The interval is specified in 250ns increments. A value of zero disables interrupt throttling logic and interrupts shall be generated immediately if IP = '0', EHB = '0', and the Event Ring is not empty. The IMODI field shall default to 'hFA0' [1 ms] upon initialization and reset. It may be loaded with an alternative value by software when the Interrupter is initialized." range="15 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERSTSZ7" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERSTSZ7" offset="0x12108" width="32" description="Event Ring Segment Table Size Register (ERSTSZ). The Event Ring Segment Table Size Register defines the number of segments supported by the Event Ring Segment Table.">
		<bitfield id="RSVDP1" width="16" begin="31" end="16" resetval="0x0" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.           Note: At present the fields are implemented as RO." range="31 - 16" rwaccess="R"/> 
		<bitfield id="ERSTS" width="16" begin="15" end="0" resetval="0x0" description="Event Ring Segment Table Size,  RW. Default = 0. This field identifies the number of valid Event Ring Segment Table entries in the Event Ring Segment Table pointed to by the Event Ring Segment Table Base Address register. The maximum value supported by an xHC implementation for this register is defined by the ERST Max field in the HCSPARAMS2 register.              For Secondary Interrupters: Writing a value of 0 to this field disables the Event Ring. Any events targeted at this Event Ring when it is disabled shall result in undefined behavior of the Event Ring.             For the Primary Interrupter: Writing a value of 0 to this field shall result in undefined behavior of the Event Ring. The Primary Event Ring cannot be disabled." range="15 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_reserved7" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_reserved7" offset="0x1210C" width="32" description="Reserved">
		<bitfield id="RSVDP1" width="32" begin="31" end="0" resetval="0x0" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.           Note: At present the fields are implemented as RO." range="31 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERSTBA7_LO" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERSTBA7_LO" offset="0x12110" width="32" description="The Event Ring Segment Table Base Address Register identifies the start address of the Event Ring Segment Table.">
		<bitfield id="ERSTBADDR_LO" width="26" begin="31" end="6" resetval="0x0" description="Event Ring Segment Table Base Address Register, RW. Default = 0. This field defines the low order bit [25:0] of the start address of the Event Ring Segment Table [the address is 58 bits wide] . Writing this register sets the Event Ring State Machine: EREP Advancement to the Start state. This field shall not be modified if HCHalted [HCH] = '0'." range="31 - 6" rwaccess="R/W"/> 
		<bitfield id="RSVDP1" width="6" begin="5" end="0" resetval="0x0" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.           Note: At present the fields are implemented as RO." range="5 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERSTBA7_HI" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERSTBA7_HI" offset="0x12114" width="32" description="The Event Ring Segment Table Base Address Register identifies the start address of the Event Ring Segment Table.">
		<bitfield id="ERSTBADDR_HI" width="32" begin="31" end="0" resetval="0x0" description="Event Ring Segment Table Base Address Register, RW. Default = 0. This field defines the high order bits [57:26] of the start address of the Event Ring Segment Table [the address is 58 bits wide] . Writing this register sets the Event Ring State Machine:EREP Advancement to the Start state. Refer to Figure 20 in xHCI specificationfor more information. This field shall not be modified if HCHalted [HCH] = '0'." range="31 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERDP7_LO" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERDP7_LO" offset="0x12118" width="32" description="Event Ring Dequeue Pointer Register (ERDP). The Event Ring Dequeue Pointer Register is written by software to define the Event Ring Dequeue Pointer location to the xHC. Software updates this pointer when it has finished the evaluation of an Event(s) on the Event Ring.">
		<bitfield id="ERDPTR" width="28" begin="31" end="4" resetval="0x0" description="Event Ring Dequeue Pointer, RW. Default = 0. This field defines the 28 low order bits of the 64-bit address of the current Event Ring Dequeue Pointer." range="31 - 4" rwaccess="R/W"/> 
		<bitfield id="EHB" width="1" begin="3" end="3" resetval="0x0" description="Event Handler Busy [EHB], RW1C. Default = '0'. This flag shall be set to '1' when the IP bit is set to '1' and cleared to '0' by software when the Dequeue Pointer register is written. Refer to section 4.17.2 of xHCI specification for more information" range="3" rwaccess="R/W1TC"/> 
		<bitfield id="DESI" width="3" begin="2" end="0" resetval="0x0" description="Dequeue ERST Segment Index [DESI]. Default = 0. This field may be used by the xHC to accelerate checking the Event Ring full condition. This field is written with the low order 3 bits of the offset of the ERST entry which defines the Event Ring segment that the Event Ring Dequeue Pointer resides in." range="2 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERDP7_HI" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ERDP7_HI" offset="0x1211C" width="32" description="Event Ring Dequeue Pointer Register (ERDP). The Event Ring Dequeue Pointer Register is written by software to define the Event Ring Dequeue Pointer location to the xHC. Software updates this pointer when it has finished the evaluation of an Event(s) on the Event Ring.">
		<bitfield id="ERDPTR_HI" width="32" begin="31" end="0" resetval="0x0" description="Event Ring Dequeue Pointer, RW. Default = 0. This field defines the 32 high order bits of the 64-bit address of the current Event Ring Dequeue Pointer." range="31 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_DB0" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_DB0" offset="0x13000" width="32" description="Host Controller Doorbell. The Doorbell Array is organized as an array of up to 256 Doorbell Registers. One 32-bit Doorbell Register is defined in the array for each Device Slot. System software utilizes the Doorbell Register to notify the xHC that it has Device Slot related work for the xHC to perform.
           The number of Doorbell Registers implemented by a particular instantiation of a host controller is documented in the Number of Device Slots (MaxSlots) field of the HCSPARAMS1 register (section 5.3.3 of xHCI specification).
           These registers are pointed to by the Doorbell Offset Register (DBOFF) in the xHC Capability register space. The Doorbell Array base address shall be Dword aligned and is calculated by adding the value in the DBOFF register (section 5.3.7 of xHCI specification) to Base (the base address of the xHCI Capability register address space).
           Doorbell Register 0 is dedicated to the Host Controller.">
		<bitfield id="DB_STREAM_ID" width="16" begin="31" end="16" resetval="0x0" description="DB Stream ID, RW. Doorbell Stream ID. If the endpoint of a Device Context Doorbell defines Streams, then this field shall be used to identify which Stream of the endpoint the doorbell reference is targeting. System software is responsible for ensuring that the value written to this field is valid.                If the endpoint defines Streams [MaxPStreams > 0], then 0, 65535 [No Stream] and 65534 [Prime] are reserved Stream ID values and shall not be written to this field. If the endpoint does not define Streams [MaxPStreams = 0] and a non-'0' value is written to this field, the doorbell reference shall be ignored.               This field only applies to Device Context Doorbells and shall be cleared to zero for Host Controller Command Doorbells.               This field returns zero when read." range="31 - 16" rwaccess="R/W"/> 
		<bitfield id="RSVDZ1" width="8" begin="15" end="8" resetval="0x0" description="Reserved and Zero: Reserved for future RW1C implementations. Software shall use zero for writes to these bits.           Note: At present the fields are implemented as RO." range="15 - 8" rwaccess="R"/> 
		<bitfield id="DB_TARGET" width="8" begin="7" end="0" resetval="0x0" description="DB Target,  RW. Doorbell Target. This field defines the target of the doorbell reference. The table below defines the xHC notification that is generated by ringing the doorbell. Note that Doorbell Register 0 is dedicated to Command Ring and decodes this field differently than the other Doorbell Registers.               Possible values [ For this register, there is only one valid value for the DB Target field, 0 [Host Controller Command]. The remaining values [1-255] are reserved.]:               0: Command Doorbell               1:247 Reserved                248:255 Vendor Defined                This field returns zero when read and should be treated as undefined by software.               When the Command Doorbell is written, the DB Stream ID field shall be cleared to zero." range="7 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_DB" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_DB" offset="0x13004" width="32" description="The Doorbell Array is organized as an array of up to 256 Doorbell Registers. One 32-bit Doorbell Register is defined in the array for each Device Slot. System software utilizes the Doorbell Register to notify the xHC that it has Device Slot related work for the xHC to perform.
           The number of Doorbell Registers implemented by a particular instantiation of a host controller is documented in the Number of Device Slots (MaxSlots) field of the HCSPARAMS1 register (section 5.3.3 of xHCI specification).
           These registers are pointed to by the Doorbell Offset Register (DBOFF) in the xHC Capability register space. The Doorbell Array base address shall be Dword aligned and is calculated by adding the value in the DBOFF register (section 5.3.7 of xHCI specification) to Base (the base address of the xHCI Capability register address space).">
		<bitfield id="DB_STREAM_ID" width="16" begin="31" end="16" resetval="0x0" description="DB Stream ID, RW. Doorbell Stream ID. If the endpoint of a Device Context Doorbell defines Streams, then this field shall be used to identify which Stream of the endpoint the doorbell reference is targeting. System software is responsible for ensuring that the value written to this field is valid.                If the endpoint defines Streams [MaxPStreams > 0], then 0, 65535 [No Stream] and 65534 [Prime] are reserved Stream ID values and shall not be written to this field. If the endpoint does not define Streams [MaxPStreams = 0] and a non-'0' value is written to this field, the doorbell reference shall be ignored.               This field only applies to Device Context Doorbells and shall be cleared to zero for Host Controller Command Doorbells.               This field returns zero when read." range="31 - 16" rwaccess="R/W"/> 
		<bitfield id="RSVDZ1" width="8" begin="15" end="8" resetval="0x0" description="Reserved and Zero: Reserved for future RW1C implementations. Software shall use zero for writes to these bits.           Note: At present the fields are implemented as RO." range="15 - 8" rwaccess="R"/> 
		<bitfield id="DB_TARGET" width="8" begin="7" end="0" resetval="0x0" description="DB Target,  RW. Doorbell Target. This field defines the target of the doorbell reference. The table below defines the xHC notification that is generated by ringing the doorbell.               Possible values:               0: Reserved               1: Control EP 0 Enqueue Pointer Update               2: EP 1 OUT Enqueue Pointer Update               3: EP 1 IN Enqueue Pointer Update               4: EP 2 OUT Enqueue Pointer Update               5: EP 2 IN Enqueue Pointer Update                ...               30: EP 15 OUT Enqueue Pointer Update               31: EP 15 IN Enqueue Pointer Update               32:247: Reserved               248:255: Vendor Defined               This field returns zero when read and should be treated as undefined by software.               When the Command Doorbell is written, the DB Stream ID field shall be cleared to zero." range="7 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_PORT_CAP_REG" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_PORT_CAP_REG" offset="0x18000" width="32" description="Extended capability for USB 3.0 Port. This register may be read from or written to at any time, including whilst the CNR field in the USBSTS register is high. This is a vendor defined capability. This register is reserved. This register should not be modified by software. It is described only for informative purposes.">
		<bitfield id="RESERVED1" width="6" begin="31" end="26" resetval="0x0" description="Reserved, RO" range="31 - 26" rwaccess="R"/> 
		<bitfield id="LPM_2_STB_SWITCH_EN" width="1" begin="25" end="25" resetval="0x0" description="Enable switching to stb_clk." range="25" rwaccess="R/W"/> 
		<bitfield id="LPM_2_STB_SWITCH_CAPABLE" width="1" begin="24" end="24" resetval="0x1" description="xHC is capable of switching to stb_clk." range="24" rwaccess="R"/> 
		<bitfield id="XHCI_PORT_CAP_REV" width="8" begin="23" end="16" resetval="0x1" description="XHCI_PORT_CAP_REV : revision of the Port Capability structure ." range="23 - 16" rwaccess="R"/> 
		<bitfield id="XHCI_PORT_CAPABILITY_DW" width="8" begin="15" end="8" resetval="0x2" description="XHCI_PORT_CAPABILITY_DW. Next Item Pointer. This field provides an offset pointing to the location of next item in the functions capability list." range="15 - 8" rwaccess="R"/> 
		<bitfield id="XHCI_PORT_CAP_ID" width="8" begin="7" end="0" resetval="0x195" description="XHCI_PORT_CAP_ID. Port capability ID." range="7 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_PORT_1_REG" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_PORT_1_REG" offset="0x18004" width="32" description="Extended capability for USB 3.0 Port. This register may be read from or written to at any time, including whilst the CNR field in the USBSTS register is high. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0" description="Reserved, RO" range="31 - 16" rwaccess="R"/> 
		<bitfield id="U1_LFPS_TIME_WR_STROBE" width="1" begin="15" end="15" resetval="0x0" description="Minimum U1 LFPS generation time write stobe. Returns '0' when read." range="15" rwaccess="R/W"/> 
		<bitfield id="U1_LFPS_MINGEN_TIME" width="7" begin="14" end="8" resetval="0x125" description="Minimum U1 LFPS generation time. Written only if U1_LFPS_TIME_WR_STROBE is 1." range="14 - 8" rwaccess="R/W"/> 
		<bitfield id="RESERVED5" width="1" begin="7" end="7" resetval="0x0" description="Reserved, RO" range="7" rwaccess="R"/> 
		<bitfield id="CPOLLINGTIMEOUT_EN" width="1" begin="6" end="6" resetval="0x1" description="Enable cPollingTimeout" range="6" rwaccess="R/W"/> 
		<bitfield id="TTIME_FOR_RESET_EN" width="1" begin="5" end="5" resetval="0x0" description="Enable tTimeForResetError timer" range="5" rwaccess="R/W"/> 
		<bitfield id="SKP_OS_FIX" width="1" begin="4" end="4" resetval="0x0" description="Change counting number of symbols for SKP OS insertion [only for the 1st SKP OS]" range="4" rwaccess="R/W"/> 
		<bitfield id="U3_SPUR_LFPS_FIX" width="1" begin="3" end="3" resetval="0x0" description="Enable filtering out spurious LFPS when entering U3 state" range="3" rwaccess="R/W"/> 
		<bitfield id="TERM_DEB_MAX" width="2" begin="2" end="1" resetval="0x0" description="Number of the consecutive lack of Far-end Rx Termination detected that causes transition from SS.Inactive to RxDetect state" range="2 - 1" rwaccess="R/W"/> 
		<bitfield id="TRAINING_FAIL" width="1" begin="0" end="0" resetval="0x0" description="When reading: Link Polling training error flag status,             When writing '1': clear the Link Polling training error flag,             When writing '0': no effect" range="0" rwaccess="R/W1TC"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_CDNS_DEBUG_BUS_CAP" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_CDNS_DEBUG_BUS_CAP" offset="0x18008" width="32" description="xHCI Debug Bus Capability. This is a vendor defined capability. Please refer to Integration Guide for further details of debug bus usage.">
		<bitfield id="CPU_DEBUG_EN" width="1" begin="31" end="31" resetval="0x0" description="Debug Bus Enable, RW. When 0, allows the xhci_debug_sel primary input to control selection of Debug Bus sources. When 1, allows the cpu_debug_bus_sel field in the XECP_CDNS_DEBUG_BUS_CTRL register to control selection of Debug Bus sources. Default value after reset is '0'." range="31" rwaccess="R/W"/> 
		<bitfield id="RSVDP1" width="15" begin="30" end="16" resetval="0x0" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.           Note: At present the fields are implemented as RO." range="30 - 16" rwaccess="R"/> 
		<bitfield id="XHCI_DEBUG_BUS_DW" width="8" begin="15" end="8" resetval="0x3" description="Next Capability Pointer, RO. This field indicates the location of the next capability with respect to the effective address of this capability." range="15 - 8" rwaccess="R"/> 
		<bitfield id="XHCI_DEBUG_BUS_CAP_ID" width="8" begin="7" end="0" resetval="0x196" description="Capability ID, RO. This field identifies the extended capability. For xHCI Debug Bus its' value is 196." range="7 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_CDNS_DEBUG_BUS_CTRL" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_CDNS_DEBUG_BUS_CTRL" offset="0x1800C" width="32" description="xHCI Debug Bus Control. This is a vendor defined capability. Please refer to Integration Guide for further details of debug bus usage.">
		<bitfield id="RSVDP1" width="27" begin="31" end="5" resetval="0x0" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.           Note: At present the fields are implemented as RO." range="31 - 5" rwaccess="R"/> 
		<bitfield id="CPU_DEBUG_BUS_SEL" width="5" begin="4" end="0" resetval="0x0" description="Debug Bus Select, RW. Value of this field determines a source of Debug Bus. Default value after reset is 0." range="4 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_CDNS_DEBUG_BUS_STATUS" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_CDNS_DEBUG_BUS_STATUS" offset="0x18010" width="32" description="xHCI Debug Bus Status. This is a vendor defined capability. Please refer to Integration Guide for further details of debug bus usage.">
		<bitfield id="XHCI_DEBUG_BUS" width="32" begin="31" end="0" resetval="0x0" description="Debug Bus, RO. Debug Bus current value. Note for multi-bit probes, this register is only suitable for analysing a static value due to simplified clock domain synchronisation" range="31 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_PM_CAP" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_PM_CAP" offset="0x18014" width="32" description="Extended Power Management capability register. Defined in section 7.3 of xHCI specification. Reuses power management structures defined in PCI bus Power Management specification. This register may be read from or written to at any time, including whilst the CNR field in the USBSTS register is high.">
		<bitfield id="PME_SUPPORT" width="5" begin="31" end="27" resetval="0x31" description="Power Management Capabilities: PME_Support. Default = device specific.             This 5-bit field indicates the power states in which the function may assert PME#. A value of '0' for any bit indicates that the function is not capable of asserting the PME# signal while in that power state.             Encodings:             Bit 0 set: X XXX1b - PME# can be asserted from D0,             Bit 1 set: X XX1Xb - PME# can be asserted from D1,             Bit 2 set: X X1XXb - PME# can be asserted from D2,             Bit 3 set: X 1XXXb - PME# can be asserted from D3hot,             Bit 4 set: 1 XXXXb - PME# can be asserted from D3cold" range="31 - 27" rwaccess="R"/> 
		<bitfield id="D2_SUPPORT" width="1" begin="26" end="26" resetval="0x1" description="Power Management Capabilities: D2_Support. Default = device specific.             If this bit is a '1', this function supports the D2 Power Management State. Functions that do not support D2 must always return a value of '0' for this bit." range="26" rwaccess="R"/> 
		<bitfield id="D1_SUPPORT" width="1" begin="25" end="25" resetval="0x1" description="Power Management Capabilities: D1_Support. Default = device specific.             If this bit is a '1', this function supports the D1 Power Management State. Functions that do not support D1 must always return a value of '0' for this bit." range="25" rwaccess="R"/> 
		<bitfield id="AUX_CURRENT" width="3" begin="24" end="22" resetval="0x7" description="Power Management Capabilities: Aux_Current. Default = device specific.             This 3 bit field reports the 3.3Vaux auxiliary current requirements for the PCI function. If the Data Register field of XECP_PM_PMCSR has been implemented by this function:             - reads of this field must return a value of '000',             - the Data Register takes precedence over this field for 3.3Vaux current requirement reporting.             If PME# generation from D3cold is not supported by the             Function [XECP_PM_CAP[15]='0'], this field must return a value of '000' when read.             For functions that support PME# from D3cold, and do not implement the Data Register, the following bit encoding for maximum current required apply :             '111': 375 mA,             '110': 320 mA,             '101': 270 mA,             '100': 220 mA,             '011': 160 mA,             '010': 100 mA,             '001': 55 mA,             '000': 0 [self powered]." range="24 - 22" rwaccess="R/W"/> 
		<bitfield id="DSI" width="1" begin="21" end="21" resetval="0x0" description="Power Management Capabilities: DSI. Default = device specific.               The Device Specific Initialization bit indicates whether special initialization of this function is required [beyond the standard PCI configuration header] before the generic class device driver is able to use it.               Note that this bit is not used by some operating systems. Microsoft Windows and Windows NT, for instance, do not use this bit to determine whether to use D3. Instead, they use the drivers capabilities to determine this.               A '1' indicates that the function requires a device specific initialization sequence following transition to the D0 uninitialized state. For more information refer to Section 8.3. of PCI bus Power Management specification." range="21" rwaccess="R"/> 
		<bitfield id="PME_CLOCK" width="1" begin="19" end="19" resetval="0x1" description="Power Management Capabilities: PME Clock. Default = '0'. When this bit is a '1', it indicates that the function relies on the presence of the PCI clock for PME# operation. When this bit is a '0', it indicates that no PCI clock is required for the function to generate PME#. Functions that do not support PME# generation in any state must return '0' for this field." range="19" rwaccess="R"/> 
		<bitfield id="VERSION" width="3" begin="18" end="16" resetval="0x3" description="Power Management Capabilities: Version. Default = '011'. A value of '011' indicates that this function complies with revision 1.2 of the PCI Power Management Interface Specification." range="18 - 16" rwaccess="R"/> 
		<bitfield id="XHCI_PM_CAPABILITY_DW" width="8" begin="15" end="8" resetval="0x2" description="XHCI_PM_CAPABILITY_DW. Next Item Pointer. This field provides an offset pointing to the location of next item in the functions capability list." range="15 - 8" rwaccess="R"/> 
		<bitfield id="XHCI_PM_CAP_ID" width="8" begin="7" end="0" resetval="0x3" description="XHCI_PM_CAP_ID. Power Management capability ID." range="7 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_PM_PMCSR" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_PM_PMCSR" offset="0x18018" width="32" description="Extended Power Management Control/Status register. Defined in section 7.3 of xHCI specification. Reuses power management structures defined in PCI bus Power Management specification. This register may be read from or written to at any time, including whilst the CNR field in the USBSTS register is high.">
		<bitfield id="DATA_REGISTER" width="8" begin="31" end="24" resetval="0x0" description="Data register. This register is used to report the state dependent data requested by the Data_Select field of XECP_PM_PMCSR register. The value of Data register is scaled by the value reported by the Data_Scale field of XECP_PM_PMCSR register." range="31 - 24" rwaccess="R"/> 
		<bitfield id="BPCC_EN" width="1" begin="23" end="23" resetval="0x0" description="PMCSR Bridge Support Extensions: BPCC_En [Bus Power/Clock Control Enable]. External strap or internally hardwired.               A '1' indicates that the bus power/clock control mechanism as defined in Section 4.7.1 PCI bus Power Management specification is enabled. A '0' indicates that the bus power/clock control policies defined in Section 4.7.1 PCI bus Power Management specification have been disabled.               When the Bus Power/Clock Control mechanism is disabled, the bridges Power Management Control/Status Register PowerState field cannot be used by the system software to control the power or clock of the bridges secondary bus." range="23" rwaccess="R"/> 
		<bitfield id="B2_B3" width="1" begin="22" end="22" resetval="0x0" description="PMCSR Bridge Support Extensions: B2_B3# [B2/B3 support for D3hot]. External strap or internally hardwired.             The state of this bit determines the action that is to occur as a direct result of programming the function to D3hot.             A '1' indicates that when the bridge function is programmed to D3hot, its secondary buss PCI clock will be stopped [B2].             A '0' indicates that when the bridge function is programmed to D3hot, its secondary bus will have its power removed [B3].             This bit is only meaningful if bit BPCC_En of XECP_PM_PMCSR register is a '1'.             Refer to Section 4.7.1 of PCI bus Power Management specification for details." range="22" rwaccess="R"/> 
		<bitfield id="RESERVED" width="6" begin="21" end="16" resetval="0x0" description="PMCSR Bridge Support Extensions: reserved" range="21 - 16" rwaccess="N/A"/> 
		<bitfield id="PME_STATUS" width="1" begin="15" end="15" resetval="0x0" description="Power Management Control/Status Register: PME_Status.              This bit is set when the function would normally assert the PME# signal independent of the state of the PME_En bit.             Writing a '1' to this bit will clear it and cause the function to stop asserting a PME# [if enabled]. Writing a '0' has no effect.             This bit defaults to '0' if the function does not support PME# generation from D3cold.             If the function supports PME# from D3cold, then this bit is sticky and must be explicitly cleared by the operating system each time the operating system is initially loaded." range="15" rwaccess="R/W1TC"/> 
		<bitfield id="DATA_SCALE" width="2" begin="14" end="13" resetval="0x0" description="Power Management Control/Status Register: Data_Scale. Default = device specific.             This 2-bit read-only field indicates the             scaling factor to be used when interpreting the value of the Data register field of XECP_PM_PMCSR register. The value and meaning of this field will vary depending on which data value has been selected by the Data_Select field of this register.             This field is a required component of the Data register and must be implemented if the Data register is implemented.             If the Data register has not been implemented, this field must return zero when read.             Refer to Section 3.2.6 of PCI bus Power Management specification for more details." range="14 - 13" rwaccess="R"/> 
		<bitfield id="DATA_SELECT" width="4" begin="12" end="9" resetval="0x0" description="Power Management Control/Status Register: Data_Select. Default = zero.             This 4-bit field is used to select, which data is to be reported through the Data register and Data_Scale fields of XECP_PM_PMCSR register.             This field is a required component of the Data register and must be implemented if the Data register is implemented.             If the Data register field of XECP_PM_PMCSR is not implemented, this field should be read only and return zero when read.             Refer to Section 3.2.6 of PCI bus Power Management for more details." range="12 - 9" rwaccess="R/W"/> 
		<bitfield id="PME_EN" width="1" begin="8" end="8" resetval="0x0" description="Power Management Control/Status Register: PME_En.             A '1' in this field enables the function to assert PME#.             When '0', PME# assertion is disabled.             This bit defaults to '0' if the function does not support PME# generation from D3cold. If the function supports PME# from D3cold, then this bit is sticky and must be explicitly cleared by the operating system each time it is initially loaded.             Functions that do not support PME# generation from any D-state [i.e., XECP_PM_CAP[15:11] = '00000'], may hardwire this bit to be read-only always returning a '0' when read by system software." range="8" rwaccess="R/W"/> 
		<bitfield id="RESERVED" width="4" begin="7" end="4" resetval="0x0" description="Power Management Control/Status Register: reserved" range="7 - 4" rwaccess="N/A"/> 
		<bitfield id="NO_SOFT_RESET" width="1" begin="3" end="3" resetval="0x0" description="Power Management Control/Status Register: No_Soft_Reset. Default = device specific. When set to '1', this bit indicates that devices transitioning from D3hot to D0 because of PowerState commands do not perform an internal reset. Configuration Context is preserved. Upon transition           from the D3hot to the D0 Initialized state, no additional operating system intervention is required to preserve Configuration Context beyond writing the PowerState bits.           When cleared to '0', devices do perform an internal reset upon transitioning from D3hot to D0 via software control of the PowerState bits. Configuration Context is lost when performing the soft reset. Upon transition from the           D3hot to the D0 state, full reinitialization sequence is needed to return the device to D0 Initialized. Regardless of this bit, devices that transition from D3hot to D0 by a system or bus segment reset will return to the           device state D0 Uninitialized with only PME context preserved if PME is supported and enabled." range="3" rwaccess="R"/> 
		<bitfield id="RESERVED" width="1" begin="2" end="2" resetval="0x0" description="Power Management Control/Status Register: reserved" range="2" rwaccess="N/A"/> 
		<bitfield id="POWERSTATE" width="2" begin="1" end="0" resetval="0x0" description="Power Management Control/Status Register: PowerState. Default = zero.             This 2-bit field is used both to determine the current power state of a function and to set the function into a new power state.             Possible values:             '00': D0,             '01': D1,             '10': D2,             '11': D3hot.             If software attempts to write an unsupported, optional state to this field, the write operation must complete normally on the bus. however, the data is discarded and no state change occurs." range="1 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_MSI_CAP" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_MSI_CAP" offset="0x1801C" width="32" description="Message Signaled Interrupts (MSI) configuration register. This register may be read at any time, including whilst the CNR field in the USBSTS register is high. It can be written only when controller is stopped (bit HCH of USBSTS register is '0').">
		<bitfield id="RESERVED" width="7" begin="31" end="25" resetval="0x0" description="MSI Message Control: Reserved. Always returns 0 on a read and a write operation has no effect." range="31 - 25" rwaccess="R"/> 
		<bitfield id="PER_VECTOR_MASKING" width="1" begin="24" end="24" resetval="0x0" description="MSI Message Control: Per-vector masking capable.             If '1', the function supports MSI per-vector masking.             If '0', the function does not support MSI per-vector             masking.             This bit is read only. Not Supported in this configuration" range="24" rwaccess="R"/> 
		<bitfield id="AC64" width="1" begin="23" end="23" resetval="0x1" description="MSI Message Control: 64 bit address capable.             If '1', the function is capable of generating sending a             64-bit message address.             If '0', the function is not capable of generating sending             a 64-bit message address.             This bit is read only." range="23" rwaccess="R"/> 
		<bitfield id="MSI_MME" width="3" begin="22" end="20" resetval="0x0" description="MSI Message Control: Multiple Message Enable.             Software writes to this field to indicate the number of             allocated vectors [equal to or less than the number of             requested vectors]. The number of allocated vectors             is aligned to a power of two. If a function requests             four vectors [indicated by a Multiple Message Capable             encoding of 010], system software can allocate either             four, two, or one vector by writing a '010', '001', or             '000' to this field, respectively. When MSI is enabled,             a function will be allocated at least one vector.             The encoding is defined as:             '000': 1,             '001': 2,             '010': 4,             '011': 8,             '100': 16,             '101': 32,             '110': Reserved,             '111': Reserved.             This fields state after reset is '000'." range="22 - 20" rwaccess="R/W"/> 
		<bitfield id="MSI_MMC" width="3" begin="19" end="17" resetval="0x3" description="MSI Message Control: Multiple Message Capable.             System software reads this field to determine the             number of requested vectors. The number of             requested vectors must be aligned to a power of two             [if a function requires three vectors, it requests four             by initializing this field to '010'].             The encoding is defined as:             '000': 1,             '001': 2,             '010': 4,             '011': 8,             '100': 16,             '101': 32,             '110': Reserved,             '111': Reserved.             This field is read only. " range="19 - 17" rwaccess="R"/> 
		<bitfield id="MSI_EN" width="1" begin="16" end="16" resetval="0x0" description="MSI Message Control: MSI enable.              System configuration software sets this bit to enable             MSI. A device driver is prohibited from writing this bit             to mask a functions service request.             If '0', the function is prohibited from using MSI to             request service.             This bits state after reset is '0' [MSI is disabled]." range="16" rwaccess="R/W"/> 
		<bitfield id="XECP_MSI_CAP_OFFSET" width="8" begin="15" end="8" resetval="0x4" description="Pointer to the next item in the capabilities list. A non-zero value in this field indicates a relative offset, in 32-bit words, from this 32-bit word to the beginning of the next extended capability." range="15 - 8" rwaccess="R"/> 
		<bitfield id="MSI_ID" width="8" begin="7" end="0" resetval="0x5" description="Capability ID for Message Signaled Interrupts.              The value of 05h in this field identifies the function as being MSI capable." range="7 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_MSI_ADDR_L" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_MSI_ADDR_L" offset="0x18020" width="32" description="Message Lower Address for MSI. If the Message Enable bit of MSI Message Control (bit 16 of the XCEP_MSI_CAP register) is set, the contents of this register specify the DWORD-aligned address (bits [31:02]) for the MSI memory write transaction. bits [1:0] are driven to zero during the address phase.
          This register may be read from at any time, including whilst the CNR field in the USBSTS register is high. It can be written only when controller is stopped (bit HCH of USBSTS register is '0').">
		<bitfield id="MSI_ADDR_LOW" width="30" begin="31" end="2" resetval="0x0" description="Message Lower Address for MSI. System-specified message address. If the Message Enable bit of MSI Message Control [bit 16 of the XCEP_MSI_CAP register] is set, the contents of this register specify the DWORD-aligned address for the MSI memory write transaction.             Note: This field should not be written unless the Message Enable bit of MSI Message Control [bit 16 of the XCEP_MSI_CAP register] is cleared.             This field is read/write." range="31 - 2" rwaccess="R/W"/> 
		<bitfield id="RESERVED" width="2" begin="1" end="0" resetval="0x0" description="Reserved. Always returns zero on read. Write operations have no effect. Those bits are driven to zero during the address phase." range="1 - 0" rwaccess="N/A"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_MSI_ADDR_H" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_MSI_ADDR_H" offset="0x18024" width="32" description="Message Upper Address for MSI. System-specified message upper address.
          This register is optional and is implemented only if the function supports a 64-bit message address (AC64 bit of MSI Message Control, see XCEP_MSI_CAP register). If the Message Enable bit of MSI Message Control (bit 16 of the XCEP_MSI_CAP register), the contents of this register (if nonzero) specify the upper 32-bits of a 64-bit message address (bits [63:32]). If the contents of this register are zero, the function uses the 32 bit address specified by the message address register. It can be written only when controller is stopped (bit HCH of USBSTS register is '0').">
		<bitfield id="MSI_ADDR_HI" width="32" begin="31" end="0" resetval="0x0" description="Message Upper Address for MSI. System-specified message upper address.             Note: This field should not be written unless the Message Enable bit of MSI Message Control [bit 16 of the XCEP_MSI_CAP register] is cleared.             This field is read/write." range="31 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_MSI_DATA" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_MSI_DATA" offset="0x18028" width="32" description="Message data for MSI. This register may be read from to at any time, including whilst the CNR field in the USBSTS register is high. It can be written only when controller is stopped (bit HCH of USBSTS register is '0').">
		<bitfield id="RSVD" width="16" begin="31" end="16" resetval="0x0" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.           Note: At present the fields are implemented as RO." range="31 - 16" rwaccess="R"/> 
		<bitfield id="MSI_DATA" width="16" begin="15" end="0" resetval="0x0" description="System-specified message data. If the Message Enable bit of MSI Message Control [bit 16 of the XCEP_MSI_CAP register] is set, the message data is driven onto the lower word [bits [15:0]] of the memory write transactions data phase. Bits [31:16] are driven to zero during the memory write transactions data phase. C/BE[3::0]# are asserted during the data phase of the memory write transaction. The Multiple Message Enable field of MSI Message Control [see MSI_MME field of XCEP_MSI_CAP register] defines the number of low order message data bits  the function is permitted to modify to generate its system software allocated vectors. For example, a Multiple Message Enable encoding of '010' indicates the function has been allocated four vectors and is permitted to modify message data bits 1 and 0 [a function modifies the lower message data bits to generate the allocated number of vectors]. If the Multiple Message Enable field is '000', the function is not permitted to modify the message data.             Note: This field should not be written unless the Message Enable bit of MSI Message Control [bit 16 of the XCEP_MSI_CAP register] is cleared.              This field is read/write." range="15 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_AXI_CAP" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_AXI_CAP" offset="0x1802C" width="32" description="AXI Master Wrapper Extended Capability. This register may be read from or written to at any time, including whilst the CNR field in the USBSTS register is high. This is a vendor defined capability.">
		<bitfield id="AXI_HALT" width="1" begin="31" end="31" resetval="0x0" description="AXI	HALT, RW. The AXI Master wrapper's control bit.             When set, the AXI Master wrapper will complete current CORE REQ [or IRQ] and stop acknowledging next ones. If the xHC is stopped the AXI Master wrapper is halted automatically. If the xHC is started the AXI Master wrapper is resumed automatically.             Software should set this bit to stop the AXI Master issuing new AXI transactions. It may then use the IDLE bit to determine when all previous transactions were completed.             Note: The AXI Master wrapper will execute halted only if xHC stopped its internal operation." range="31" rwaccess="R/W"/> 
		<bitfield id="AXI_IDLE" width="1" begin="30" end="30" resetval="0x1" description="AXI	IDLE, RO. Information about the AXI Master wrapper state:             '0': no pending action required by the AXI Master wrapper,             '1': the AXI Master wrapper has outstanding transactions.             Note: HCH halted bit will not be asserted if the AXI Master wrapper is not idle." range="30" rwaccess="R"/> 
		<bitfield id="AXI_ERROR" width="1" begin="29" end="29" resetval="0x0" description="AXI	ERROR, RW1C. Provides an information about AXI ERROR response on B or R channel. This flag is cleared by writing '1' to it. Once set it is held until cleared. The condition setting this register will also assert HSE. This flag may be read by software while handling HSE assertion to determine if the case was AXI ERROR reponse." range="29" rwaccess="R/W1TC"/> 
		<bitfield id="RSVDP2" width="2" begin="28" end="27" resetval="0x0" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.           Note: At present the fields are implemented as RO." range="28 - 27" rwaccess="R"/> 
		<bitfield id="AXI_DATA_BUS_SIZE" width="3" begin="26" end="24" resetval="0x3" description="AXI_DATA_WORD_SIZE, RO. AXI data buses size capability. It uses AXI AxSIZE Encoding. Values of 64-bit ['011'] or 128-bit ['100'] are supported through compile time configuration." range="26 - 24" rwaccess="R"/> 
		<bitfield id="AXI_DISABLE_OOO" width="1" begin="23" end="23" resetval="0x0" description="Disable Out-Of-Order R channel responses [AXI_MASTER_WRAPPER_DISABLE_OOO], RO.             This relates to number of IDs used at AXI IF. If Out-Of-Order R channel responses are not disabled this count may be greater than one and in such a case the R channel responses may come Out-Of-Order.             The flag gives information about number of used AXI IDs:             '0': single ID,             '1': multiple IDs." range="23" rwaccess="R"/> 
		<bitfield id="AXI_MASTER_WRAPPER_SPLIT_BYTE_BURSTS" width="1" begin="22" end="22" resetval="0x1" description="AXI_MASTER_WRAPPER_SPLIT_BYTE_BURSTS, RO. Presents information about AXI byte burst capability:             '0': no byte bursts,             '1': byte bursts enabled." range="22" rwaccess="R"/> 
		<bitfield id="RSVDP1" width="5" begin="21" end="17" resetval="0x0" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.           Note: At present the fields are implemented as RO." range="21 - 17" rwaccess="R"/> 
		<bitfield id="AXI_ADDRESS_WIDTH_64" width="1" begin="16" end="16" resetval="0x1" description="AXI address bus width capability, RO.              '0': 32-bit address bus width,             '1': 64-bit address bus width." range="16" rwaccess="R"/> 
		<bitfield id="XECP_AXI_CAP_OFFSET" width="8" begin="15" end="8" resetval="0x5" description="Next capability Offset, RO. This field points to the xHC MMIO space offset of the next xHCI extended capability pointer. A value of 00h indicates the end of the extended capability list. A non-zero value in this register indicates a relative offset, in Dwords, from this Dword to the beginning of the next extended capability." range="15 - 8" rwaccess="R"/> 
		<bitfield id="AXI_CAP_ID" width="8" begin="7" end="0" resetval="0x194" description="VEND_DEF_AXI_MASTER_WRAPPER_CAP_ID, RO. Vendor defined xHCI Extended Capability: 0xC2. This field identifies the AXI wrapper xHCI Extended capability." range="7 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_AXI_CFG0" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_AXI_CFG0" offset="0x18030" width="32" description="AXI Master Wrapper Extended Capability Configuration Register. This register may be read from or written to at any time, including whilst the CNR field in the USBSTS register is high.">
		<bitfield id="AXI_RD_DEPTH" width="8" begin="31" end="24" resetval="0x8" description="AXI READ_BUFFER_DEPTH, RO. Number of AXI Read beats that can be buffered by the AXI Master wrapper. The value written to this field should be the Number of AXI Read beats that can be buffered by the AXI Master wrapper minus 1." range="31 - 24" rwaccess="R"/> 
		<bitfield id="RSVDZ2" width="2" begin="23" end="22" resetval="0x0" description="Reserved and Zero: Reserved for future RW1C implementations. Software shall use zero for writes to these bits.           Note: At present the fields are implemented as RO." range="23 - 22" rwaccess="R"/> 
		<bitfield id="AXI_MAX_RD_OT" width="6" begin="21" end="16" resetval="0x15" description="AXI	MAX_READ_OUTSTANDING, RO. Maximum number of Outstanding Read Transactions initiated by the AXI Master wrapper in AR channel. The value written to this field should be the Maximum number of Outstanding Read Transactions initiated by the AXI Master wrapper minus 1, thus the Maximum number of Outstanding Read Transactions is 1 more than the programmed value." range="21 - 16" rwaccess="R"/> 
		<bitfield id="AXI_WR_DEPTH" width="8" begin="15" end="8" resetval="0x8" description="AXI	WRITE_BUFFER_DEPTH, RO. Number of AXI Write beats that can be buffered by the AXI Master wrapper. The value written to this field should be the number of AXI Write beats that can be buffered by the AXI Master wrapper minus 1." range="15 - 8" rwaccess="R"/> 
		<bitfield id="RSVDZ1" width="2" begin="7" end="6" resetval="0x0" description="Reserved and Zero: Reserved for future RW1C implementations. Software shall use zero for writes to these bits.           Note: At present the fields are implemented as RO." range="7 - 6" rwaccess="R"/> 
		<bitfield id="AXI_MAX_WR_OT" width="6" begin="5" end="0" resetval="0x15" description="AXI	MAX_WRITE_OUTSTANDING, RO. Maximum number of Outstanding Write Transactions initiated by the AXI Master wrapper in AW channel. The value written to this field should be the Maximum number of Outstanding Write Transactions initiated by the AXI Master wrapper minus 1, thus the Maximum number of Outstanding Write Transactions is 1 more than the programmed value." range="5 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_AXI_CTRL0" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_AXI_CTRL0" offset="0x18034" width="32" description="AXI Master Wrapper Extended Capability Control Register 0. This register may be read from or written to at any time, including whilst the CNR field in the USBSTS register is high.">
		<bitfield id="RSVDP" width="28" begin="31" end="4" resetval="0x0" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.           Note: At present the fields are implemented as RO." range="31 - 4" rwaccess="R"/> 
		<bitfield id="AXI_BMAX" width="4" begin="3" end="0" resetval="0x15" description="AXI BMAX, RW. The register controls maximum burst length - it is used by the AXI Master wrapper to determine maximum value of AxLEN. It uses AXI AxLEN encoding. Default value is the maximum supported one and it is implementation specific. Writing value greater than maximum will result in setting the register to its defaults. This register can be written only when the AXI Master wrapper is halted [AXI_HALT set to '1'] and idle [AXI_IDLE is '1'].             Note: This register should only be written to during the register initialisation process" range="3 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_AXI_CTRL1" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_AXI_CTRL1" offset="0x18038" width="32" description="AXI Master Wrapper Extended Capability Control Register 1. This register may be read from or written to at any time, including whilst the CNR field in the USBSTS register is high.">
		<bitfield id="RSVDP2" width="10" begin="31" end="22" resetval="0x0" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.           Note: At present the fields are implemented as RO." range="31 - 22" rwaccess="R"/> 
		<bitfield id="AXI_ROT" width="6" begin="21" end="16" resetval="0x15" description="AXI READ_OUTSTANDING, RW. Number of outstanding read transactions that can be initiated by the AXI Master wrapper. Default value of this field is MAX_READ_OUTSTANDING-1 [see AXI_MAX_RD_OT field of XECP_AXI_CFG0 register]. Writing value greater than the default will result in setting the register to its defaults. This register can be written only when the AXI Master wrapper is halted [AXI_HALT set to '1'] and idle [AXI_IDLE is '1']. The value written to this field should be the requested number of outstanding read transactions minus 1, thus the actual number of possible outstanding read transactions is one more than the programmed value.             Note: This register should only be written to during the register initialisation process" range="21 - 16" rwaccess="R/W"/> 
		<bitfield id="RSVDP1" width="10" begin="15" end="6" resetval="0x0" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.           Note: At present the fields are implemented as RO." range="15 - 6" rwaccess="R"/> 
		<bitfield id="AXI_WOT" width="6" begin="5" end="0" resetval="0x15" description="AXI WRITE_OUTSTANDING, RW. Number of outstanding write transactions that can be initiated by the AXI Master wrapper. Default value of this field is MAX_WRITE_OUTSTANDING-1 [see AXI_MAX_WR_OT field of XECP_AXI_CFG0]. Writing value greater than the default will result in setting the register to its defaults. This register can be written only when the AXI Master wrapper is halted [AXI_HALT set to '1'] and idle [AXI_IDLE is '1']. The value written to this field should be the requested number of outstanding write transactions minus 1, thus the actual number of possible outstanding write transactions is one more than the programmed value.             Note: This register should only be written to during the register initialisation process" range="5 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_AXI_CTRL2" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_AXI_CTRL2" offset="0x1803C" width="32" description="AXI Master Wrapper Extended Capability Control Register 2. This register may be read from or written to at any time, including whilst the CNR field in the USBSTS register is high.">
		<bitfield id="RSVDP" width="24" begin="31" end="8" resetval="0x0" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.           Note: At present the fields are implemented as RO." range="31 - 8" rwaccess="R"/> 
		<bitfield id="AXI_WTHRES" width="8" begin="7" end="0" resetval="0x1" description="AXI Write Buffer Threshold, RW.               When performing an AXI write burst this field specifies the minimum number of required AXI beats buffered prior to starting the burst on AXI W-Channel by asserting wvalid.              This allows a user to balance the requirement for minimal latency with the requirement for low bus utilisation during bursts.             Burst lengths smaller than or equal to this threshold will be buffered completely and then output on W-Channel.              Burst lengths greater than this threshold will output the burst on the W-Channel such that the first AXI_WTHRES beats will be continuously with no drop of WVALID, beats thereafter may or may not be continuous depending on availability of data.             Legal values are between 1 and [AXI_WDD-1].             A value of 1 means that the burst is started on W-Channel as soon as any data is available without any additional delay.             A value of 0 is reserved and should not be used as may lead to unpredictable behaviour.             This register can be written only when the AXI Master wrapper is halted [AXI_HALT set to '1'] and idle [AXI_IDLE is '1'].             Note: This register should only be written to during the register initialisation process." range="7 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_SUPP_USB2_CAP0" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_SUPP_USB2_CAP0" offset="0x18040" width="32" description="xHCI Supported Protocol Capability.">
		<bitfield id="MAJOR_REV" width="8" begin="31" end="24" resetval="0x2" description="Major Specification Release Number in Binary-Coded Decimal [i.e.,version 3.x is 03h]. This field identifies               the major release number component of the specification with which the xHC is compliant." range="31 - 24" rwaccess="R"/> 
		<bitfield id="MINOR_REV" width="8" begin="23" end="16" resetval="0x0" description="Minor Specification Release Number in Binary-Coded Decimal [i.e.,version x.10 is 10h]. This field identifies               the minor release number component of the specification with which the xHC is compliant." range="23 - 16" rwaccess="R"/> 
		<bitfield id="NEXTCAPID" width="8" begin="15" end="8" resetval="0x8" description="This field indicates the location of the next capability with respect to the effective address of this capability.               Refer to Table 142 of xHCI specification for more information on this field." range="15 - 8" rwaccess="R"/> 
		<bitfield id="PID" width="8" begin="7" end="0" resetval="0x2" description="Capability ID. The value identifies the capability as Supported Protocol." range="7 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_SUPP_USB2_CAP1" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_SUPP_USB2_CAP1" offset="0x18044" width="32" description="xHCI Supported Protocol Capability.">
		<bitfield id="USB_STRING" width="32" begin="31" end="0" resetval="0x541217621" description="Name String,  RO. This field is a mnemonic name string that references the specification with               which the xHC is compliant. Four ASCII characters may be defined. Allowed characters are:               alphanumeric, space, and underscore. Alpha characters are case sensitive. Refer to section               7.2.2 of xHCI specification for defined values." range="31 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_SUPP_USB2_CAP2" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_SUPP_USB2_CAP2" offset="0x18048" width="32" description="xHCI Supported Protocol Capability. USB 2.0 protocol">
		<bitfield id="PSIC" width="4" begin="31" end="28" resetval="0x3" description="Protocol Speed ID Count: 3, USB 2.0 Speed [High, Full, Low]. This field indicates the number of Protocol Speed ID [PSI] Dwords that the xHCI Supported Protocol Capability data structure contains. If this field is non-zero, then all speeds supported by the protocol shall be defined using PSI Dwords, i.e. no implied Speed ID mappings apply." range="31 - 28" rwaccess="R"/> 
		<bitfield id="RSVDP_2" width="7" begin="27" end="21" resetval="0x0" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.           Note: At present the fields are implemented as RO." range="27 - 21" rwaccess="R"/> 
		<bitfield id="HLC_BESL" width="1" begin="20" end="20" resetval="0x1" description="HLC_BESL. In xHCI 1.0 specification this field is reserved RsvdP, see section 7.2.2.1.3.               The field is described in xHCI 1.1 specification:               BESL LPM Capability [BLC], RO. Default = Implementation dependent. If this bit is set to               '1', the ports described by this xHCI Supported Protocol Capability shall apply BESL timing to               BESL and BESLD fields of the PORTPMSC and PORTHLPMC registers, as defined in               Table 13. If this bit is cleared to '0', the ports described by this xHCI Supported Protocol               Capability shall apply HIRD timing to BESL and BESLD fields of the PORTPMSC and               PORTHLPMC registers, as defined in Table 13. Refer to section 4.23.5.1.1.1 for more               information.               Note the BESL LMP Capability support [i.e. HLE = 1 and BLC = 1] shall be mandatory for all               xHCI 1.1 compliant xHCs." range="20" rwaccess="R"/> 
		<bitfield id="HLC" width="1" begin="19" end="19" resetval="0x1" description="Hardware LPM Capability. Default = Implementation dependent. If this bit is set to '1', the ports described by this xHCI Supported                Protocol Capability support hardware controlled USB2 Link Power Management. Refer to section 4.23.5.1.1.1 of xHCI specification." range="19" rwaccess="R"/> 
		<bitfield id="IHI" width="1" begin="18" end="18" resetval="0x0" description="Integrated Hub Implemented. Default = Implementation dependent. If this bit is cleared to '0', the Root Hub to External xHC port mapping               adheres to the default mapping described in section 4.24.2.1 of xHCI specification. If this bit is set to '1', the Root Hub to External               xHC port mapping does not adhere to the default mapping described in section 4.24.2.1 of xHCI specification, and an ACPI or other               mechanism is required to define the mapping." range="18" rwaccess="R"/> 
		<bitfield id="HSO" width="1" begin="17" end="17" resetval="0x0" description="High-speed Only. Default = Implementation dependent. If this bit is cleared to '0', the USB2 ports described by this capability are               Low-, Full-, and High-speed capable. If this bit is set to '1', the USB2 ports described by this capability are                High-speed only, e.g. the ports do not support Low- or Full-speed operation. High-speed only implementations may introduce a               Tier mismatch, refer to section 4.24.2 of xHCI specification for more information." range="17" rwaccess="R"/> 
		<bitfield id="L1C" width="1" begin="16" end="16" resetval="0x1" description="If '1'LPM is supported [mandatory in xHCI1_00]. In xHCI specification this field is reserved RsvdP, see section 7.2.2.1.3" range="16" rwaccess="R"/> 
		<bitfield id="COMPATIBLE_PORT_COUNT" width="8" begin="15" end="8" resetval="0x1" description="This field identifies the number of consecutive Root Hub Ports [starting at the Compatible Port Offset]                that support this protocol. Valid values are 1 to MaxPorts." range="15 - 8" rwaccess="R"/> 
		<bitfield id="COMPATIBLE_PORT_OFFSET" width="8" begin="7" end="0" resetval="0x1" description="This field specifies the starting Port Number of Root Hub Ports that support this protocol. Valid values are 1 to MaxPorts." range="7 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_SUPP_USB2_PROTOCOL_SLOT_TYPE" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_SUPP_USB2_PROTOCOL_SLOT_TYPE" offset="0x1804C" width="32" description="Protocol Slot Type. xHCI Supported Protocol Capability">
		<bitfield id="RSVDP1" width="27" begin="31" end="5" resetval="0x0" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.           Note: At present the fields are implemented as RO." range="31 - 5" rwaccess="R"/> 
		<bitfield id="PST" width="5" begin="4" end="0" resetval="0x0" description="This field specifies the Protocol Slot Type value, which may be specified when allocating Device Slots that support this protocol.                Valid values are 0 to 31. Refer to sections 4.6.3 and 7.2.2.1.4 of xHCI specification.                 The value of the Protocol Slot Type field declared by a xHCI Supported Protocol Capability structure is unique to an xHC                implementation. Software shall not assume a fixed mapping of the Protocol Slot Type value to a specific type of Supported Protocol.               Note that for compatibility reasons, the Protocol Slot Type value of 0 is the exception to this rule and               reserved for the USB Protocol Device Slot type." range="4 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_PSI_FULL_SPEED" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_PSI_FULL_SPEED" offset="0x18050" width="32" description="Protocol Speed ID, xHCI Supported Protocol Capability">
		<bitfield id="PSIM" width="16" begin="31" end="16" resetval="0x12" description="Protocol Speed ID Mantissa. This field defines the mantissa that shall be applied to the PSIE when calculating the maximum bit rate represented by this PSI Dword." range="31 - 16" rwaccess="R"/> 
		<bitfield id="RSVDP1" width="7" begin="15" end="9" resetval="0x0" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.           Note: At present the fields are implemented as RO." range="15 - 9" rwaccess="R"/> 
		<bitfield id="PFD" width="1" begin="8" end="8" resetval="0x0" description="PSI Full-duplex. If this bit is '1' the link is full-duplex, and if '0' the link is half-duplex." range="8" rwaccess="R"/> 
		<bitfield id="PLT" width="2" begin="7" end="6" resetval="0x0" description="PSI Type. This field identifies whether the PSI Dword defines a symmetric or asymmetric bit rate, and if asymmetric,                then this field also indicates if this Dword defines the receive or transmit bit rate.                  Note that the Asymmetric PSI Dwords shall be paired, i.e. an Rx immediately followed by a Tx, and both Dwords                shall define the same value for the PSIV.                  PLT Values and corresponding bit rate:                  0: Symmetric [Single PSI Dword]                 1: Reserved                  2: Asymmetric Rx [Paired with Asymmetric Tx PSI Dword]                  3: Asymmetric Tx [Immediately follows Rx Asymmetric PSI Dword]." range="7 - 6" rwaccess="R"/> 
		<bitfield id="PSIE" width="2" begin="5" end="4" resetval="0x2" description="Protocol Speed ID Exponent. This field defines the base 10 exponent times 3, that shall be applied to the Protocol Speed ID Mantissa when              calculating the maximum bit rate represented by this PSI Dword.                PSIE Values and corresponding bit rates:                0: Bits per second                1: Kb/s                2: Mb/s                3: Gb/s ." range="5 - 4" rwaccess="R"/> 
		<bitfield id="PSIV" width="4" begin="3" end="0" resetval="0x1" description="Protocol Speed ID Value. If a device is attached that operates at the bit rate defined by this PSI Dword, then the value of this field                shall be reported in the Port Speed field of PORTSC register [5.4.8 of xHCI specification] of a compatible port.               Note, the PSIV value of 0 is reserved and shall not be defined by a PSI." range="3 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_PSI_LOW_SPEED" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_PSI_LOW_SPEED" offset="0x18054" width="32" description="Protocol Speed ID, xHCI Supported Protocol Capability">
		<bitfield id="PSIM" width="16" begin="31" end="16" resetval="0x1500" description="Protocol Speed ID Mantissa. This field defines the mantissa that shall be applied to the PSIE when calculating the maximum bit rate represented by this PSI Dword." range="31 - 16" rwaccess="R"/> 
		<bitfield id="RSVDP1" width="7" begin="15" end="9" resetval="0x0" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.           Note: At present the fields are implemented as RO." range="15 - 9" rwaccess="R"/> 
		<bitfield id="PFD" width="1" begin="8" end="8" resetval="0x0" description="PSI Full-duplex. If this bit is '1' the link is full-duplex, and if '0' the link is half-duplex." range="8" rwaccess="R"/> 
		<bitfield id="PLT" width="2" begin="7" end="6" resetval="0x0" description="PSI Type. This field identifies whether the PSI Dword defines a symmetric or asymmetric bit rate, and if asymmetric,                then this field also indicates if this Dword defines the receive or transmit bit rate.                  Note that the Asymmetric PSI Dwords shall be paired, i.e. an Rx immediately followed by a Tx, and both Dwords                shall define the same value for the PSIV.                  PLT Values and corresponding bit rate:                  0: Symmetric Single [PSI Dword]                 1: Reserved               2: Asymmetric Rx [Paired with Asymmetric Tx PSI Dword]                  3: Asymmetric Tx [Immediately follows Rx Asymmetric PSI Dword]." range="7 - 6" rwaccess="R"/> 
		<bitfield id="PSIE" width="2" begin="5" end="4" resetval="0x1" description="Protocol Speed ID Exponent. This field defines the base 10 exponent times 3, that shall be applied to the Protocol Speed ID Mantissa when              calculating the maximum bit rate represented by this PSI Dword.                PSIE Values and corresponding bit rates:                0: Bits per second                1: Kb/s                2: Mb/s                3: Gb/s ." range="5 - 4" rwaccess="R"/> 
		<bitfield id="PSIV" width="4" begin="3" end="0" resetval="0x2" description="Protocol Speed ID Value. If a device is attached that operates at the bit rate defined by this PSI Dword, then the value of this field                shall be reported in the Port Speed field of PORTSC register [5.4.8 of xHCI specification] of a compatible port.               Note, the PSIV value of 0 is reserved and shall not be defined by a PSI." range="3 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_PSI_HIGH_SPEED" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_PSI_HIGH_SPEED" offset="0x18058" width="32" description="Protocol Speed ID, xHCI Supported Protocol Capability">
		<bitfield id="PSIM" width="16" begin="31" end="16" resetval="0x480" description="Protocol Speed ID Mantissa. This field defines the mantissa that shall be applied to the PSIE when calculating the maximum bit rate represented by this PSI Dword." range="31 - 16" rwaccess="R"/> 
		<bitfield id="RSVDP1" width="7" begin="15" end="9" resetval="0x0" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.           Note: At present the fields are implemented as RO." range="15 - 9" rwaccess="R"/> 
		<bitfield id="PFD" width="1" begin="8" end="8" resetval="0x0" description="PSI Full-duplex. If this bit is '1' the link is full-duplex, and if '0' the link is half-duplex." range="8" rwaccess="R"/> 
		<bitfield id="PLT" width="2" begin="7" end="6" resetval="0x0" description="PSI Type. This field identifies whether the PSI Dword defines a symmetric or asymmetric bit rate, and if asymmetric,                then this field also indicates if this Dword defines the receive or transmit bit rate.                  Note that the Asymmetric PSI Dwords shall be paired, i.e. an Rx immediately followed by a Tx, and both Dwords                shall define the same value for the PSIV.                  PLT Values and corresponding bit rate:                  0: Symmetric Single [PSI Dword]                 1: Reserved                  2: Asymmetric Rx [Paired with Asymmetric Tx PSI Dword]                  3: Asymmetric Tx [Immediately follows Rx Asymmetric PSI Dword]." range="7 - 6" rwaccess="R"/> 
		<bitfield id="PSIE" width="2" begin="5" end="4" resetval="0x2" description="Protocol Speed ID Exponent. This field defines the base 10 exponent times 3, that shall be applied to the Protocol Speed ID Mantissa when              calculating the maximum bit rate represented by this PSI Dword.                PSIE Values and corresponding bit rates:                0: Bits per second                1: Kb/s                2: Mb/s                3: Gb/s ." range="5 - 4" rwaccess="R"/> 
		<bitfield id="PSIV" width="4" begin="3" end="0" resetval="0x3" description="Protocol Speed ID Value. If a device is attached that operates at the bit rate defined by this PSI Dword, then the value of this field                shall be reported in the Port Speed field of PORTSC register [5.4.8 of xHCI specification] of a compatible port.               Note, the PSIV value of 0 is reserved and shall not be defined by a PSI." range="3 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_SUPP_USB3_CAP0" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_SUPP_USB3_CAP0" offset="0x18060" width="32" description="xHCI Supported Protocol Capability.">
		<bitfield id="MAJOR_REV" width="8" begin="31" end="24" resetval="0x3" description="Major Specification Release Number in Binary-Coded Decimal [i.e.,version 3.x is 03h]. This field identifies               the major release number component of the specification with which the xHC is compliant." range="31 - 24" rwaccess="R"/> 
		<bitfield id="MINOR_REV" width="8" begin="23" end="16" resetval="0x0" description="Minor Specification Release Number in Binary-Coded Decimal [i.e.,version x.10 is 10h]. This field identifies               the minor release number component of the specification with which the xHC is compliant." range="23 - 16" rwaccess="R"/> 
		<bitfield id="NEXTCAPID" width="8" begin="15" end="8" resetval="0x8" description="This field indicates the location of the next capability with respect to the effective address of this capability.               Refer to Table 142 of xHCI specification for more information on this field." range="15 - 8" rwaccess="R"/> 
		<bitfield id="PID" width="8" begin="7" end="0" resetval="0x2" description="Capability ID. The value identifies the capability as Supported Protocol." range="7 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_SUPP_USB3_CAP1" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_SUPP_USB3_CAP1" offset="0x18064" width="32" description="xHCI Supported Protocol Capability.">
		<bitfield id="USB_STRING" width="32" begin="31" end="0" resetval="0x541217621" description="Name String,  RO. This field is a mnemonic name string that references the specification with               which the xHC is compliant. Four ASCII characters may be defined. Allowed characters are:               alphanumeric, space, and underscore. Alpha characters are case sensitive. Refer to section               7.2.2 of xHCI specification for defined values." range="31 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_SUPP_USB3_CAP2" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_SUPP_USB3_CAP2" offset="0x18068" width="32" description="xHCI Supported Protocol Capability. USB 3.0 protocol">
		<bitfield id="PSIC" width="4" begin="31" end="28" resetval="0x1" description="Protocol Speed ID CountCount : 1, USB 3.0 Speed [Super Speed]. This field indicates the number of Protocol Speed ID [PSI] Dwords that the xHCI Supported Protocol Capability data structure contains.               If this field is non-zero, then all speeds supported by the protocol shall be defined using PSI Dwords, i.e. no implied Speed ID mappings apply." range="31 - 28" rwaccess="R"/> 
		<bitfield id="RSVDP1" width="12" begin="27" end="16" resetval="0x0" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.           Note: At present the fields are implemented as RO." range="27 - 16" rwaccess="R"/> 
		<bitfield id="COMPATIBLE_PORT_COUNT" width="8" begin="15" end="8" resetval="0x1" description="This field identifies the number of consecutive Root Hub Ports [starting at the Compatible Port Offset]                that support this protocol. Valid values are 1 to MaxPorts." range="15 - 8" rwaccess="R"/> 
		<bitfield id="COMPATIBLE_PORT_OFFSET" width="8" begin="7" end="0" resetval="0x2" description="This field specifies the starting Port Number of Root Hub Ports that support this protocol. Valid values are 1 to MaxPorts." range="7 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_SUPP_USB3_PROTOCOL_SLOT_TYPE" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_SUPP_USB3_PROTOCOL_SLOT_TYPE" offset="0x1806C" width="32" description="Protocol Slot Type. xHCI Supported Protocol Capability">
		<bitfield id="RSVDP1" width="27" begin="31" end="5" resetval="0x0" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.           Note: At present the fields are implemented as RO." range="31 - 5" rwaccess="R"/> 
		<bitfield id="PST" width="5" begin="4" end="0" resetval="0x0" description="This field specifies the Protocol Slot Type value, which may be specified when allocating Device Slots that support this protocol.                Valid values are 0 to 31. Refer to sections 4.6.3 and 7.2.2.1.4 of xHCI specification.                 The value of the Protocol Slot Type field declared by a xHCI Supported Protocol Capability structure is unique to an xHC                implementation. Software shall not assume a fixed mapping of the Protocol Slot Type value to a specific type of Supported Protocol.               Note that for compatibility reasons, the Protocol Slot Type value of 0 is the exception to this rule and               reserved for the USB Protocol Device Slot type." range="4 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_PSI_SUPER_SPEED" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_PSI_SUPER_SPEED" offset="0x18070" width="32" description="Protocol Speed ID, xHCI Supported Protocol Capability">
		<bitfield id="PSIM" width="16" begin="31" end="16" resetval="0x5" description="Protocol Speed ID Mantissa. This field defines the mantissa that shall be applied to the PSIE when calculating the maximum bit rate represented by this PSI Dword." range="31 - 16" rwaccess="R"/> 
		<bitfield id="RSVDP1" width="7" begin="15" end="9" resetval="0x0" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.           Note: At present the fields are implemented as RO." range="15 - 9" rwaccess="R"/> 
		<bitfield id="PFD" width="1" begin="8" end="8" resetval="0x1" description="PSI Full-duplex. If this bit is '1' the link is full-duplex, and if '0' the link is half-duplex." range="8" rwaccess="R"/> 
		<bitfield id="PLT" width="2" begin="7" end="6" resetval="0x0" description="PSI Type. This field identifies whether the PSI Dword defines a symmetric or asymmetric bit rate, and if asymmetric,                then this field also indicates if this Dword defines the receive or transmit bit rate.                  Note that the Asymmetric PSI Dwords shall be paired, i.e. an Rx immediately followed by a Tx, and both Dwords                shall define the same value for the PSIV.                  PLT Values and corresponding bit rate:                  0: Symmetric Single [PSI Dword]                 1: Reserved                  2: Asymmetric Rx [Paired with Asymmetric Tx PSI Dword]                  3: Asymmetric Tx [Immediately follows Rx Asymmetric PSI Dword]." range="7 - 6" rwaccess="R"/> 
		<bitfield id="PSIE" width="2" begin="5" end="4" resetval="0x3" description="Protocol Speed ID Exponent. This field defines the base 10 exponent times 3, that shall be applied to the Protocol Speed ID Mantissa when              calculating the maximum bit rate represented by this PSI Dword.                PSIE Values and corresponding bit rates:                0: Bits per second                1: Kb/s                2: Mb/s                3: Gb/s ." range="5 - 4" rwaccess="R"/> 
		<bitfield id="PSIV" width="4" begin="3" end="0" resetval="0x4" description="Protocol Speed ID Value. If a device is attached that operates at the bit rate defined by this PSI Dword, then the value of this field                shall be reported in the Port Speed field of PORTSC register [5.4.8 of xHCI specification] of a compatible port.               Note, the PSIV value of 0 is reserved and shall not be defined by a PSI." range="3 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_CMDM_STS0" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_CMDM_STS0" offset="0x18080" width="32" description="Command Ring related status register. Command manager status debug register. This is a vendor defined capability. This register is reserved. This register should not be modified by software. It is described only for informative purposes.">
		<bitfield id="IDMA_CNTX_IN_USE" width="1" begin="31" end="31" resetval="0x0" description="Indicates that IDMA module currently owns the context access :" range="31" rwaccess="R"/> 
		<bitfield id="ODMA_CNTX_IN_USE" width="1" begin="30" end="30" resetval="0x0" description="Indicates that ODMA module currently owns currently the context access" range="30" rwaccess="R"/> 
		<bitfield id="TRM_CNTX_IN_USE" width="1" begin="29" end="29" resetval="0x0" description="Indicates that TRM modules owns the context access currently" range="29" rwaccess="R"/> 
		<bitfield id="CMDM_CNTX_LOCK_REQ" width="1" begin="28" end="28" resetval="0x0" description="Indicates that Command Manager has requested a context lock." range="28" rwaccess="R"/> 
		<bitfield id="CMDM_STOP_REQ" width="1" begin="27" end="27" resetval="0x0" description="Indicates that Command Ring stop command is in progress." range="27" rwaccess="R"/> 
		<bitfield id="CMDM_CLR_DB_REQ" width="1" begin="26" end="26" resetval="0x0" description="Indicates that clearing an EP out of schedule is in progress." range="26" rwaccess="R"/> 
		<bitfield id="ODMA_ADDRESS_DEV_DONE" width="1" begin="25" end="25" resetval="0x0" description="Indicates that current address device command is done by ODMA." range="25" rwaccess="R"/> 
		<bitfield id="ODMA_ADDRESS_DEV_PENDING" width="1" begin="24" end="24" resetval="0x0" description="Indicates that ODMA has an address device command in progress." range="24" rwaccess="R"/> 
		<bitfield id="UPDATE_ENDPT_ACTIVE" width="1" begin="23" end="23" resetval="0x0" description="Indicates that updating of EP state is in progress" range="23" rwaccess="R"/> 
		<bitfield id="DBM_EP_UPD_REQ" width="1" begin="22" end="22" resetval="0x0" description="Indicates that Doorbell Manager is issuing and EP update due to a doorbell ring on an EP that is in stop state" range="22" rwaccess="R"/> 
		<bitfield id="TRM_EPERR_UPD_REQ" width="1" begin="21" end="21" resetval="0x0" description="Indicates that Transfer Ring Manager is issuing and EP update due to an EP error condition detected" range="21" rwaccess="R"/> 
		<bitfield id="TRM_STALL_REQ" width="1" begin="20" end="20" resetval="0x0" description="Indicates that transfer ring manager is issuing and EP state update due to stall received" range="20" rwaccess="R"/> 
		<bitfield id="RESERVED_R" width="1" begin="19" end="19" resetval="0x0" description="Reserved field, RO" range="19" rwaccess="R"/> 
		<bitfield id="STOPPING_CMD_RING" width="1" begin="18" end="18" resetval="0x0" description="Indicates that a STOP on the Command Ring is in progress" range="18" rwaccess="R"/> 
		<bitfield id="HOST_CMD_DB_RANG_STICKY" width="1" begin="17" end="17" resetval="0x0" description="Indicates that command ring has a doorbell pending" range="17" rwaccess="R"/> 
		<bitfield id="CMD_RUNNING" width="1" begin="16" end="16" resetval="0x0" description="Indicates that the command ring is running" range="16" rwaccess="R"/> 
		<bitfield id="XECP_CMDM_NEXT_CAP_OFFSET" width="8" begin="15" end="8" resetval="0x12" description="Next capability offset" range="15 - 8" rwaccess="R"/> 
		<bitfield id="VEND_DEF_CMDM_CAP_ID_193" width="8" begin="7" end="0" resetval="0x193" description="Vendor defined capability ID. Command Ring Manager capability ID." range="7 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_CMDM_RESERVED_1" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_CMDM_RESERVED_1" offset="0x18084" width="32" description="Event ring manager module reserved space. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="RESERVED_R" width="32" begin="31" end="0" resetval="0x0" description="Reserved field, RO." range="31 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_CMDM_RESERVED_2" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_CMDM_RESERVED_2" offset="0x18088" width="32" description="Event ring manager module reserved space. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="RESERVED_R" width="32" begin="31" end="0" resetval="0x0" description="Reserved field, RO." range="31 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_CMDM_RESERVED_3" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_CMDM_RESERVED_3" offset="0x1808C" width="32" description="Event ring manager module reserved space. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="RESERVED_R" width="32" begin="31" end="0" resetval="0x0" description="Reserved field, RO." range="31 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_CMDM_RESERVED_4" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_CMDM_RESERVED_4" offset="0x18090" width="32" description="Event ring manager module reserved space. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="RESERVED_R" width="32" begin="31" end="0" resetval="0x0" description="Reserved field, RO." range="31 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_CMDM_RESERVED_5" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_CMDM_RESERVED_5" offset="0x18094" width="32" description="Event ring manager module reserved space. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="RESERVED_R" width="32" begin="31" end="0" resetval="0x0" description="Reserved field, RO." range="31 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_CMDM_CTRL_REG1" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_CMDM_CTRL_REG1" offset="0x18098" width="32" description="Command Manager Control register 1. This register contains fields which control the behavior of the Command Manager in the xHCI. The functions controlled by this register are made available largely for debug/diagnostic purposes. This functionality is above and beyond that defined in the xHCI specification. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="DEFAULT_INTR_EP_BANDWIDTH" width="4" begin="31" end="28" resetval="0x3" description="Bandwidth calculation parameter: Default bandwidth for an Interrupt Endpoint." range="31 - 28" rwaccess="R/W"/> 
		<bitfield id="DEFAULT_ISOCH_EP_BANDWIDTH" width="4" begin="27" end="24" resetval="0x5" description="Bandwidth calculation parameter:  Default bandwidth for an Isochronous Endpoint." range="27 - 24" rwaccess="R/W"/> 
		<bitfield id="EVAL_CNTX_BW_SCAN_EN" width="1" begin="23" end="23" resetval="0x1" description="Enable the Host Controller's Bandwidth checks for the Evaluate Context Command. Rescan the BW during evaluate context" range="23" rwaccess="R/W"/> 
		<bitfield id="FEATURE_RETRY_EN" width="1" begin="22" end="22" resetval="0x0" description="Enable the EOB and NPKT==0 [called NYET condition for USB3] to be used to update a retry bit during stream switching operation.              This is an internal safety feature. It should be treated as reserved bit." range="22" rwaccess="R/W"/> 
		<bitfield id="CFG_ENDPT_CNTX_LOCK_DIS" width="1" begin="21" end="21" resetval="0x0" description="Context lock mechanism to ensure command manager has exclusive access to internal context. This is a disable bit to allow software to turn off the context lock for configure endpoint command. This is a test/debug feature.             '1': indicates disabled.               '0': Indicates enabled  " range="21" rwaccess="R/W"/> 
		<bitfield id="ENABLE_MAX_EP_CACHE" width="1" begin="20" end="20" resetval="0x0" description="enable_max_ep_cache" range="20" rwaccess="R/W"/> 
		<bitfield id="REPORT_BANDWIDTH_SKIP_SCAN" width="1" begin="19" end="19" resetval="0x0" description="report_bandwidth_skip_scan" range="19" rwaccess="R/W"/> 
		<bitfield id="FORCE_BANDWIDTH_SYS_PASS" width="1" begin="18" end="18" resetval="0x0" description="force_bandwidth_sys_pass" range="18" rwaccess="R/W"/> 
		<bitfield id="FORCE_BANDWIDTH_PASS" width="1" begin="17" end="17" resetval="0x0" description="force_bandwidth_pass" range="17" rwaccess="R/W"/> 
		<bitfield id="CLR_SPLIT_STATE_WITH_TSPSET" width="1" begin="16" end="16" resetval="0x0" description="This bit allows engine to reset the split states when reset endpoint with TSP is posted. The split state is an internal context field in DMA engine.              '0': Indicates that reset endpoint with TSP will preserve the split state.             '1': Indicates that the reset endpoint with TSP will not preserve the split state." range="16" rwaccess="R/W"/> 
		<bitfield id="CLR_EP_CNTX_4DIS_SLOT" width="1" begin="15" end="15" resetval="0x1" description="'0': Disable clearing internal TRM and DMA context as well as the internal EP status signals during a disable slot command.             '1': Enable clearing internal TRM and DMA context as well as the internal EP status signals during a disable slot command." range="15" rwaccess="R/W"/> 
		<bitfield id="EVAL_EPST_CHECK_EN" width="1" begin="14" end="14" resetval="0x0" description="'0': Disable evaluating the endpoint state during an Evaluate Context command,             '1': Enable EP state check during an Evaluate Context command. If failed, context error will be returned." range="14" rwaccess="R/W"/> 
		<bitfield id="INIT_RETRY" width="1" begin="13" end="13" resetval="0x1" description="init_retry. Reserved to always read value of '1'." range="13" rwaccess="R/W"/> 
		<bitfield id="GLOB_TSP_EN" width="1" begin="12" end="12" resetval="0x0" description="'0': Disable the global context preservation.               '1': Enable the internal context preservation for all commands that needs to preserve some of the internal context fields as a command with TSP would." range="12" rwaccess="R/W"/> 
		<bitfield id="CLR_EP_CNTX_4CFG_ENDPT" width="1" begin="11" end="11" resetval="0x1" description="'0': Disable clearing other internal EP status signals during a configure endpoint command.             '1': Enable clearing other internal EP related status signals such as EP scheduled array, credit stored per EP, etc. during a configure endpoint command." range="11" rwaccess="R/W"/> 
		<bitfield id="CLR_EP_CNTX_4RST_DEVICE" width="1" begin="10" end="10" resetval="0x1" description="'0': Disable clearing other internal EP status signals during a reset device command.              '1': Enable clearing other internal EP related status signals such as EP scheduled array, credit stored per EP, etc. during a reset device command." range="10" rwaccess="R/W"/> 
		<bitfield id="CLR_EP_CNTX_4RST_ENDPT" width="1" begin="9" end="9" resetval="0x1" description="'0': Disable clearing other internal EP status signals during a reset endpoint command.             '1': Enable clearing other internal EP related status signals such as EP scheduled array, credit stored per EP. etc. during a reset endpoint command." range="9" rwaccess="R/W"/> 
		<bitfield id="CLR_EP_CNTX_4EN_SLOT" width="1" begin="8" end="8" resetval="0x1" description="'0': Disable clearing other internal EP status signals during an enable slot command.             '1': Enable clearing other internal EP related status signals such as EP scheduled array, credit stored per EP. etc., during an enable slot command." range="8" rwaccess="R/W"/> 
		<bitfield id="CLR_CNTX_4ENCFGENDPT" width="1" begin="7" end="7" resetval="0x1" description="'0': Disable clearing internal TRM and DMA context during a configure endpoint command.             '1': Enable clearing internal TRM and DMA context during a configure endpoint command." range="7" rwaccess="R/W"/> 
		<bitfield id="CLR_CNTX_4ENADDR" width="1" begin="6" end="6" resetval="0x1" description="'0': Disable clearing internal TRM and DMA context during an address device command.             '1': Enable clearing internal TRM and DMA context during an address device command." range="6" rwaccess="R/W"/> 
		<bitfield id="CLR_CNTX_4ENSLOT_REG" width="1" begin="5" end="5" resetval="0x1" description="'0': Disable clearing internal TRM and DMA context during an enable slot command.             '1': Enable clearing internal TRM and DMA context during an enable slot command." range="5" rwaccess="R/W"/> 
		<bitfield id="CLR_CNTX_4RSTDEV" width="1" begin="4" end="4" resetval="0x1" description="'0': Disable clearing internal TRM and DMA context during a reset device command.             '1': Enable clearing internal TRM and DMA context during a reset device command." range="4" rwaccess="R/W"/> 
		<bitfield id="ADDR_DEV_SLST_BSR_CHECK_EN" width="1" begin="3" end="3" resetval="0x1" description="'0': Address device does not return the error for this condition.             '1': Enable the EP state [default state] check with address device command with BSR. If failed, an event with context state error will be generated." range="3" rwaccess="R/W"/> 
		<bitfield id="CLR_CNTX_4SETDQPTR" width="1" begin="2" end="2" resetval="0x1" description="'0': Disable clearing internal TRM and DMA context during a set TR DQ pointer command.             '1': Enable clearing internal TRM and DMA context during a set TR DQ pointer command." range="2" rwaccess="R/W"/> 
		<bitfield id="FORCE_BANDWIDTH_FAIL" width="1" begin="1" end="1" resetval="0x0" description="'0':  Bandwidth calculation handled normally.             '1':  Forces a failure in the endpoint bandwidth calculation so that engine will reject a configure EP command." range="1" rwaccess="R/W"/> 
		<bitfield id="UPDATE_ENDPT_EVENT_ENABLE" width="1" begin="0" end="0" resetval="0x0" description="'0':  Disable generation of the completion event.             '1':  Enable the command manager to generate a completion event after an EP state update due to internal error.             This bit is for test debug." range="0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_CMDM_CTRL_REG2" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_CMDM_CTRL_REG2" offset="0x1809C" width="32" description="Command Manager Control register 2. This register contains fields which control the behavior of the Command Manager in the xHCI. The functions controlled by this register are made available largely for debug/diagnostic purposes. This functionality is above and beyond that defined in the xHCI specification. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="DOING_2DW_OCNTX_WR_EN" width="1" begin="31" end="31" resetval="0x0" description="Enable only to update the EP state to output context on every EP output context update condition. This is to allow to have a control over either update the entire EPoutput context field or only update the first two DWORDs.             '0': update the entire output context field.              '1': update only 2 DWORDs" range="31" rwaccess="R/W"/> 
		<bitfield id="STOP_ENDPT_2MS_TIMEOUT_EN" width="1" begin="30" end="30" resetval="0x0" description="Enable a delay to stop endpoint command that is executed in XFER engine.              '0': XFER engine will not wait.             '1': XFER engine will always wait for 2 ms before it checks whether an EP transfer ring is at a stop of packet boundary" range="30" rwaccess="R/W"/> 
		<bitfield id="SLOT_ID_OVERIDE_EN" width="1" begin="29" end="29" resetval="0x0" description="Force '0' on slot ID when a command transfer event is generated.              '0': not forced,             '1': Forced to 0." range="29" rwaccess="R/W"/> 
		<bitfield id="SRE" width="1" begin="28" end="28" resetval="0x0" description="Force and error on save command always.              '0': do not force,             '1': always force return save error." range="28" rwaccess="R/W"/> 
		<bitfield id="ALL_CLK_GATE_DIS" width="1" begin="27" end="27" resetval="0x0" description="'0': Turn ON the TTE clock.              '1': Turn OFF the TTE clock." range="27" rwaccess="R/W"/> 
		<bitfield id="CLR_EP_CNTX_4STOP_ENDPT" width="1" begin="26" end="26" resetval="0x1" description="'0': Disable clearing other internal per EP status signal during a stop endpoint command.              '1': Enable clearing other internal per EP status signal during a stop endpoint command." range="26" rwaccess="R/W"/> 
		<bitfield id="CLR_EP_CNTX_4STALL_UPD" width="1" begin="25" end="25" resetval="0x1" description="'0': Disable clearing other internal EP status signal during stall handling.             '1': Enable clearing other internal EP status signal during stall handling." range="25" rwaccess="R/W"/> 
		<bitfield id="MOVE_XFER_DQPTR_2CPL_DQPTR_EN" width="1" begin="24" end="24" resetval="0x0" description="'0': The internal context write DQ pointer moved to internal read pointer during reset EP command.              '1': The write DQ pointer stays as it was during reset endpoint command." range="24" rwaccess="R/W"/> 
		<bitfield id="CLR_CNTX_4RST_ENDPT_REG" width="1" begin="23" end="23" resetval="0x1" description="'0': Disable clearing internal TRM and DMA context during a reset endpoint command.              '1': Enable clearing internal TRM and DMA context during a reset endpoint command." range="23" rwaccess="R/W"/> 
		<bitfield id="ENABLE_BW_CAL" width="1" begin="22" end="22" resetval="0x1" description="'0': Disable hardware bandwidth calculations.              '1': Enable hardware bandwidth calculations." range="22" rwaccess="R/W"/> 
		<bitfield id="CMD_ST_DIS_REG" width="1" begin="21" end="21" resetval="0x0" description="'0': Delay processing command ring TRB while internal context requests are pending.              '1': Process command ring TRBs normally." range="21" rwaccess="R/W"/> 
		<bitfield id="SET_DQPTR_CLR_EP_ARYS" width="1" begin="20" end="20" resetval="0x0" description="'0': Disable clearing other internal EP status signals during a set DQ pointer command.              '1': Enable clearing other internal EP status signals during a set DQ pointer command." range="20" rwaccess="R/W"/> 
		<bitfield id="FORCE_RESET_ENDPT_REG" width="1" begin="19" end="19" resetval="0x0" description="'0': Check the slot and endpoint state prior to processing a reset endpoint command.              '1': Ignore the slot and endpoint state when processing a reset endpoint command." range="19" rwaccess="R/W"/> 
		<bitfield id="TSP_4SET_DQPTR_REG" width="1" begin="18" end="18" resetval="0x1" description="'0': Disable sequence number preservation during set DQ pointer command.              '1': Enable sequence number to be preserved during set DQ pointer command." range="18" rwaccess="R/W"/> 
		<bitfield id="TRM_BREAK_LOOP_EN" width="1" begin="17" end="17" resetval="0x1" description="trm_break_loop_en. This is an internal safeguard register. It enables a different mechanism of handling stop endpoint command.              It should be treated as a reserved field. The default should not be alternate unless specific purpose.             '0': Disable.              '1': Enable." range="17" rwaccess="R/W"/> 
		<bitfield id="INCREASE_UPDATE_EP_PRIORITY_EN" width="1" begin="16" end="16" resetval="0x0" description="Increase Update EP priority over commands in the command ring to avoid prolonging STALL handling.             '0': Pending commands have a higher priority than update endpoint processing.              '1': Update endpoint processing in the command manager has a higher priority than pending commands.             Note: Enabling this bit can prevent prolonged stall handling." range="16" rwaccess="R/W"/> 
		<bitfield id="DISABLE_STALL_CLR_EP" width="1" begin="15" end="15" resetval="0x0" description="'0': Stall handling does clear the internal EP status signals.              '1': Disable the clear function when stall response received." range="15" rwaccess="R/W"/> 
		<bitfield id="BURST_SIZE_DEFAULT_EN" width="1" begin="14" end="14" resetval="0x0" description="When context is first initialized, it is assumed one remote NPKT. It is also assumed that max burst size as remote NPKT.                This bit enables to assume max burst size as remote NPKT.                 '0': Assume 1 NPKT.                '1': Assume max burst size as NPKT." range="14" rwaccess="R/W"/> 
		<bitfield id="CLR_ST" width="14" begin="13" end="0" resetval="0x0" description="Clear state machine present state:  Setting a specified bit to '1', will reset the corresponding command manager               state machine to the starting/idle state.               bit-0: disable slot state machine.               bit-1: enable slot state machine.               bit-2: reset endpoint state machine.               bit-3: reset device state machine.               bit-4: command ring state machine.               bit-5: stop endpoint state machine.                 bit-6: set dq pointer state machine.                 bit-7: force header state machine.                 bit-8: evaluate context state machine.                 bit-9: update endpoint state machine.                 bit-10: address device state machine.                 bit-11: port bandwidth state machine.                 bit-12: read output context state machine.                 bit-13: configure endpoint state machine." range="13 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_CMDM_CTRL_REG3" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_CMDM_CTRL_REG3" offset="0x180A0" width="32" description="Command Manager Control register 3. This register contains fields which control the behavior of the Command Manager in the xHCI. The functions controlled by this register are made available largely for debug/diagnostic purposes. This functionality is above and beyond that defined in the xHCI specification. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="FRINDEX_WR_EN" width="1" begin="31" end="31" resetval="0x0" description="MFIndex register write enable. For debug purposes." range="31" rwaccess="R/W"/> 
		<bitfield id="IGNORE_HI_ATOMIC_EN" width="1" begin="30" end="30" resetval="0x0" description="ignore_hi_atomic_en" range="30" rwaccess="R/W"/> 
		<bitfield id="EXTRA_DB_RM_4STOP_EN" width="1" begin="29" end="29" resetval="0x1" description="extra_db_rm_4stop_en" range="29" rwaccess="R/W"/> 
		<bitfield id="DISABLE_NON0EP_CNTX_CLR" width="1" begin="28" end="28" resetval="0x0" description="disable_non0ep_cntx_clr" range="28" rwaccess="R/W"/> 
		<bitfield id="DISABLE_SETDQPTR_CLR_STREAM_ST" width="1" begin="27" end="27" resetval="0x0" description="disable_setdqptr_clr_stream_st. Disable setTRDQPtr from clearing the current stream state." range="27" rwaccess="R/W"/> 
		<bitfield id="UPDATE_CNTX_WHEN_STOPPED" width="1" begin="26" end="26" resetval="0x0" description="update_cntx_when_stopped. Allow setTRDQPtr cmd to update the local context anytime the EP is  not running [otherwise checks CSTREAMID]." range="26" rwaccess="R/W"/> 
		<bitfield id="STOP_EP_CLR_LCSTREAM_ID_EN" width="1" begin="25" end="25" resetval="0x1" description="stop_ep_clr_lcstream_id_en. Enable stop endpoint command to return stream st to disabled [0] in EP context." range="25" rwaccess="R/W"/> 
		<bitfield id="SET_BURST_SIZE_4PRDC_DIS" width="1" begin="24" end="24" resetval="0x0" description="set_burst_size_4prdc_dis" range="24" rwaccess="R/W"/> 
		<bitfield id="STREAM_ALWAYS_UPDATE_CNTX" width="1" begin="23" end="23" resetval="0x0" description="stream_always_update_cntx" range="23" rwaccess="R/W"/> 
		<bitfield id="ALLOW_CLR_4STOP" width="1" begin="22" end="22" resetval="0x0" description="allow_clr_4stop" range="22" rwaccess="R/W"/> 
		<bitfield id="STOP_EP_CLR_STREAM_ST_EN" width="1" begin="21" end="21" resetval="0x1" description="stop_ep_clr_stream_st_en. Enable stop endpoint command to return stream st to disabled [0] in EP context." range="21" rwaccess="R/W"/> 
		<bitfield id="BREAK_CNTX_LOCK_EN" width="1" begin="20" end="20" resetval="0x0" description="break_cntx_lock_en" range="20" rwaccess="R/W"/> 
		<bitfield id="STOP_2TIMEOUT_EN" width="1" begin="19" end="19" resetval="0x0" description="stop_2timeout_en. Stop transaction timeout." range="19" rwaccess="R/W"/> 
		<bitfield id="CLR_TRM_DMA_CNTX_EN" width="1" begin="18" end="18" resetval="0x0" description="clr_trm_dma_cntx_en" range="18" rwaccess="R/W"/> 
		<bitfield id="DISABLE_SLOT_TIMER_SELECT" width="2" begin="17" end="16" resetval="0x0" description="These two bits specify the delay that we can have for disable slot state to be completed. We can delay the generation of the command transfer event during disable slot command. Possible values:             '00': delay is disabled,             '01': 100us delay,             '10': 8ms delay,             '11': 10ms delay." range="17 - 16" rwaccess="R/W"/> 
		<bitfield id="DEFAULT_HS_BANDWD_AVAIL" width="8" begin="15" end="8" resetval="0x80" description="The default available bandwidth to advertise on each HS port in 10 0ncrements [80%]. Bandwidth Calculation is a reserved field for PPT." range="15 - 8" rwaccess="R/W"/> 
		<bitfield id="DEFAULT_PORT_BANDWD_AVAIL" width="8" begin="7" end="0" resetval="0x90" description="The default available bandwidth to advertise on each LS, FS, SS port in 10 0ncrements [90%]. Bandwidth calculation is a reserved field for PPT." range="7 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_CTRL_CAP" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_CTRL_CAP" offset="0x180B0" width="32" description="This is a register that describes the host controller's extended capability location. It is modified and maintained by BIOS.">
		<bitfield id="RESERVED_R" width="16" begin="31" end="16" resetval="0x0" description="Reserved field, RO." range="31 - 16" rwaccess="R"/> 
		<bitfield id="XECP_HOST_NEXT_CAP_OFFSET" width="8" begin="15" end="8" resetval="0x176" description="Next xHCI Extended Capability Pointer. This field points to the xHC MMIO space offset of the next xHCI extended capability pointer. A value of 00h indicates the end of the extended capability list. A non-zero value in this register indicates a relative offset, in Dwords, from this Dword to the beginning of the next extended capability.             For example, assuming an effective address of this data structure is 350h and assuming a pointer value of 068h, we can calculate the following effective address: 350h + [068h shifted left 2] -> 350h + 1A0h -> 4F0h" range="15 - 8" rwaccess="R"/> 
		<bitfield id="VEND_DEF_HOST_CAP_ID_192" width="8" begin="7" end="0" resetval="0x192" description="Capability ID. This field identifies the xHCI Extended capability. 192-255 are IDs available for vendor specific extensions to the xHCI." range="7 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_CTRL_RSVD" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_CTRL_RSVD" offset="0x180B4" width="32" description="Reserved space. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="RESERVED" width="32" begin="31" end="0" resetval="0x0" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.           Note: At present the fields are implemented as RO." range="31 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_CLR_MASK_REG" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_CLR_MASK_REG" offset="0x180B8" width="32" description="Override Endpoint Flow Control. This is a register that is used to clear the internal scheduler's mask that is used to stop scheduling a particular Endpoint. Allows software to clear pending mask. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="RESERVED_R" width="22" begin="31" end="10" resetval="0x0" description="Reserved field, RO" range="31 - 10" rwaccess="R"/> 
		<bitfield id="SLOT_NUM" width="5" begin="9" end="5" resetval="0x0" description="Slot number." range="9 - 5" rwaccess="W"/> 
		<bitfield id="EP_NUM" width="4" begin="4" end="1" resetval="0x0" description="Endpoint number" range="4 - 1" rwaccess="W"/> 
		<bitfield id="EP_DIR" width="1" begin="0" end="0" resetval="0x0" description="Indicates the direction of the Endpoint" range="0" rwaccess="W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_CLR_IN_EP_VALID_REG" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_CLR_IN_EP_VALID_REG" offset="0x180BC" width="32" description="Clear Active IN EP ID Control. This register is used to clear the internal valid IN EP array that TRM stored in order to guarantee one IN EP per port. This register allows software to clear the valid bit of each port IN EP. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="PORT_NUM" width="32" begin="31" end="0" resetval="0x0" description="This field indicates the port number." range="31 - 0" rwaccess="W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_CLR_PMASK_REG" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_CLR_PMASK_REG" offset="0x180C0" width="32" description="Clear Poll Mask Control. This is a register that is used to clear the internal scheduler's poll mask that is used to indicate whether we need to poll this EP. This is used for USB2. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes. ">
		<bitfield id="RESERVED_R" width="22" begin="31" end="10" resetval="0x0" description="Reserved field, RO" range="31 - 10" rwaccess="R"/> 
		<bitfield id="SLOT_NUM" width="5" begin="9" end="5" resetval="0x0" description="Slot number" range="9 - 5" rwaccess="W"/> 
		<bitfield id="EP_NUM" width="4" begin="4" end="1" resetval="0x0" description="Endpoint number" range="4 - 1" rwaccess="W"/> 
		<bitfield id="EP_DIR" width="1" begin="0" end="0" resetval="0x0" description="Indicates the direction of the Endpoint" range="0" rwaccess="W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_CTRL_OCRD_REG" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_CTRL_OCRD_REG" offset="0x180C4" width="32" description="Port Credit Control. This is a register that is used to add or subtract a per port credit or to control the TRM's XFER and CPL states. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="CLR_XFER_ST" width="1" begin="31" end="31" resetval="0x0" description="Write '1' to force XFER state return to IDLE" range="31" rwaccess="W"/> 
		<bitfield id="CLR_CPL_ST" width="1" begin="30" end="30" resetval="0x0" description="Write '1' to force CPL state return to IDLE" range="30" rwaccess="W"/> 
		<bitfield id="PLUS_OCRD" width="1" begin="29" end="29" resetval="0x0" description="Add one credit to a port" range="29" rwaccess="W"/> 
		<bitfield id="MINUS_OCRD" width="1" begin="28" end="28" resetval="0x0" description="Subtract one credit from a port" range="28" rwaccess="W"/> 
		<bitfield id="MINUS_4RFIFO" width="1" begin="27" end="27" resetval="0x0" description="Indicates whether the subtract command operates on TX FIFO credit or RX FIFO credit." range="27" rwaccess="W"/> 
		<bitfield id="ST_UPD_REG" width="1" begin="26" end="26" resetval="0x0" description="Slot state control. st_upd_reg" range="26" rwaccess="R"/> 
		<bitfield id="RESERVED_R" width="18" begin="25" end="8" resetval="0x0" description="Reserved field, RO" range="25 - 8" rwaccess="R"/> 
		<bitfield id="PORT_NUM" width="8" begin="7" end="0" resetval="0x0" description="port number" range="7 - 0" rwaccess="W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_CTRL_TEST_BUS_LO" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_CTRL_TEST_BUS_LO" offset="0x180C8" width="32" description="Test Bus Low Bits: Host controller test bus low 32 bits. The register is used to read the internal states and other important signals. The host control test bus is gathered from different internal modules for its important states and control/status information. There is a 64-bit register that allows us to read a bus of 64 bits. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="TEST_BUS_LO" width="32" begin="31" end="0" resetval="0x0" description="Host controller test bus low 32-bits. " range="31 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_CTRL_TEST_BUS_HI" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_CTRL_TEST_BUS_HI" offset="0x180CC" width="32" description="Test Bus High Bits: Host controller test bus high 32 bits. This register is used to read the internal states and other important signals. The host control test bus is gathered from different internal modules for its important states and control/status information. There is a 64-bit register that allows us to read a bus of 64 bits. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="TEST_BUS_HI" width="32" begin="31" end="0" resetval="0x0" description="Host controller test bus high 32-bits." range="31 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_CTRL_TRM_REG1" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_CTRL_TRM_REG1" offset="0x180D0" width="32" description="Host Control Transfer Manager (TRM) register. This register contains fields, which control the behavior of the Transfer Manager in the xHCI. The functions controlled by this register are made available largely for debug/diagnostic purposes. This functionality is above and beyond that defined in the xHCI specification. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="TRB_PACE_EN" width="1" begin="31" end="31" resetval="0x0" description="Must be set to '0'." range="31" rwaccess="R/W"/> 
		<bitfield id="USB2_NAK_AUTO_DETECT_REG_EN" width="1" begin="30" end="30" resetval="0x1" description="'0': Disables a special function which detects NAK received and goes into a single packet pace mode so that we do not burst ahead.               '1': Enables a special function which detects NAK received and goes into a single packet pace mode so that we do not burst ahead." range="30" rwaccess="R/W"/> 
		<bitfield id="DISABLE_CPL_SST_MDATA_ERR" width="1" begin="29" end="29" resetval="0x0" description="'0': Enable the error check.              '1': Disable the error check for Data Move stream state. It will generate a transfer event with prime PIPE error completion code if an error is detected." range="29" rwaccess="R/W"/> 
		<bitfield id="DISABLE_CPL_SST_PPIPE_ERR" width="1" begin="28" end="28" resetval="0x0" description="'0': Enable the error check,              '1': Disable the error check for prime PIPE stream state. It will generate a transfer event with prime PIPE error completion code if an error is detected." range="28" rwaccess="R/W"/> 
		<bitfield id="ENABLE_NOOP_UPD" width="1" begin="27" end="27" resetval="0x1" description="This bit has been modified for its usage since PPT A0. It is used to allow NO-OP TRB to be treated in a same way as link TRB. In other words, it will update the internal context when it is fetched while the internal context cache TRB FIFO is empty.              '0': Disable the function,             '1': Enable the cache function." range="27" rwaccess="R/W"/> 
		<bitfield id="EP_HALT_2RETRY_EN" width="1" begin="26" end="26" resetval="0x1" description="This is a special internal condition enable for CPL engine which it enables all EP halt conditions detected to cause the proper actions in a response.              '0': Disabled,             '1': Enabled.             Note: Only default condition of '1' is valid." range="26" rwaccess="R/W"/> 
		<bitfield id="TRB_ERR_RM_DB_EN" width="1" begin="25" end="25" resetval="0x1" description="This is a special internal branch condition control in XFER engine which does the EP transfer ring process. When this bit is set a retry condition identified by completion engine will cause XFER engine to stop what it is currently in progress and start over from IDLE state.              '0': Disable,               '1': Enable the branch condition." range="25" rwaccess="R/W"/> 
		<bitfield id="DISABLE_IMD_4NODMA" width="1" begin="24" end="24" resetval="0x0" description="This is a special internal branch condition control in XFER engine which does the EP transfer ring process. When this bit is set, the XFER will not continue even if the next TRB is identified as a non DMA TRB. The engine will then wait for the next scheduled request for this EP.               '0': Disable,               '1': Enable the branch condition." range="24" rwaccess="R/W"/> 
		<bitfield id="WRITE_ERDP_LO" width="1" begin="23" end="23" resetval="0x0" description="When ERDP register is updated by software, it is expected as an atomic function since this is a 64-bit register. It is expected, that the ERDP [64-bit register] is updated together when ERDP high 32 is written. We have this bit designed to ignore the atomic operation required from software for ERDP low 32 bits. When this bit is set to '1', it will update the ERDP low 32 bits when software issues a CPU write to the ERDP low 32 bits.              '0': not ignore,                '1': ignore atomic operation." range="23" rwaccess="R/W"/> 
		<bitfield id="CPL_DB_RANG_EN" width="1" begin="22" end="22" resetval="0x0" description="Setting this bit to '1' will force an internal doorbell ring on the EP that it has received a response." range="22" rwaccess="R/W"/> 
		<bitfield id="DISABLE_ERDY_DROP" width="1" begin="21" end="21" resetval="0x0" description="'0': Drop ERDYs received when not in a flow control state.              '1': Do not drop ERDYs received when not in a flow control state.              Note: We typically drop unexpected ERDY " range="21" rwaccess="R/W"/> 
		<bitfield id="DEADLOCK_DETECT_EN" width="1" begin="20" end="20" resetval="0x1" description="'0':  Disable timeout of TRB error processing.             '1':  Enable timeout of a TRB processing in few critical states that possibly have a deadlock for unexpected reason.               A vendor defined completion code is generated in the event of a timeout during TRB processing." range="20" rwaccess="R/W"/> 
		<bitfield id="SHORT_ERR_4MSI_EN" width="1" begin="19" end="19" resetval="0x1" description="This bit is modified to enable a feature where we can control whether or not to report an event with completion code of Missed Service Error when a short packet response has been received not in the expected service interval.              '0': Disable this function so that the xHC engine will report an event with completion code of Short packet indication and another event with MSE at the end of the TD,               '1': Enables all completion event that supposedly is short to the MSE." range="19" rwaccess="R/W"/> 
		<bitfield id="NO_OP_AS_TD" width="1" begin="18" end="18" resetval="0x0" description="This bit is modified to enable the NO_OP TRB as a TD when Missing Service Interval Error has encountered. This is only for PPT B0, LPT and CB.             '0': disable,             '1': enable." range="18" rwaccess="R/W"/> 
		<bitfield id="PHASE1_IMD_EN" width="1" begin="17" end="17" resetval="0x1" description="Enable a special branch condition of the XFER ring process state. This is to ensure that we have a DMA request issued to DMA engine during a PHASE1 process of the TTE.              '0': disabled,               '1': enabled" range="17" rwaccess="R/W"/> 
		<bitfield id="SET_ADDR_ERR_EN" width="1" begin="16" end="16" resetval="0x1" description="'0': Disable error reporting if a SETUP TRB contains the following:               bRequest = SET_ADDRES, bmRequestType = [DTD] Host-to-device, Type = Standard, Recipient = Device.               '1': Enable error reporting for this case." range="16" rwaccess="R/W"/> 
		<bitfield id="ISO_0LEN_LPF_EN" width="1" begin="15" end="15" resetval="0x1" description="Enables a special internal state branch condition for periodic EP during its transfer ring process. If we have identified that the next TRB is a non DMAnable TRB such as LINK TRB, or Event data TRB, then this bit enables XFER engine to continue process the next TRB as if the ENT bit of the TRB is set.             '0': disable,              '1': enable." range="15" rwaccess="R/W"/> 
		<bitfield id="XFER_BLOCK_EN" width="1" begin="14" end="14" resetval="0x1" description="Not used. XFER engine has a new function that provides a support to ISO EP within a long PCIe delayed system. The long delay can cause missing service  interval while pending response has not all been returned. This bit enables engine to identify a MSI condition and store the context bit for a pending response so that we can process a MSI event when pending response received.             '0': disable this function,               '1': enable this function." range="14" rwaccess="R/W"/> 
		<bitfield id="SINGLE_BURST_EN" width="1" begin="13" end="13" resetval="0x0" description="'0':  Bulk and interrupt endpoints use burst size defined by endpoint context.              '1:  Force the Bulk and Interrupt endpoints to use a burst size of 1." range="13" rwaccess="R/W"/> 
		<bitfield id="ENT_EN" width="1" begin="12" end="12" resetval="0x1" description="'0':  ENT bit is ignored.             '1':  ENT bit is processed.  The transfer engine will service the next TRB." range="12" rwaccess="R/W"/> 
		<bitfield id="CTRL_REG_CLR_BNDRY" width="1" begin="11" end="11" resetval="0x0" description="Setting this bit to '1' will force the transfer engine to set the packet boundary flag. This flag is an important flag, which may cause a deadlock. This is a safety feature that we have plugged in." range="11" rwaccess="R/W"/> 
		<bitfield id="FLUSH_2CLR_VALID_EN" width="1" begin="10" end="10" resetval="0x0" description="This bit is modified to support PPTB0, LPT and CP for a feature that we will clear the single IN EP array based on ISO flush or short flush.               '0': Indicate that we do not need to clear IN EP array based on flush conditions.               '1': indicate that we do clear IN EP array based on flush conditions" range="10" rwaccess="R/W"/> 
		<bitfield id="IN_NPKT_PACE_DISABLE" width="1" begin="9" end="9" resetval="0x0" description="Setting this bit to '1' will force the transfer engine state machine to exit the CPL_WAIT state. This is designed to avoid             unexpected deadlock in CPL_WAIT state." range="9" rwaccess="R/W"/> 
		<bitfield id="TRB_CACHE_INVALIDE_EN" width="1" begin="8" end="8" resetval="0x1" description="'0':  Disable internal TRB cache invalidation.              '1':  Enable internal TRB cache invalidation auto detect function. This will allow engine to handle more than 4 TRBs per packet." range="8" rwaccess="R/W"/> 
		<bitfield id="NPKT0_FC_DISABLE" width="1" begin="7" end="7" resetval="0x0" description="'0':  USB3 responses with NumPkts equal to 0 will be treated as a flow control condition.              '1':  USB3 responses with NumPkts equal to 0 will not be treated as a flow control condition." range="7" rwaccess="R/W"/> 
		<bitfield id="EN_BB_PORT_DISABLE" width="1" begin="6" end="6" resetval="0x0" description="'0':  Babble errors will not disable the port.             '1':  Babble errors will disable the auto detect function This will allow engine to handle more than 4 TRBs per packet." range="6" rwaccess="R/W"/> 
		<bitfield id="CPL_PKT_CLR_MASK_EN" width="1" begin="5" end="5" resetval="0x0" description="Enable a function, which clears a mask of an EP on any response of that EP.               '0':  Clear the scheduler mask normally,              '1':  Clear the scheduler mask on each received packet." range="5" rwaccess="R/W"/> 
		<bitfield id="XPORT_CRD_DISABLE" width="1" begin="4" end="4" resetval="0x0" description="This bit is designed to allow XFER engine to do a transfer without checking against the available port credit.              '0':  Advertises accurate buffer credit information to the scheduler.              '1':  Advertises non-zero buffer credits to the scheduler [e.g. never backpressure back on buffer credit information]" range="4" rwaccess="R/W"/> 
		<bitfield id="DISABLE_STALL" width="1" begin="3" end="3" resetval="0x0" description="'0':  Process stalls reported by the DMA engine.               '1':  Ignore stall response received reported by the DMA engine." range="3" rwaccess="R/W"/> 
		<bitfield id="LINK_NOP_SUCESS_EN" width="1" begin="2" end="2" resetval="0x1" description="'0':  Process transaction errors due to CERR count reached or transaction timeout reported by the DMA engine.              '1':  Ignore transaction errors reported by the DMA engine." range="2" rwaccess="R/W"/> 
		<bitfield id="DISABLE_FC_4INRDY" width="1" begin="1" end="1" resetval="0x0" description="'0':  Obey the NPKT0 and EOB flow control.              '1':  Ignore received flow control for implied NRDY [e.g EOB or NPKT=0] for USB3 only" range="1" rwaccess="R/W"/> 
		<bitfield id="IN_TD_PACE_ENABLE" width="1" begin="0" end="0" resetval="0x1" description="'0':  Disable TD pacing for IN endpoint.             '1':  Enable TD pacing for IN endpoints." range="0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_CTRL_SCH_REG1" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_CTRL_SCH_REG1" offset="0x180D4" width="32" description="Host Control Scheduler register. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="SCH_LIMIT_PRDC" width="4" begin="31" end="28" resetval="0x0" description="Host Control Scheduler: sch_limit_prdc" range="31 - 28" rwaccess="R/W"/> 
		<bitfield id="SCH_BLOCK_PENDING_EN" width="1" begin="27" end="27" resetval="0x0" description="Host Control Scheduler: sch_block_pending_en" range="27" rwaccess="R/W"/> 
		<bitfield id="SCH_ASYNC_1PKT_SPLIT_PREF" width="1" begin="26" end="26" resetval="0x0" description="Host Control Scheduler: sch_async_1pkt_split_pref" range="26" rwaccess="R/W"/> 
		<bitfield id="SCH_TT_OVERLAP_ALL_INS" width="1" begin="25" end="25" resetval="0x0" description="Host Control Scheduler: sch_tt_overlap_all_ins" range="25" rwaccess="R/W"/> 
		<bitfield id="SCH_ASYNC_PRDC_CC_DIS" width="1" begin="24" end="24" resetval="0x0" description="Host Control Scheduler: sch_async_prdc_cc_dis" range="24" rwaccess="R/W"/> 
		<bitfield id="SCH_CCLK_PRDC_DONE_CHECK" width="2" begin="23" end="22" resetval="0x0" description="Host Control Scheduler: sch_cclk_prdc_done_check" range="23 - 22" rwaccess="R/W"/> 
		<bitfield id="SCH_STOP_SERVE_NC" width="1" begin="21" end="21" resetval="0x0" description="Host Control Scheduler: Enable Stop serving packets to disabled port" range="21" rwaccess="R/W"/> 
		<bitfield id="TTE_4" width="1" begin="20" end="20" resetval="0x0" description="TTE: Reserved" range="20" rwaccess="R/W"/> 
		<bitfield id="DISABLE_GL_HUB_INT_FIX" width="1" begin="19" end="19" resetval="0x0" description="TTE: disable_gl_hub_int_fix" range="19" rwaccess="R/W"/> 
		<bitfield id="DISABLE_GL_HUB_ISO_FIX" width="1" begin="18" end="18" resetval="0x0" description="TTE: disable_gl_hub_iso_fix " range="18" rwaccess="R/W"/> 
		<bitfield id="TTE_3" width="2" begin="17" end="16" resetval="0x0" description="TTE: Reserved" range="17 - 16" rwaccess="R/W"/> 
		<bitfield id="TTE_2" width="1" begin="15" end="15" resetval="0x1" description="TTE: Disable split error request to TRM on unserved interrupt-INs" range="15" rwaccess="R/W"/> 
		<bitfield id="TTE_1" width="1" begin="14" end="14" resetval="0x0" description="TTE: Disable checking of missed microframes" range="14" rwaccess="R/W"/> 
		<bitfield id="TTE_0" width="1" begin="13" end="13" resetval="0x0" description="TTE: Disable interrupt complete split limit to 3 micro frames" range="13" rwaccess="R/W"/> 
		<bitfield id="CACHE_SIZE_CTRL" width="2" begin="12" end="11" resetval="0x0" description="Command Manager: Context cache enable" range="12 - 11" rwaccess="R/W"/> 
		<bitfield id="MAXEP" width="2" begin="10" end="9" resetval="0x0" description="Command Manager: Allow dynamically setting different max EP allowed. The max EP supported scales with the scratch pad size. This allows driver to allocate small memory sizes if it needed.           0: 32 EPs,           1: 16 EPs,           2: 8 EPs,           3: 4 EPs." range="10 - 9" rwaccess="R/W"/> 
		<bitfield id="SCRATCH_PAD_EN" width="1" begin="8" end="8" resetval="0x1" description="Command Manager: Enables scratch pad function" range="8" rwaccess="R/W"/> 
		<bitfield id="SCH_ASYNC_1PKT_PERF" width="1" begin="7" end="7" resetval="0x0" description="Host Control Scheduler: Disable burst limit '1' for async in presence of another port periodic packets." range="7" rwaccess="R/W"/> 
		<bitfield id="SCH_ASYNC_OUT_MAX_PERF" width="1" begin="6" end="6" resetval="0x0" description="Host Control Scheduler: Enable maximal out performance [may cause unfairness or short term starvation]." range="6" rwaccess="R/W"/> 
		<bitfield id="SCH_SORT_PATTERN" width="2" begin="5" end="4" resetval="0x0" description="Host Control Scheduler: Search priority.           Possible values:           '00': Sort by Interval then ISO over interrupt,           '01','10','11': Experimental sort algorithms." range="5 - 4" rwaccess="R/W"/> 
		<bitfield id="TTE_ENABLE_INTROUT_OVERLAP_STOP" width="1" begin="3" end="3" resetval="0x0" description="Host Control Scheduler: tte_enable_introut_overlap_stop" range="3" rwaccess="R/W"/> 
		<bitfield id="SCH_2" width="1" begin="2" end="2" resetval="0x0" description="Host Control Scheduler: Disable TTE IN overlap" range="2" rwaccess="R/W"/> 
		<bitfield id="TRM_ACTIVE_IN_EP_VALID" width="1" begin="1" end="1" resetval="0x0" description="Host Control Scheduler: Disable TRM active IN EP valid check function" range="1" rwaccess="R/W"/> 
		<bitfield id="POLL_DELAY_DIS" width="1" begin="0" end="0" resetval="0x0" description="Host Control Scheduler: Disable poll delay function" range="0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_CTRL_ODMA_REG" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_CTRL_ODMA_REG" offset="0x180D8" width="32" description="Host Control ODMA. This register contains a number of fields that provide a specific level of configurability for the OUT DMA Engine in the xHCI. This functionality is above and beyond that defined in the xHCI specification. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="RESERVED_RW" width="17" begin="31" end="15" resetval="0x10240" description="Reserved field, RW" range="31 - 15" rwaccess="R/W"/> 
		<bitfield id="SPEED_UP_TIMEOUT" width="1" begin="14" end="14" resetval="0x0" description="'0': Disable the speed up transaction timeout function.            '1': Enable the transaction timeout speed up based on no-connect detected  on a particular port" range="14" rwaccess="R/W"/> 
		<bitfield id="ACK_CRD_CHECK_EN" width="1" begin="13" end="13" resetval="0x1" description="'0': Disable the ACK credit check function             '1':  Enable the ACK credit check function that ODMA provides" range="13" rwaccess="R/W"/> 
		<bitfield id="EP_BASE_TIMER" width="1" begin="12" end="12" resetval="0x1" description="'0':  Employs a 1us   EP Transaction Base Timer. Enables a Timeout range from 16us to 64us            '1':  Employs a 125us EP Transaction Base Timer. Enables a Timeout range from  2ms to 8ms  " range="12" rwaccess="R/W"/> 
		<bitfield id="ODMA_11" width="1" begin="11" end="11" resetval="0x0" description=" Setting this field will prohibit the Set Address Finite State Machine Credit Handshake with TTE Logic" range="11" rwaccess="R/W"/> 
		<bitfield id="EP_TIMER_TICK" width="1" begin="10" end="10" resetval="0x0" description="Setting this field will disable the EP Transaction Timer function when the Command Manager is performing a Stop Endpoint Command or when the LTSSM is in Recovery" range="10" rwaccess="R/W"/> 
		<bitfield id="ODMA_9" width="1" begin="9" end="9" resetval="0x0" description="Setting this field prohibits the Set Address Finite State Machine from being flow controlled when an ACK with NPKT=0 is received in response to the SETUP DP initiated during SET_ADDRESS" range="9" rwaccess="R/W"/> 
		<bitfield id="CLEAR_CNTX_LOCKS" width="1" begin="8" end="8" resetval="0x0" description=" Setting this field generates a pulse that clears the ownership of the context semaphore that is shared between the Out DMA Response and Completion Finite State Machines" range="8" rwaccess="R/W"/> 
		<bitfield id="ODMA_7" width="1" begin="7" end="7" resetval="0x0" description="Setting this field generates a pulse that implicitly returns all of the Out DMA ACK credits on all ports" range="7" rwaccess="R/W"/> 
		<bitfield id="ODMA_SET_ADDR_TO_IDLE" width="1" begin="6" end="6" resetval="0x0" description="Setting this field generates a pulse that returns the Out DMA Set Address Finite State Machine into the IDLE state" range="6" rwaccess="R/W"/> 
		<bitfield id="ODMA_COMPLETION_TO_IDLE" width="1" begin="5" end="5" resetval="0x0" description="Setting this field generates a pulse that returns the Out DMA Completion Finite State Machine into the IDLE state" range="5" rwaccess="R/W"/> 
		<bitfield id="ODMA_RESP_TO_IDLE" width="1" begin="4" end="4" resetval="0x0" description="Setting this field generates a pulse that returns the Out DMA Response Finite State Machine into the IDLE state." range="4" rwaccess="R/W"/> 
		<bitfield id="ODMA_RD_TO_IDLE" width="1" begin="3" end="3" resetval="0x0" description="Setting this field generates a pulse that returns the Out DMA Read Finite State Machine into the IDLE state." range="3" rwaccess="R/W"/> 
		<bitfield id="EP_TRANS_TIMEOUT_LEN" width="2" begin="2" end="1" resetval="0x1" description="Controls the duration of the EP Transaction Timeout [depends on the settings of EP Transaction Base Timer [bit[12]]].             Possible values:             0:  64us [[12]=0]  or  8ms [[12]=1] EP Transaction Timeout,             1:  32us [[12]=0]  or  4ms [[12]=1] EP Transaction Timeout,             2:  16us [[12]=0]  or  2ms [[12]=1] EP Transaction Timeout,             3:  EP Transaction Timer is DISABLED." range="2 - 1" rwaccess="R/W"/> 
		<bitfield id="EP_TRANS_TIMEOUT_EN" width="1" begin="0" end="0" resetval="0x0" description="'0':  Enables the EP Transaction Timeout Function,           '1':  Disables the EP Transaction Timeout Function" range="0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_CTRL_IDMA_REG" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_CTRL_IDMA_REG" offset="0x180DC" width="32" description="Host Control IDMA. This register contains a number of fields that provide a specific level of configurability for the IN DMA Engine in the xHCI. This functionality is above and beyond that defined in the xHCI specification. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="EVENT_FIFO_DIS" width="1" begin="31" end="31" resetval="0x0" description="Used in Event Manager.           '0':  Enable  single ring optimization,           '1':  Disable single ring optimization. " range="31" rwaccess="R/W"/> 
		<bitfield id="EVENT_PRIORITY" width="1" begin="30" end="30" resetval="0x0" description="Used in Event Manager.           '0': CPL Engine priority over XFER Manager,           '1': XFER Manager priority over CPL Engine. " range="30" rwaccess="R/W"/> 
		<bitfield id="DB_EVENT_GEN_EN" width="1" begin="29" end="29" resetval="0x0" description="Used in Doorbell Manager.           '0': Do not generate an event.            '1': Enable an event generated with completion code TRB_CMPL_ENDPOINT_NOT_ENABLED_ERR when a doorbell ring on an EP, which has not running or stop state. " range="29" rwaccess="R/W"/> 
		<bitfield id="IDMA_28" width="1" begin="28" end="28" resetval="0x0" description="'0': Drop  Deferred Ack/Ack TPs. [default] [Bug #5481],           '1': Allow Deferred Ack/Ack TPs." range="28" rwaccess="R/W"/> 
		<bitfield id="IDMA_27" width="1" begin="27" end="27" resetval="0x0" description="'0': Drop  Deferred Stream Reject TPs. [default] [Bug #5434],           '1': Allow Deferred Stream Reject TPs." range="27" rwaccess="R/W"/> 
		<bitfield id="TIMER_TICK1" width="1" begin="26" end="26" resetval="0x0" description="Allows to select the EP Timer Tick to be either the 1us timer tick or the 125us timer tick or the 1ms timer tick or the 4ms timer tick based on the setting of this bit and bit 10 of this register.           The encoding is as follows [bit{[26],[10]}]:           '00'  : 1us   EP Timer Tick,           '01'  : 125us EP Timer Tick,           '10'  : 1ms   EP Timer Tick,           '11'  : 4ms   EP Timer Tick." range="26" rwaccess="R/W"/> 
		<bitfield id="IDMA_25" width="1" begin="25" end="25" resetval="0x0" description="Flush TTE Address FIFO" range="25" rwaccess="R/W"/> 
		<bitfield id="IDMA_24" width="1" begin="24" end="24" resetval="0x0" description="'0': Flush an Async Address FIFO,           '1': Flush a Periodic Address FIFO." range="24" rwaccess="R/W"/> 
		<bitfield id="IDMA_23_19" width="5" begin="23" end="19" resetval="0x0" description="Port Number of Address FIFO to Flush." range="23 - 19" rwaccess="R/W"/> 
		<bitfield id="IDMA_ADDR_FIFO_FLUSH_BIT" width="1" begin="18" end="18" resetval="0x0" description="Flush IDMA Address FIFO strobe." range="18" rwaccess="R/W"/> 
		<bitfield id="IDMA_17" width="1" begin="17" end="17" resetval="0x0" description="'0': All ACK ACKs are put in the Periodic Header FIFO in XPPE,           '1': Only Periodic ACK ACKs are put in the Periodic Header FIFO in XPPE." range="17" rwaccess="R/W"/> 
		<bitfield id="IDMA_PTR_BUF_ROOM_SET" width="1" begin="16" end="16" resetval="0x0" description="'0': Default IDMA Pointer Buffer Room to 8 : Requires strobe of host_ctrl_idma_reg[3][idma_ptr_buf_room_restore_pulse] to take effect,           '1': Default IDMA Pointer Buffer Room to 4 : Requires strobe of host_ctrl_idma_reg[3][idma_ptr_buf_room_restore_pulse] to take effect." range="16" rwaccess="R/W"/> 
		<bitfield id="IDMA_15" width="1" begin="15" end="15" resetval="0x0" description="Disable drop spurious DP when i_npkt==0" range="15" rwaccess="R/W"/> 
		<bitfield id="IDMA_14" width="1" begin="14" end="14" resetval="0x0" description="Disable drop spurious DP when EP is in flow conrtrol." range="14" rwaccess="R/W"/> 
		<bitfield id="IDMA_13" width="1" begin="13" end="13" resetval="0x0" description="Disable dropping all deferred packets on ISO Endpoints." range="13" rwaccess="R/W"/> 
		<bitfield id="SPEED_UP_TIMEOUT" width="1" begin="12" end="12" resetval="0x0" description="'0': Disable the speed up transaction timeout function.             '1': Enable the transaction timeout speed up based on no-connect detected  on a particular port" range="12" rwaccess="R/W"/> 
		<bitfield id="SEQ_NUM_ADJ_ON_NRDY" width="1" begin="11" end="11" resetval="0x0" description="'0': Enable  sequence number adjustment on NRDY received for USB3 when we are expecting a response.             '1': Enable sequence number adjustment on any NRDY received for USB3. " range="11" rwaccess="R/W"/> 
		<bitfield id="TIMER_TICK0" width="1" begin="10" end="10" resetval="0x1" description="'0':  Employs a 1us EP Transaction Base Timer. Enables a Timeout range from 16us to 64us.             '1':  Employs a 125us EP Transaction Base Timer. Enables a Timeout range from  2ms to 8ms." range="10" rwaccess="R/W"/> 
		<bitfield id="IDMA_9" width="1" begin="9" end="9" resetval="0x0" description="Setting this field will disable the EP Transaction Timer function when the Command Manager is performing a Stop Endpoint Command or when the LTSSM is in Recovery" range="9" rwaccess="R/W"/> 
		<bitfield id="COMPLIANCE_ISO_ENABLE" width="1" begin="8" end="8" resetval="0x0" description="Setting this field enables the Compliance Isochronous mode of operation. It bounds the upper limit on the NPKT field for all ISO Acknowledgments generated from the Host to the value of 2. " range="8" rwaccess="R/W"/> 
		<bitfield id="CLEAR_CNTX_LOCKS" width="1" begin="7" end="7" resetval="0x0" description="Setting this field generates a pulse that clears the ownership of the context semaphore that is shared between the IN DMA Acknowledge and Data Mover Finite State Machines" range="7" rwaccess="R/W"/> 
		<bitfield id="DM_PST_CLR_PULSE" width="1" begin="6" end="6" resetval="0x0" description=" Setting this field generates a pulse that returns the IN DMA Data Mover Finite State Machine into the IDLE state" range="6" rwaccess="R/W"/> 
		<bitfield id="ACK_PST_CLR_PULSE" width="1" begin="5" end="5" resetval="0x0" description="Setting this field generates a pulse that returns the IN DMA Acknowledge Finite State Machine into the IDLE state." range="5" rwaccess="R/W"/> 
		<bitfield id="RESTORE_RDP_CREDITS_PULSE" width="1" begin="4" end="4" resetval="0x0" description="Setting this field generates a pulse that implicitly returns all of the IN DMA Data Packet credits on all ports." range="4" rwaccess="R/W"/> 
		<bitfield id="IDMA_PTR_BUF_ROOM_RESTORE_PULSE" width="1" begin="3" end="3" resetval="0x0" description="Setting this field generates a pulse that clears all the Read and Write Pointers associated with the various DMA Address FIFOs causing them to appear empty" range="3" rwaccess="R/W"/> 
		<bitfield id="EP_TIMER_TICK" width="2" begin="2" end="1" resetval="0x1" description="'00': 1us/125us/1ms/4ms  EP Timer Tick           '01': 2us/250us/2ms/8ms  EP Timer Tick           '10': 4us/500us/4ms/16ms EP Timer Tick           '11': Disabled  EP Timer Tick" range="2 - 1" rwaccess="R/W"/> 
		<bitfield id="EP_TRANS_TIMEOUT_EN" width="1" begin="0" end="0" resetval="0x0" description="'0':  Enables the EP Transaction Timeout Function,           '1':  Disables the EP Transaction Timeout Function." range="0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_CTRL_PORT_CTRL" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_CTRL_PORT_CTRL" offset="0x180E0" width="32" description="Global Port Control. Specific control register for port power management etc. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="RESERVED_R" width="12" begin="31" end="20" resetval="0x0" description="Reserved field, RO" range="31 - 20" rwaccess="R"/> 
		<bitfield id="LOCK_HEADER_DATA_EN" width="1" begin="19" end="19" resetval="0x0" description="lock_header_data_en" range="19" rwaccess="R/W"/> 
		<bitfield id="RD_WR_ADDR_CONFLICT_EN" width="1" begin="18" end="18" resetval="0x0" description="rd_wr_addr_conflict_en" range="18" rwaccess="R/W"/> 
		<bitfield id="OVERFLOW_SYS_ERR_EN" width="1" begin="17" end="17" resetval="0x0" description="'0': Disable error generation.             '1': Enable to generate a host system error when receive buffer overflow on any ports." range="17" rwaccess="R/W"/> 
		<bitfield id="HBUF_WATER_MARK_REG_CCLK" width="4" begin="16" end="13" resetval="0x3" description="This 4-bit register is designed as a water mark for when to turn on link FC credit return disable. This is used in xhc_prot_rppe.v for receive buffer management. We have 8 header credit in per port receive buffer. When buffer received enough packets, it will need to disable the link credit FC return in order to balance the processing delay within DMA engine.           0: Always enable link credit FC return,          1-8: Water mark value. " range="16 - 13" rwaccess="R/W"/> 
		<bitfield id="ENABLE_ITP_XMT" width="1" begin="12" end="12" resetval="0x1" description="Bit[s] of this field are designated to individually control each USB3 port to enable ITP transmission.               0: Do not Transmit any ITP.              1: Transmit ITP" range="12" rwaccess="R/W"/> 
		<bitfield id="PCIE_GASKET" width="1" begin="11" end="11" resetval="0x1" description="Reserved to '1'. Note: An internal register bit for PCIe gasket. It is only valid for value of '1'" range="11" rwaccess="R/W"/> 
		<bitfield id="RESERVED_RW" width="2" begin="10" end="9" resetval="0x0" description="Reserved field, RW" range="10 - 9" rwaccess="R/W"/> 
		<bitfield id="TEST_BUS_SEL_CTRL_BITS" width="5" begin="8" end="4" resetval="0x0" description="Test bus select control bits.           0: Clock, Reset and Power management Debug bus             1: PCIe PIPE Bus,           2: USB3 PIPE Bus,           3: USB2 UTMI Bus,           4: TRM Debug Bus,           5: Scheduler Debug Bus,           6: ODMA Debug Bus,           7: IDMA Debug Bus." range="8 - 4" rwaccess="R/W"/> 
		<bitfield id="RES1" width="4" begin="3" end="0" resetval="0x15" description="Reserved to 1 [reserved for PP]" range="3 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_AUX_CTRL_REG" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_AUX_CTRL_REG" offset="0x18100" width="32" description="AUX Reset Control. Reset Control register. This register may be read from or written to at any time, including whilst the CNR field in the USBSTS register is high. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="RESERVED_R" width="1" begin="31" end="31" resetval="0x0" description="Reserved field, RO This field should not be modified by software." range="31" rwaccess="R"/> 
		<bitfield id="PERST_FILTER_DIS" width="1" begin="30" end="30" resetval="0x0" description="reserved. perst_filter_dis This field should not be modified by software." range="30" rwaccess="R/W"/> 
		<bitfield id="PCIE_PHY_RST_SEL" width="1" begin="29" end="29" resetval="0x1" description="This bit enables AUX reset control module to assert the pcie_phy_reset either from PIPE reset or from Aux power up reset only. The pcie_phy_reset is an internal signal for CB PHY only.            '0': Aux PowerUp Reset,            '1': PIPE PHY reset This field should not be modified by software." range="29" rwaccess="R/W"/> 
		<bitfield id="PERST_2PWDOWN_EN" width="1" begin="28" end="28" resetval="0x0" description="This bit enables the AUX PM control module to assert mac_phy_powerdown state to P1 as soon as PERST# is deasserted. If disabled, then the AUX PM control state will follow its nature cause to determine the power down states for PIPE.           '0': disabled,           '1': enabled. This field should not be modified by software." range="28" rwaccess="R/W"/> 
		<bitfield id="PERST_4MAIN_EN" width="1" begin="27" end="27" resetval="0x1" description=" This bit enables the internal reset control module to immediately start a reset assertion process when PERST# is deasserted without waiting for PCIe device is out of D3 state. This is for warm reboot only. The PERST# can still have impact as a reset if the xHC is in D3 and allow PERST# as a powerup reset bit set.           '0: disabled             '1: enabled PERST# as an immediately reset This field should not be modified by software." range="27" rwaccess="R/W"/> 
		<bitfield id="IGNORE_PERST_EN" width="1" begin="26" end="26" resetval="0x0" description="This bit disables the PERST# to cause an internal reset.           '0: enable             '1: disable the PERST# This field should not be modified by software." range="26" rwaccess="R/W"/> 
		<bitfield id="FAST_SIM_RST" width="1" begin="25" end="25" resetval="0x0" description=" This bit enables a speed up function or AUX reset at startup. Normally we wait for 20ms after AUX power level has reached. When in speed up mode, we wait only around 3-4us.           '0: Disabled,           '1: Enabled for fast sim. This field should not be modified by software." range="25" rwaccess="R/W"/> 
		<bitfield id="IGNORE_LINKDOWN_RST_4UPORT" width="1" begin="24" end="24" resetval="0x1" description=" When set to '1' ignore a port reset that is caused by a USB port link went down. This field should not be modified by software." range="24" rwaccess="R/W"/> 
		<bitfield id="IGNORE_MAIN_PWRUP_2USB_PHY" width="1" begin="23" end="23" resetval="0x0" description="When set to '1' ignore main powerup reset to USB PHY PIPE reset This field should not be modified by software." range="23" rwaccess="R/W"/> 
		<bitfield id="COLD_RST_N_PULSE" width="1" begin="22" end="22" resetval="0x0" description="When set to '1' allow software to fire a cold reset to USB port logic This field should not be modified by software." range="22" rwaccess="R/W"/> 
		<bitfield id="IGNORE_HCRESET_4USB2" width="1" begin="21" end="21" resetval="0x0" description=" When set to '1' ignore HC reset to reset the USB2 Port logic This field should not be modified by software." range="21" rwaccess="R/W"/> 
		<bitfield id="IGNORE_HC_WARM_RST_4UPHY_PON" width="1" begin="20" end="20" resetval="0x1" description=" When set to '1' ignore HC reset to the USB PHY power-on reset This field should not be modified by software." range="20" rwaccess="R/W"/> 
		<bitfield id="IGNORE_MAIN_PWRUP_HC_2PCORE" width="1" begin="19" end="19" resetval="0x0" description=" When set to '1' enable the HC liked reset caused by PCIe link down condition detected. If PCIe link down detected, a link down reset will always be fired to PCIe core. This field should not be modified by software." range="19" rwaccess="R/W"/> 
		<bitfield id="EEPROM_LOAD_ON_MAIN" width="1" begin="18" end="18" resetval="0x1" description=" When set to '1' enable EEPROM reload on every main power-up This field should not be modified by software." range="18" rwaccess="R/W"/> 
		<bitfield id="IGNORE_HC_RST_2PCIE_PHY" width="1" begin="17" end="17" resetval="0x1" description=" When set to '1' ignore HC reset to the PCIe PHY PIPE reset This field should not be modified by software." range="17" rwaccess="R/W"/> 
		<bitfield id="IGNORE_MAC_PHY_PIPE_RST" width="1" begin="16" end="16" resetval="0x1" description=" When set to '1' ignore the LTSSM of USB link state transition caused reset to USB PHY PIPE reset This field should not be modified by software." range="16" rwaccess="R/W"/> 
		<bitfield id="IGNORE_WARM_RST_4UPHY_PON" width="1" begin="15" end="15" resetval="0x1" description=" When set to '1' ignore warm reset of the portSC to  the USB PHY power on reset This field should not be modified by software." range="15" rwaccess="R/W"/> 
		<bitfield id="PCIE_LINKDOWN_RST_EN" width="1" begin="14" end="14" resetval="0x1" description=" When set to '1' allow PCIe link down to cause a reset to the rest of the core as the HC reset would. This field should not be modified by software." range="14" rwaccess="R/W"/> 
		<bitfield id="IGNORE_HOT_RST_4U3PORT" width="1" begin="13" end="13" resetval="0x0" description="When set to '1' ignore hot reset to the USB3 port logic This field should not be modified by software." range="13" rwaccess="R/W"/> 
		<bitfield id="IGNORE_WARM_RST_4U3PORT" width="1" begin="12" end="12" resetval="0x0" description=" When set to '1' ignore warm reset to the USB3 port logic This field should not be modified by software." range="12" rwaccess="R/W"/> 
		<bitfield id="IGNORE_MAIN_PWRUP_4U3PORT" width="1" begin="11" end="11" resetval="0x0" description=" When set to '1' ignore main power up reset to USB3 port logic This field should not be modified by software." range="11" rwaccess="R/W"/> 
		<bitfield id="IGNORE_MAIN_PWRUP_4U2PORT" width="1" begin="10" end="10" resetval="0x0" description=" When set to '1' ignore main power up reset to USB2 port logic This field should not be modified by software." range="10" rwaccess="R/W"/> 
		<bitfield id="IGNORE_MAIN_PWRUP_2PCORE" width="1" begin="9" end="9" resetval="0x0" description=" When set to '1' ignore main power up reset to PCIe core This field should not be modified by software." range="9" rwaccess="R/W"/> 
		<bitfield id="IGNORE_MAIN_PWRUP_2PCIE_PHY" width="1" begin="8" end="8" resetval="0x0" description="When set to '1' ignore main power up reset to PCIe PHY This field should not be modified by software." range="8" rwaccess="R/W"/> 
		<bitfield id="IGNORE_HC_WARM_RST_2USB_PHY" width="1" begin="7" end="7" resetval="0x1" description="When set to '1' ignore HC reset to the USB PHY This field should not be modified by software." range="7" rwaccess="R/W"/> 
		<bitfield id="IGNORE_WARM_RST_2USB_PHY" width="1" begin="6" end="6" resetval="0x1" description=" When set to '1' ignore warm reset to the USB PHY This field should not be modified by software." range="6" rwaccess="R/W"/> 
		<bitfield id="IGNORE_MAIN_PWRUP_RST" width="1" begin="5" end="5" resetval="0x1" description="When set to '1', it enables the reset isolation function that we have added during HC reset or Per port reset. This field should not be modified by software." range="5" rwaccess="R/W"/> 
		<bitfield id="PM_CTRL_MAIN_RST_EN" width="1" begin="4" end="4" resetval="0x1" description="When set to '1' allow main power off condition to trigger a main power domain reset This field should not be modified by software." range="4" rwaccess="R/W"/> 
		<bitfield id="IGNORE_PERST_4MAIN_PWRUP" width="1" begin="3" end="3" resetval="0x0" description=" When set to '1' ignore waiting for PERST# deassertion during main power show down. This field should not be modified by software." range="3" rwaccess="R/W"/> 
		<bitfield id="IGNORE_PERST_4FD_RST" width="1" begin="2" end="2" resetval="0x1" description="When fundamental reset is asserted during AUX power up, if this bit is set, then we will ignore PERST# such that purely wait for timeout to deassert fundamental reset. This field should not be modified by software." range="2" rwaccess="R/W"/> 
		<bitfield id="FORCE_FD_RST" width="2" begin="1" end="0" resetval="0x0" description="Writing to this field a value of 2'b11 will cause a fundamental reset. The only valid write values are 2'b11 or 2'b00 This field should not be modified by software." range="1 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_BW_OV_SS_REG" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_BW_OV_SS_REG" offset="0x18104" width="32" description="Super Speed Bandwidth Overload. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="RESERVED_R" width="8" begin="31" end="24" resetval="0x0" description="Reserved field, RO" range="31 - 24" rwaccess="R"/> 
		<bitfield id="MAX_TT_BW" width="12" begin="23" end="12" resetval="0x1188" description="Max. TT BW allowed. See white paper" range="23 - 12" rwaccess="R/W"/> 
		<bitfield id="SS_BW_CALC" width="12" begin="11" end="0" resetval="0x8" description="BW calculation: Overhead per packet for SS BW calculations. See white paper. " range="11 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_BW_OV_HS_REG" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_BW_OV_HS_REG" offset="0x18108" width="32" description="High Speed TT Bandwidth Overload. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="RESERVED_R" width="8" begin="31" end="24" resetval="0x0" description="Reserved field, RO" range="31 - 24" rwaccess="R"/> 
		<bitfield id="BW_OV_HS" width="12" begin="23" end="12" resetval="0x26" description="BW calculation: Overhead per packet for HS-TT BW calculations. See white paper. " range="23 - 12" rwaccess="R/W"/> 
		<bitfield id="BW_OV_HS_TT" width="12" begin="11" end="0" resetval="0x31" description="BW calculation: Overhead per packet for HS BW calculations. See white paper. " range="11 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_BW_OV_FS_LS_REG" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_BW_OV_FS_LS_REG" offset="0x1810C" width="32" description="Bandwidth Overload Full and Low Speed. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="RESERVED_R" width="8" begin="31" end="24" resetval="0x0" description="Reserved field, RO" range="31 - 24" rwaccess="R"/> 
		<bitfield id="FS_BW_CALC" width="12" begin="23" end="12" resetval="0x20" description=" BW calculation: Overhead per packet for FS BW calculations. See white paper. " range="23 - 12" rwaccess="R/W"/> 
		<bitfield id="LS_BW_CALC" width="12" begin="11" end="0" resetval="0x128" description="BW calculation: Overhead per packet for LS BW calculations. See white paper. " range="11 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_BW_OV_SYS_REG" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_BW_OV_SYS_REG" offset="0x18110" width="32" description="System Bandwidth Overload. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="RESERVED_R" width="8" begin="31" end="24" resetval="0x0" description="Reserved field, RO" range="31 - 24" rwaccess="R"/> 
		<bitfield id="BW_OV_SYS_TT" width="12" begin="23" end="12" resetval="0x50" description="BW calculation: Overhead per TT packet for System BW calculations. See white paper. " range="23 - 12" rwaccess="R/W"/> 
		<bitfield id="SYS_BW_CALC" width="12" begin="11" end="0" resetval="0x16" description=" BW calculation: Overhead per packet for System BW calculations. See white paper. " range="11 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_CTRL_SCH_ASYNC_DELAY_REG" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_CTRL_SCH_ASYNC_DELAY_REG" offset="0x18114" width="32" description="Scheduler Async Delay. Global defaults for inserting delays between packets in the scheduler for asynchronous types. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="RESERVED_R" width="12" begin="31" end="20" resetval="0x0" description="Reserved field, RO" range="31 - 20" rwaccess="R"/> 
		<bitfield id="HS_BULK_DELAY_EN" width="1" begin="19" end="19" resetval="0x0" description="High-Speed Bulk Delay Enable" range="19" rwaccess="R/W"/> 
		<bitfield id="HS_BULK_DELAY_DEF" width="3" begin="18" end="16" resetval="0x0" description="High-Speed Bulk Delay Default [0=125us,1=250us,2=500us,3=1ms,] " range="18 - 16" rwaccess="R/W"/> 
		<bitfield id="FS_BULK_DELAY_EN" width="1" begin="15" end="15" resetval="0x0" description="Full-Speed Bulk Delay Enable" range="15" rwaccess="R/W"/> 
		<bitfield id="FS_BULK_DELAY_DEF" width="3" begin="14" end="12" resetval="0x0" description="Full-Speed Bulk Delay Default [0=125us,1=250us,2=500us,3=1ms,] " range="14 - 12" rwaccess="R/W"/> 
		<bitfield id="HS_CTRL_DELAY_EN" width="1" begin="11" end="11" resetval="0x0" description="High-Speed Control Delay Enable" range="11" rwaccess="R/W"/> 
		<bitfield id="HS_CTRL_DELAY_DEF" width="3" begin="10" end="8" resetval="0x0" description="High-Speed Control Delay Default [0=125us,1=250us,2=500us,3=1ms,] " range="10 - 8" rwaccess="R/W"/> 
		<bitfield id="FS_CTRL_DELAY_EN" width="1" begin="7" end="7" resetval="0x0" description="Full-Speed Control Delay Enable" range="7" rwaccess="R/W"/> 
		<bitfield id="FS_CTRL_DELAY_DEF" width="3" begin="6" end="4" resetval="0x0" description="Full-Speed Control Default [0=125us,1=250us,2=500us,3=1ms,] " range="6 - 4" rwaccess="R/W"/> 
		<bitfield id="LS_CTRL_DELAY_EN" width="1" begin="3" end="3" resetval="0x0" description="Low-Speed Control Delay Enable" range="3" rwaccess="R/W"/> 
		<bitfield id="LS_CTRL_DELAY_DEF" width="3" begin="2" end="0" resetval="0x0" description="Low-Speed Control Delay Default [0=125us,1=250us,2=500us,3=1ms,] " range="2 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_UPORTS_PON_RST_REG" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_UPORTS_PON_RST_REG" offset="0x18118" width="32" description="AUX Power PHY Reset. This register may be read from or written to at any time, including whilst the CNR field in the USBSTS register is high. Allow a USB PHY reset being issued by software. Writing to this register with bit set to 1 will reset the USB PHY that is connected to the port. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="RESERVED_R" width="28" begin="31" end="4" resetval="0x0" description="Reserved field, RO" range="31 - 4" rwaccess="R"/> 
		<bitfield id="USB_PHY_PORT_NUM" width="4" begin="3" end="0" resetval="0x0" description="Indicates the port number of the USB PHY" range="3 - 0" rwaccess="W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_CTRL_TRM_REG3" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_CTRL_TRM_REG3" offset="0x1811C" width="32" description="Host Control Transfer Manager (TRM) register. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="RESERVED_R" width="16" begin="31" end="16" resetval="0x0" description="Reserved field, RO" range="31 - 16" rwaccess="R"/> 
		<bitfield id="RESERVED_RW" width="7" begin="15" end="9" resetval="0x0" description="Reserved field, RW" range="15 - 9" rwaccess="R/W"/> 
		<bitfield id="CPL_EXTRA_DB_RANG_EN" width="1" begin="8" end="8" resetval="0x0" description="cpl_extra_db_rang_en" range="8" rwaccess="R/W"/> 
		<bitfield id="CFG_EN_MISS_DOUBLE" width="1" begin="7" end="7" resetval="0x1" description="'0': Do not enable cache control to double fetch on miss.               '1': Enable cache control to double fetch on miss." range="7" rwaccess="R/W"/> 
		<bitfield id="CFG_EN_DEFER_BC" width="1" begin="6" end="6" resetval="0x1" description="'0': Disable cache control to defer misses on bulk/control EPs.               '1': Enable cache control to defer misses on bulk/control EPs." range="6" rwaccess="R/W"/> 
		<bitfield id="CFG_EN_LOOK_POS" width="2" begin="5" end="4" resetval="0x2" description="Enable cache control trigger position lookahead." range="5 - 4" rwaccess="R/W"/> 
		<bitfield id="CFG_CACHE_DEBUG" width="1" begin="3" end="3" resetval="0x0" description="cfg_cache_debug. Available when TRB_CACHE_DEBUG_EN is defined" range="3" rwaccess="R/W"/> 
		<bitfield id="CFG_EN_HIT_INVALID" width="1" begin="2" end="2" resetval="0x1" description="'0': Disable cache control hit invalid with invalid CS,              '1': Enable cache control hit invalid with invalid CS." range="2" rwaccess="R/W"/> 
		<bitfield id="CFG_EN_LOOKAHEAD" width="1" begin="1" end="1" resetval="0x1" description="'0': Disable cache control lookahead,               '1': Enable cache control lookahead." range="1" rwaccess="R/W"/> 
		<bitfield id="CFG_EN_CACHE" width="1" begin="0" end="0" resetval="0x1" description="'0': Disable cache control,               '1': Enable cache control." range="0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_AUX_CTRL_REG1" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_AUX_CTRL_REG1" offset="0x18120" width="32" description=" AUX Power Management Control 1. This register may be read from or written to at any time, including whilst the CNR field in the USBSTS register is high. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="D3_HOT_PME_EN" width="1" begin="31" end="31" resetval="0x1" description="d3_hot_pme_en" range="31" rwaccess="R/W"/> 
		<bitfield id="LOW_PWR_CCLK_GATE_EN" width="1" begin="30" end="30" resetval="0x0" description="This bit enables gate-off the core clock when AUX PM control is in low power state.             '0': disable this function,             '1': enabled to gate off the core clock. " range="30" rwaccess="R/W"/> 
		<bitfield id="EXTEND_PHYSTATUS_EN" width="1" begin="29" end="29" resetval="0x0" description=" This bit is there for a bug fix where we need to ensure that phystatus did not get lost during the rate change where clock switch logic takes some cycles to complete. such that the PCie's core clock is at half of the PCIe PHY pclk.             '0': not extended phystatus,             '1': extended phystatus assertion " range="29" rwaccess="R/W"/> 
		<bitfield id="DIRECT_RATE_PASS_EN" width="1" begin="28" end="28" resetval="0x0" description=" Disable the overwrite function in AUX PM control module for its initiated rate change.             '0': allows AUX PM control module to initiate its PCIE rate change when it needs to enable P2 overwrite P1 function.            '1': AUX PM control module will not alter the PCIe rate change function . " range="28" rwaccess="R/W"/> 
		<bitfield id="USE_PERST_4FD_RST" width="1" begin="27" end="27" resetval="0x0" description=" Enable AUX reset module to treat every PERST# as a fundamental reset            '0': disabled,            '1': enabled. This field should not be modified by software" range="27" rwaccess="R/W"/> 
		<bitfield id="POWERDOWN_P1_EN" width="1" begin="26" end="26" resetval="0x0" description=" This is a test/control bit. This bit is designed to control the lowest powerdown state of the PCIe that AUX PM module signaled to PIPE is P1.             '0': drive as normal operation.             '1': always drive to P1 instead of P2 " range="26" rwaccess="R/W"/> 
		<bitfield id="SET_SSV_EN" width="1" begin="25" end="25" resetval="0x0" description=" When set to '1' set the SSV flag. " range="25" rwaccess="R/W"/> 
		<bitfield id="CLR_SSV_EN" width="1" begin="24" end="24" resetval="0x0" description=" When set to '1' clear the SSV flag " range="24" rwaccess="R/W"/> 
		<bitfield id="SR_CMD_SAVE_EN" width="1" begin="23" end="23" resetval="0x1" description=" A debug control bit, which is used to enable save'n'restore function.           '0': disabled.           '1': enabled " range="23" rwaccess="R/W"/> 
		<bitfield id="RESERVED" width="1" begin="22" end="22" resetval="0x0" description="reserved, RW" range="22" rwaccess="N/A"/> 
		<bitfield id="CLR_SAVE_FLAG" width="1" begin="21" end="21" resetval="0x0" description="This bit sets the internal save_restore_enable flag to '0' when written to '1'. Software is expected to clear this bit after it wrote this bit to '1'. This is for test/debug purpose of the save'n'restore function.             '0': allows regular save'n'restore function to proceed.            '1': clear the internal flag save_restore_enable" range="21" rwaccess="R/W"/> 
		<bitfield id="CFG_PCIE_TXREG_PD" width="1" begin="20" end="20" resetval="0x0" description="cfg_pcie_txreg_pd" range="20" rwaccess="R/W"/> 
		<bitfield id="CFG_IOB_DRIVESTRENGTH" width="2" begin="19" end="18" resetval="0x3" description=" Controls the drive strength of the IO buffer. Set default IO Strength to 8ma" range="19 - 18" rwaccess="R/W"/> 
		<bitfield id="CFG_USB_P2_EN" width="1" begin="17" end="17" resetval="0x0" description=" Cfg_Usb_p2_en" range="17" rwaccess="R/W"/> 
		<bitfield id="CFG_CLK_GATE_DIS" width="1" begin="16" end="16" resetval="0x0" description="Cfg_clk_gate_dis" range="16" rwaccess="R/W"/> 
		<bitfield id="CFG_RXDET_P3_EN" width="1" begin="15" end="15" resetval="0x0" description=" Cfg_rxdet_p3_en. Enable rxdet U3 mode" range="15" rwaccess="R/W"/> 
		<bitfield id="CFG_PIPE_RST_EN" width="1" begin="14" end="14" resetval="0x0" description="Cfg_pipe_rst_en_sync." range="14" rwaccess="R/W"/> 
		<bitfield id="ELECIDLE_MASK_EN" width="1" begin="13" end="13" resetval="0x1" description="This bit enables the AUX PM control state machine to take over txelecidle signal of the PIPE during several special conditions.              '0': Disable the mask.             '1': Allow mask to mac_phy_txeleidle of PCIe core. " range="13" rwaccess="R/W"/> 
		<bitfield id="PME_STATUS_EN" width="1" begin="12" end="12" resetval="0x1" description="This bit enables the PCIe status function.             '0': xHC as a PCIe device will not generate any PME nor report PME status.            '1': xHC as a PCIe device will generate the PME message. " range="12" rwaccess="R/W"/> 
		<bitfield id="ISOLATION_EN" width="1" begin="11" end="11" resetval="0x1" description="When set to '1' enable isolation function for dual power zone.  This field should not be modified by software" range="11" rwaccess="R/W"/> 
		<bitfield id="NEW_OW_EN" width="1" begin="10" end="10" resetval="0x0" description="This bit allows the AUX PM control module to decide whether we entered into P2 overwrite condition based on the power down state of the PCIe core is at P1 or the LTSSM of  PCIe core is in L1. What we used to have is based on P1 of the PCIe core mac_phy_powerdown signal. This is not correct because LTSSM can be in RX detect to result a P1 of power down state. To preserve our old function, we add this chicken bit.             '0': P2Pverwrite function based on PCIe core PIPE mac_phy_powerdown is in P1,            '1': P2OverWrite function based on LTSSM in L1 This field should not be modified by software" range="10" rwaccess="R/W"/> 
		<bitfield id="CCLK_GATE_DISABLE" width="1" begin="9" end="9" resetval="0x0" description="When set to '1' disable core clock gating based on low power state entered." range="9" rwaccess="R/W"/> 
		<bitfield id="PHYSTATUS_FALL_TIMEOUT_EN" width="1" begin="8" end="8" resetval="0x1" description="When set to '1' enable PHY status timeout function, which is designed to cover the PCIePHY issue that we may have not be able to detect the PHY status toggle. This is a safety feature in case we have gotten into a deadlock during PHY status acknowledgement. " range="8" rwaccess="R/W"/> 
		<bitfield id="IGNORE_AUX_PME_EN" width="1" begin="7" end="7" resetval="0x1" description="When set to '1' ignore the aux_pm_en reg from PCIe core to continue the remote wake/clock switching support" range="7" rwaccess="R/W"/> 
		<bitfield id="P2_OVERWRITE_P1_EN" width="1" begin="6" end="6" resetval="0x0" description=" When set to '1' enable P2 overwrite P1 when PCIe core has indicated the transition from P0 to P1. This is to enable entering the even lower power state. " range="6" rwaccess="R/W"/> 
		<bitfield id="ENABLE_P2_ENTER" width="1" begin="5" end="5" resetval="0x1" description="When set to '1' enables the remote wake function by allowing P2 clock/switching and P2 entering" range="5" rwaccess="R/W"/> 
		<bitfield id="PM_STATE" width="4" begin="4" end="1" resetval="0x0" description="Forced power management state can be set here. States encoding:           PM_ACTIVE                    : 4'h0.           REQ_CLK_SWITCH_2AUX          : 4'h1.           DRIVE_PHY_2P2                : 4'h2.           WAIT_4WAKE                   : 4'h3.           WAIT_4PERST_DSRT             : 4'h4.           RATE_CHANGE_2FAST            : 4'h5.           REQ_CLK_SWITCH_2PCLK         : 4'h6.           PM_EXIT                      : 4'h7.           WAIT_4PCLK                   : 4'h8.           DRIVE_PHY_STATUS             : 4'h9.           PM_IDLE                      : 4'hA.           PWRUP_REQ_CLK_SWITCH_2PCLK   : 4'hB.           RATE_CHANGE_2SLOW            : 4'hC.           WAIT_4LTSSM_WAIT_DONE        : 4'hD.           WAIT_4CLK_GATE               : 4'hE.           IN_P2_TIMEOUT                : 4'hF.           Those bits have also another functionality:           [1]: always_wake_n_en,           [2]: timeout_16ms_en,           [3]: always_force_clk_sw_en,           ![4]: rc_p2_exit_en" range="4 - 1" rwaccess="R/W"/> 
		<bitfield id="FORCE_PM_STATE" width="1" begin="0" end="0" resetval="0x0" description="When set to '1' force PM state to go to the state indicated in field pm_state [bits [4:1]]. This bit is the force PM state register, it is a pulse only [read by software will always give '0']" range="0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_CTRL_WATERMARK_REG" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_CTRL_WATERMARK_REG" offset="0x18128" width="32" description=" Port Watermark. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="RBUF_WATER_MARK" width="16" begin="31" end="16" resetval="0x128" description=" RBUF water mark" range="31 - 16" rwaccess="R/W"/> 
		<bitfield id="XBUF_WATER_MARK" width="16" begin="15" end="0" resetval="0x128" description=" XBUF water mark" range="15 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_CTRL_PORT_LINK_REG" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_CTRL_PORT_LINK_REG" offset="0x1812C" width="32" description="SuperSpeed Port Link Control. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="FORCE_LTSSM_STATE" width="5" begin="31" end="27" resetval="0x3" description="LTSSM state to be forced. This value is for test purpose only.           Setting bit 4 enables: cfg_relax_rxpolarity_en.           Setting bit 3 enables: cfg_relax_linkfunc_en.          Setting bit 2 enables: cfg_link_func_en. " range="31 - 27" rwaccess="R/W"/> 
		<bitfield id="FORCE_LTSSM" width="1" begin="26" end="26" resetval="0x0" description="'0':  Normal operation mode,            '1':  Direct link to a specific state specified by force_ltssm_state field [bits [31:27]].             This bit is for test purpose only.  It shall be written '0' in normal operation mode. " range="26" rwaccess="R/W"/> 
		<bitfield id="FORCE_LTSSM_U0" width="1" begin="25" end="25" resetval="0x0" description="'0':  Normal operation mode,            '1':  Direct link to U0            This bit is for test purpose only.  It shall be written '0' in normal operation mode. " range="25" rwaccess="R/W"/> 
		<bitfield id="FORCE_COMP_PATTERN" width="4" begin="24" end="21" resetval="0x0" description="Compliance pattern to be forced to enter compliance mode. This value is for test purpose only. " range="24 - 21" rwaccess="R/W"/> 
		<bitfield id="LINK_ERR_CNT_SLV_EN" width="1" begin="20" end="20" resetval="0x0" description="link_err_cnt_slv_en" range="20" rwaccess="R/W"/> 
		<bitfield id="DBG_MODE_SEL" width="3" begin="19" end="17" resetval="0x1" description="Debug mode select:           bit[0]: cfg_port_init_ctrl [if set to '1' tPortConfiguration less than 21us],           bit[1]: cfg_relax_ts2_en,           bit[2]: cfg_relax_lfps_en." range="19 - 17" rwaccess="R/W"/> 
		<bitfield id="CFG_LOWPOWER_LATENCY" width="2" begin="16" end="15" resetval="0x2" description="cfg_lowpower_latency " range="16 - 15" rwaccess="R/W"/> 
		<bitfield id="CFG_NORM_RECOV_VAL" width="3" begin="14" end="12" resetval="0x0" description="This value defines the minimum time for the link to stay in Recovery. Active other than from U3. The granuity is 128us." range="14 - 12" rwaccess="R/W"/> 
		<bitfield id="CFG_U3_RECOV_VAL" width="3" begin="11" end="9" resetval="0x6" description="This value defines the minimum time for the link to stay in Polling.Active and Recovery.Active from U3.  The granuity is 128us. " range="11 - 9" rwaccess="R/W"/> 
		<bitfield id="CFG_FORCE_PM_ACCEPT" width="1" begin="8" end="8" resetval="0x0" description="'0':  Normal operation mode.           '1':  Force link to accept power management command." range="8" rwaccess="R/W"/> 
		<bitfield id="CFG_RECOVERY" width="1" begin="7" end="7" resetval="0x0" description="'0':  Normal operation mode,           '1':  Direct link to Recovery from U0." range="7" rwaccess="R/W"/> 
		<bitfield id="CFG_FAST_TRAINING" width="1" begin="6" end="6" resetval="0x0" description="'0':  Normal operation mode,           '1':  Link fast training mode.           This bit should be written '0' in normal operation. " range="6" rwaccess="R/W"/> 
		<bitfield id="CFG_DIS_SCRMB" width="1" begin="5" end="5" resetval="0x0" description="'0':  Enable link scrambler,            '1':  Disable link scrambler." range="5" rwaccess="R/W"/> 
		<bitfield id="CFG_SYMBOL_ERR_EN" width="1" begin="4" end="4" resetval="0x1" description="'0':  Disable detecting RxData error using RxStatus signal,           '1':  Enable detecting RxData error using RxStatus signal. " range="4" rwaccess="R/W"/> 
		<bitfield id="CFG_U2_ENABLE" width="1" begin="3" end="3" resetval="0x0" description="'0':  Normal operation mode,            '1':  Direct link to U2 from U0.             This bit is for test purpose only.  It shall be written '0' in normal operation mode. " range="3" rwaccess="R/W"/> 
		<bitfield id="CFG_U1_ENABLE" width="1" begin="2" end="2" resetval="0x0" description="'0':  Normal operation mode,            '1':  Direct link to U1 from U0.             This bit is for test purpose only. It shall be written '0' in normal operation mode. " range="2" rwaccess="R/W"/> 
		<bitfield id="CFG_LPBK_MODE" width="1" begin="1" end="1" resetval="0x0" description="'0':  Disable link loopback master mode,             '1':  Enable link loopback master mode." range="1" rwaccess="R/W"/> 
		<bitfield id="CFG_DIS_COMP" width="1" begin="0" end="0" resetval="0x0" description="'0':  Enable link compliance mode,             '1':  Disable link compliance mode." range="0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_USB2_LINK_MGR_CTRL_REG1" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_USB2_LINK_MGR_CTRL_REG1" offset="0x18130" width="32" description="USB2 Port Link Control 1,2,3,4. This set of registers is used to control the USB set of timers. They are spread over 4 registers each 32 bits wide. This set of registers may be read from or written to at any time, including whilst the CNR field in the USBSTS register is high. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="TIMER_DISCONNECT_DETECT_LO" width="8" begin="31" end="24" resetval="0x49" description="Number of microseconds of SE0 in FS/LS mode to register disconnect had occurred. First 8 MSB." range="31 - 24" rwaccess="R/W"/> 
		<bitfield id="USB2_PM_DEBUG" width="1" begin="23" end="23" resetval="0x0" description="USB2_PM_DEBUG. usb2_link_mgr_debug register." range="23" rwaccess="R/W"/> 
		<bitfield id="USB2_PM_DEBUG_LATENCY_TOL_MSG" width="1" begin="22" end="22" resetval="0x0" description="Latency Tolerance Scheme ['0'=when HWLPM is enabled / '1'=when L1 is active]." range="22" rwaccess="R/W"/> 
		<bitfield id="USB2_PM_DEBUG_RESUME_DEB_DIS" width="1" begin="21" end="21" resetval="0x0" description="Clr to eliminate debounce on remote wake detect." range="21" rwaccess="R/W"/> 
		<bitfield id="USB2_PM_DEBUG_HW_LPM_ERRATA" width="1" begin="20" end="20" resetval="0x1" description="Set to switch the HIRD to BESL format." range="20" rwaccess="R/W"/> 
		<bitfield id="USB2_PM_DEBUG_HW_LPM_ERRATA1" width="1" begin="19" end="19" resetval="0x1" description="Set to change the scale of HW LPM timeout to 256us increments." range="19" rwaccess="R/W"/> 
		<bitfield id="USB2_PM_DEBUG_ENABLE_FLUSH_TO" width="1" begin="18" end="18" resetval="0x0" description="Set to enable flush state timeouts." range="18" rwaccess="R/W"/> 
		<bitfield id="USB2_PM_DEBUG_EOP_DETECT" width="1" begin="17" end="17" resetval="0x0" description="Set to enable full length SE0 detect." range="17" rwaccess="R/W"/> 
		<bitfield id="USB2_PM_DEBUG_FORCE_FULL_SPEED" width="1" begin="16" end="16" resetval="0x0" description="Set to reject device chirp and force full-speed" range="16" rwaccess="R/W"/> 
		<bitfield id="USB2_PM_DEBUG_SPLIT_192_LIMITDIS" width="1" begin="15" end="15" resetval="0x0" description="Use to disable 192 byte limit checking on." range="15" rwaccess="R/W"/> 
		<bitfield id="USB2_PM_DEBUG_FS_LS_EXT_DISCON" width="1" begin="14" end="14" resetval="0x0" description="Use UTMI HostDisconnect input for FS/LS" range="14" rwaccess="R/W"/> 
		<bitfield id="USB2_PM_DEBUG_UTMIRST2" width="1" begin="13" end="13" resetval="0x0" description="Select UTMI Reset Source 2" range="13" rwaccess="R/W"/> 
		<bitfield id="USB2_PM_DEBUG_UTMIRST1" width="1" begin="12" end="12" resetval="0x0" description="Select UTMI Reset Source 1" range="12" rwaccess="R/W"/> 
		<bitfield id="USB2_PM_DEBUG_ENABLE_DISC_WIN" width="1" begin="11" end="11" resetval="0x0" description="Enable HS disconnect Window." range="11" rwaccess="R/W"/> 
		<bitfield id="USB2_PM_DEBUG_DIS_PORT_ERR" width="1" begin="10" end="10" resetval="0x0" description="Enable Remote Wake Resume Trap." range="10" rwaccess="R/W"/> 
		<bitfield id="USB2_PM_DEBUG_DIS_ISO_PEEK" width="1" begin="9" end="9" resetval="0x1" description="Disable waiting for last indication for USB2 ISO." range="9" rwaccess="R/W"/> 
		<bitfield id="USB2_PM_DEBUG_DIRECT_RESUME" width="1" begin="8" end="8" resetval="0x1" description="Use FS/LS serial I/F to drive resume." range="8" rwaccess="R/W"/> 
		<bitfield id="USB2_PM_DEBUG_DROPPING" width="1" begin="7" end="7" resetval="0x1" description="If new ping on endpoint that already had PING, drop the PING." range="7" rwaccess="R/W"/> 
		<bitfield id="USB2_PM_DEBUG_FORCEPING" width="1" begin="6" end="6" resetval="0x0" description="If retry on endpoint that should have PING, force the PING." range="6" rwaccess="R/W"/> 
		<bitfield id="USB2_PM_DEBUG_AUTOPING" width="1" begin="5" end="5" resetval="0x1" description="After NYET and new packet coming to same EP - ping N times before give up and flush." range="5" rwaccess="R/W"/> 
		<bitfield id="USB2_PM_DEBUG_PHY_SUSDISALL" width="1" begin="4" end="4" resetval="0x0" description="Disable PHY suspend for all states." range="4" rwaccess="R/W"/> 
		<bitfield id="USB2_PM_DEBUG_PHY_CLKGATEDIS" width="1" begin="3" end="3" resetval="0x0" description="Disable PHY suspend during disconnect." range="3" rwaccess="R/W"/> 
		<bitfield id="USB2_PM_DEBUG_PHY_RSTDISCON" width="1" begin="2" end="2" resetval="0x0" description="Disable Clock Gate" range="2" rwaccess="R/W"/> 
		<bitfield id="USB2_PM_DEBUG_PHY_RST" width="1" begin="1" end="1" resetval="0x0" description="Control PHY Reset Directly" range="1" rwaccess="R/W"/> 
		<bitfield id="USB2_PM_DEBUG_QUICK_SIM" width="1" begin="0" end="0" resetval="0x0" description="Short Timer Values For Simulation of USB2.0 parameters. Please refer to Integration Guide section on Debug Features" range="0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_USB2_LINK_MGR_CTRL_REG2" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_USB2_LINK_MGR_CTRL_REG2" offset="0x18134" width="32" description=" USB2 Port Link Control 1, 2, 3, 4. This set of registers is used to control the USB set of timers. They are spread over 4 registers each 32 bits wide. This set of registers may be read from or written to at any time, including whilst the CNR field in the USBSTS register is high. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="TIMER_RESET_0" width="1" begin="31" end="31" resetval="0x1" description="Number of microseconds for total reset duration" range="31" rwaccess="R/W"/> 
		<bitfield id="TIMER_CHIRP_K_DETECT" width="13" begin="30" end="18" resetval="0x49" description=" Number of microseconds of Chirp-K to register that a device is chirping" range="30 - 18" rwaccess="R/W"/> 
		<bitfield id="TIMER_CONNECT_DETECT" width="13" begin="17" end="5" resetval="0x49" description="Number of microseconds of K/J in disconnected state to register connect has occurred. Last 5 LSBs." range="17 - 5" rwaccess="R/W"/> 
		<bitfield id="TIMER_DISCONNECT_DETECT_HI" width="5" begin="4" end="0" resetval="0x0" description="Number of microseconds of SE0 in FS/LS mode to register disconnect had occurred. Last 5 LSBs." range="4 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_USB2_LINK_MGR_CTRL_REG3" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_USB2_LINK_MGR_CTRL_REG3" offset="0x18138" width="32" description=" USB2 Port Link Control 1, 2, 3, 4. These set of registers is used to control the USB set of timers. They are spread over 4 registers each 32 bits wide. This set of registers may be read from or written to at any time, including whilst the CNR field in the USBSTS register is high. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="TIMER_U2_SETTLE" width="4" begin="31" end="28" resetval="0x15" description="Number of microseconds after entering U2. linestate changes are ignored as bus settles. First 4 LSB." range="31 - 28" rwaccess="R/W"/> 
		<bitfield id="TIMER_U3_SETTLE" width="13" begin="27" end="15" resetval="0x4299" description="Number of microseconds after entering U3. linestate changes are ignored as bus settles" range="27 - 15" rwaccess="R/W"/> 
		<bitfield id="TIMER_RESET" width="15" begin="14" end="0" resetval="0x27499" description="Number of microseconds for total reset duration" range="14 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_USB2_LINK_MGR_CTRL_REG4" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_USB2_LINK_MGR_CTRL_REG4" offset="0x1813C" width="32" description="USB2 Port Link Control 1, 2, 3, 4. These set of registers is used to control the USB set of timers. They are spread over 4 registers each 32 bits wide. This set of registers may be read from or written to at any time, including whilst the CNR field in the USBSTS register is high. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="RESERVED_R" width="7" begin="31" end="25" resetval="0x0" description="Reserved field, RO" range="31 - 25" rwaccess="R"/> 
		<bitfield id="TIMER_RESUME_U2_REFLECT" width="16" begin="24" end="9" resetval="0x64" description="Number of microseconds after detecting U2 remote wake condition to reflect K" range="24 - 9" rwaccess="R/W"/> 
		<bitfield id="TIMER_U2_SETTLE" width="9" begin="8" end="0" resetval="0x3" description="Number of microseconds after entering U2. linestate changes are ignored as bus settles. Last 9 MSB." range="8 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_CTRL_BW_CTRL_REG" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_CTRL_BW_CTRL_REG" offset="0x18140" width="32" description="USB2 Max Bandwidth Control. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0" description="Reserved. For Hardware Bandwidth Calculation Only" range="31 - 16" rwaccess="R"/> 
		<bitfield id="BW_CTRL_15_12" width="4" begin="15" end="12" resetval="0x0" description=" Max. Percentage BW allowed for SS [default: 80] " range="15 - 12" rwaccess="R/W"/> 
		<bitfield id="BW_SYS_FACTOR" width="4" begin="11" end="8" resetval="0x3" description=" System factor for Bandwidth calculation " range="11 - 8" rwaccess="R/W"/> 
		<bitfield id="BW_CTRL_7_0" width="8" begin="7" end="0" resetval="0x0" description="Miscellaneous Bandwidth calculator configuration bits" range="7 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_FPGA_REVISION_REG" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_FPGA_REVISION_REG" offset="0x18144" width="32" description="FPGA_REVISION_REG.  This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="FPGA_REVISION_REG_DEFAULT" width="32" begin="31" end="0" resetval="0x301989888" description="FPGA_REVISION_REG_DEFAULT" range="31 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_INTF_CTRL_REG" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_INTF_CTRL_REG" offset="0x18148" width="32" description="Host interface control register. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.
This field should not be modified by software">
		<bitfield id="RESERVED_R" width="23" begin="31" end="9" resetval="0x0" description="Reserved field, RO" range="31 - 9" rwaccess="R"/> 
		<bitfield id="PROT_HDR_RBUF_OVERFLOW_CCLK" width="1" begin="8" end="8" resetval="0x0" description="prot_hdr_rbuf_overflow_cclk." range="8" rwaccess="R"/> 
		<bitfield id="CFG_MAX_NUM_OF_RD" width="2" begin="7" end="6" resetval="0x0" description="cfg_max_num_of_rd. This is to control how many max number of read that we allow ODMA read to issue.            '00': can issue 16 reads           '10': can issue 8 reads           '01': can issue 4 reads" range="7 - 6" rwaccess="R/W"/> 
		<bitfield id="HOST_INTF_CTRL" width="4" begin="5" end="2" resetval="0x0" description="host_intf_ctrl" range="5 - 2" rwaccess="R/W"/> 
		<bitfield id="HC_HALT_TIMEOUT_EN" width="1" begin="1" end="1" resetval="0x0" description="hc_halt_timeout_en. An internal register bit used to control whether or not to use the hc halt status timer of 15ms" range="1" rwaccess="R/W"/> 
		<bitfield id="HOST_ERR_MASK" width="1" begin="0" end="0" resetval="0x1" description="host_err_mask. If set to '1' do not mask the host system error" range="0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_BW_OV_SS_BURST_REG" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_BW_OV_SS_BURST_REG" offset="0x1814C" width="32" description="BW_OV_SS_BURST_REG.  This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.
This field should not be modified by software">
		<bitfield id="RESERVED" width="8" begin="31" end="24" resetval="0x0" description="Reserved. For Hardware Bandwidth Calculation Only" range="31 - 24" rwaccess="R"/> 
		<bitfield id="BW_OV_SYS_BURST" width="12" begin="23" end="12" resetval="0x8" description="bw_ov_sys_burst" range="23 - 12" rwaccess="R/W"/> 
		<bitfield id="BW_OV_SS_BURST" width="12" begin="11" end="0" resetval="0x32" description="bw_ov_ss_burst" range="11 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_CTRL_TRM_REG2" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_CTRL_TRM_REG2" offset="0x18150" width="32" description="Host Control Transfer Manager (TRM) register. This register contains fields, which control the behavior of the Transfer Manager in the xHCI. The functions controlled by this register are made available largely for debug/diagnostic purposes. This functionality is above and beyond that defined in the xHCI specification. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="INSERT_CPL_IDMA_WAIT_EN" width="1" begin="31" end="31" resetval="0x1" description="This bit is added for bug FR2601. It is for cache invalidate case where xHC engine needs to insert wait states for completion engine when the completion has received a short packet before XFER engine has finished the TRB fetch for this packet at its packet boundary.             '0': Disables the feature,              '1': Enables the feature" range="31" rwaccess="R/W"/> 
		<bitfield id="PKT_BNDRY_BLOCK_HALT_EN" width="1" begin="30" end="30" resetval="0x1" description="This bit is added for bug FR2642. It  is to delay the completion engine to generate an event due to internal error conditions that halted an EP until XFER engine has reached a packet boundary.               '0': Disabled              '1': Enabled" range="30" rwaccess="R/W"/> 
		<bitfield id="NON_DMA_IMD_EN" width="1" begin="29" end="29" resetval="0x1" description="This bit is added for bug FR2639. It enables the internal functions where xHC engine needs to immediately serve the EP again.               '0': disabled              '1': enabled" range="29" rwaccess="R/W"/> 
		<bitfield id="ERR_CPL_CODE_STORE_EN" width="1" begin="28" end="28" resetval="0x1" description="This bit is added for bug FR2495. It enables that error completion code of the first error condition detected within an TD. so that we can report the same error completion codes for all other TRBs within this TD.              '0': disabled              '1': enables the feature" range="28" rwaccess="R/W"/> 
		<bitfield id="TRM_ODMA_FIFO_DISABLE" width="1" begin="27" end="27" resetval="0x0" description="This bit disables a new feature where xHC engine will have an ODMA FIFO added for the commands between TRM and ODMA. so that we can avoid the back-pressure situation due to the number of outstanding PCIe read limitation. This is for performance enhancement.               '0': Enables this feature,              '1': Disables this feature." range="27" rwaccess="R/W"/> 
		<bitfield id="TTE_PKT_BNDRY_EXIT" width="1" begin="26" end="26" resetval="0x0" description="This bit is added for bug FR2446. It is to enable TRM to only send one IN request for TTE 1st phase request even if it has not reached the packet boundary.              '0': Disabled,              '1': Enabled" range="26" rwaccess="R/W"/> 
		<bitfield id="TTE_IN_EP_BLOCK_EN" width="1" begin="25" end="25" resetval="0x0" description="This bit is added for bug FR2395. It disables the single IN EP for TTE function.              '0': Disabled,              '1': Allow only single IN EP per port for TTE." range="25" rwaccess="R/W"/> 
		<bitfield id="IGNORE_NPKT_4PRDC" width="1" begin="24" end="24" resetval="0x0" description="This bit is added for bug FR2333 where the xHC engine has always ignored the credit returned from device for its OUT EP buffers when the EP is a periodic EP.               '0': Enable the xHC engine to follow the flow control,              '1': Disable this feature." range="24" rwaccess="R/W"/> 
		<bitfield id="DOUBLE_CLR_MASK_DIS" width="1" begin="23" end="23" resetval="0x1" description="This bit is added for bug FR2283. This is to ensure only one clear pulse generated when a completion has received [disable CPL engine from sending multiple clear].              '0': Disabled,             '1': Enabled." range="23" rwaccess="R/W"/> 
		<bitfield id="STOP_2MS_4TTE_EN" width="1" begin="22" end="22" resetval="0x1" description="This bit enables a 2ms timeout for all TTE related EP stop endpoint command. The xHC engine will not check whether there is a pending response in context. It will only wait for 2ms and indicates that EP has been stopped.             '0': Disabled,               '1': Enabled." range="22" rwaccess="R/W"/> 
		<bitfield id="SECOND_EVENT_FOR_ISP_EN" width="1" begin="21" end="21" resetval="0x1" description="This bit enables xHC engine TRM to report the second or more events on an ISP flush on a second or more TRBs with ISP bit set that are flushed for a short packet response received.              '0': Disables this feature,              '1': Enables this feature." range="21" rwaccess="R/W"/> 
		<bitfield id="DEV_MBS_CAP_EN" width="1" begin="20" end="20" resetval="0x1" description="This bit enables a new feature where the completion engine of TRM can check the credit returned from remote device to not excceed its max burst size. If it does, we will keep the internal credits in the context to the max burst size so that xHC engine will not transmit more than max burst size.              Note: CB has this bit default set to '0'. PPT B0 and LPT will have this bit set to'1'.              '0': Disables this feature,              '1': Enables this feature." range="20" rwaccess="R/W"/> 
		<bitfield id="DEADLOCK_TRB_ERR_EN" width="1" begin="19" end="19" resetval="0x1" description="This bit enables an internally detected deadlock situation being treated as an TRB_ERR when reports the event. This is an internal debug function.              '0': Disables this feature,              '1': Enables this feature." range="19" rwaccess="R/W"/> 
		<bitfield id="MULTI_NON0_CTRL_EP_EN" width="1" begin="18" end="18" resetval="0x1" description="This bit enables the xHC engine to fully support the non-0 control EP. This bit allows the xHC TRM to keep track of on non-0 control EP per port so that the responses can be routed to the correct DMA engine.              '0': Disables this feature,              '1': Enables this feature." range="18" rwaccess="R/W"/> 
		<bitfield id="ENT_AT_END_OF_TD_EN" width="1" begin="17" end="17" resetval="0x0" description="This bit enables xHC engine to evaluate the next TRB even if the EP is at the end of a TD.               '0': Disables this feature,              '1': Enables this feature." range="17" rwaccess="R/W"/> 
		<bitfield id="MSI_CNT_EN" width="1" begin="16" end="16" resetval="0x1" description="This bit enables the new Missing service interval detection mechanism. xHC engine will count how many service interval that it missed, and skip over that many TDs.               '0': Disables this feature,              '1': Enables this feature." range="16" rwaccess="R/W"/> 
		<bitfield id="SKIP_INTR_4RESP_EN" width="1" begin="15" end="15" resetval="0x1" description="This bit enables a feature where xHC engine will skip a service interval when an Interrupt EP has missed its service interval.              '0': Disables this feature,               '1': Enables to skip a service interval." range="15" rwaccess="R/W"/> 
		<bitfield id="ODMA_CRD_CAL_EN" width="1" begin="14" end="14" resetval="0x0" description="New feature added to prevent the back-pressure from ODMA due to the fact that it ran out of ODMA timeout timer resources. This is for performance enhancement. We have put into the ODMA credit is part of resource calculation before TRM allows the next scheduling for OUT EP.              '0': Disables this feature,              '1': Enables this feature." range="14" rwaccess="R/W"/> 
		<bitfield id="RPORT_CRD_CHECK_DIS" width="1" begin="13" end="13" resetval="0x0" description="The  xHC engine has a feature that can check with Receive Port Credit per root port to whether or not allow the next schedule onto this port [disable the RPORT credit check for IDMA]. This is for performance enhancement.             '0': Enables this feature,              '1': Disables this feature." range="13" rwaccess="R/W"/> 
		<bitfield id="DISABLE_CPL_SST_IDEQ0_ERR" width="1" begin="12" end="12" resetval="0x0" description="'0': Report received stream ID of 0x0000 as an error.               '1': Disable the error  reporting for a received stream ID value of 0x0000.               Note: only used when an endpoint is configured for stream operation." range="12" rwaccess="R/W"/> 
		<bitfield id="STREAM_IDLE2PRIME_EN" width="1" begin="11" end="11" resetval="0x0" description="Enable the host to transfer to the prime-pipe state [and transmit a prime pipe] on each transfer back to the IDLE state.               '0': Feature disabled,             '1': Feature enabled.             Note: Used only when an endpoint is configured for stream operation." range="11" rwaccess="R/W"/> 
		<bitfield id="STREAM_ID_MATCH_EN" width="1" begin="10" end="10" resetval="0x0" description="stream_id_match_en" range="10" rwaccess="R/W"/> 
		<bitfield id="TRM_ADV_DETECT_EN" width="1" begin="9" end="9" resetval="0x1" description="'0': Disable this function in XFER engine.              '1': Enable the XFER engine to auto detecting a missing service interval function when there is a long delay such that we missed a service interval due to the pending response.               Note: Only value of '0' is validated." range="9" rwaccess="R/W"/> 
		<bitfield id="SUPPORT_0LEN_TTE_EN" width="1" begin="8" end="8" resetval="0x1" description="'0': Disable this function.              '1': Enable the function to support 0length TTE second phase request from TTE module." range="8" rwaccess="R/W"/> 
		<bitfield id="PKT_BNDRY_2IGNORE_NTRB_EN" width="1" begin="7" end="7" resetval="0x1" description="'0': Disable this function.               '1': Enable a packet pace function under a special condition. This is an internal feature of XFER engine.              It is not expected to be used other than default." range="7" rwaccess="R/W"/> 
		<bitfield id="FC_ON_2INCOMPLET_EN" width="1" begin="6" end="6" resetval="0x0" description="'0': do not enable this function.               '1': assert the sch_req_incomplete signal in XFER engine when a context FC is ON. This is an internal safety feature for XFER engine." range="6" rwaccess="R/W"/> 
		<bitfield id="SETADDR_OVERRIDE" width="1" begin="5" end="5" resetval="0x0" description="'0': Disable the address device command to query a port credit before it is executed in ODMA engine,             '1': Enable the address device command to query a port credit before it is executed in ODMA engine." range="5" rwaccess="R/W"/> 
		<bitfield id="USE_EMPTY_4TTE_OVERLAP" width="1" begin="4" end="4" resetval="0x0" description="'0': Enable XFER engine to use a no-pending response flag as a way of identifying a TTE overlap condition,             '1': Enable XFER engine to use context empty flag not assert as a way of identifying  a TTE overlap condition." range="4" rwaccess="R/W"/> 
		<bitfield id="CNTX_1ST_TD_EN" width="1" begin="3" end="3" resetval="0x1" description="'0': disable the context storage,             '1': enable the context storage for a flag to identify a DMA request as the first of TD DMA request." range="3" rwaccess="R/W"/> 
		<bitfield id="UPORT_CRD_UPD_EN" width="1" begin="2" end="2" resetval="0x1" description="'0': Disable the credit redeem,             '1': Enable the credit redeem when a port is in NC state." range="2" rwaccess="R/W"/> 
		<bitfield id="ISO_CNT_2NODMA_EN" width="1" begin="1" end="1" resetval="0x0" description="'0': Disable this non DMA TRB detect function               '1': Enable  the function where XFER engine uses the remaining burst count as an indication that the next TRB on the transfer ring for an ISO TD is either link TRB or event data TRB.               " range="1" rwaccess="R/W"/> 
		<bitfield id="RESERVE_TRB_EN" width="1" begin="0" end="0" resetval="0x0" description="'0': report TRB ERR for reserved TRB type,              '1': enable XFER engine to process a reserved TRB type as a NO-OP TRB." range="0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_CTRL_BW_MAX1_REG" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_CTRL_BW_MAX1_REG" offset="0x18168" width="32" description="HOST_CTRL_BW_MAX1_REG. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="FSLS_BHUB_MAX_BW" width="8" begin="31" end="24" resetval="0x5" description=" Max. Percentage BW allowed for FS/LS behind hub [default: 90] " range="31 - 24" rwaccess="R/W"/> 
		<bitfield id="SS_MAX_BW" width="8" begin="23" end="16" resetval="0x100" description=" Max. Percentage BW allowed for SS [default: 80] " range="23 - 16" rwaccess="R/W"/> 
		<bitfield id="HS_MAX_BW" width="8" begin="15" end="8" resetval="0x127" description=" Max. Percentage BW allowed for HS [default: 80] " range="15 - 8" rwaccess="R/W"/> 
		<bitfield id="FSLS_MAX_BW" width="8" begin="7" end="0" resetval="0x66" description=" Max. Percentage BW allowed for FS/LS [default: 90] " range="7 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_CTRL_BW_MAX2_REG" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_CTRL_BW_MAX2_REG" offset="0x1816C" width="32" description="HOST_CTRL_BW_MAX2_REG. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="RESERVED_R" width="4" begin="31" end="28" resetval="0x0" description="Reserved field, RO" range="31 - 28" rwaccess="R"/> 
		<bitfield id="BW_MAX_REG59_32" width="28" begin="27" end="0" resetval="0x256004741" description="bw_max_reg[59:32]" range="27 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_USB2_LINESTATE_REG" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_USB2_LINESTATE_REG" offset="0x18170" width="32" description="USB2_LINESTATE_REG. This register may be read from or written to at any time, including whilst the CNR field in the USBSTS register is high. This register may be read from or written to at any time, including whilst the CNR field in the USBSTS register is high. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="RESERVED_R" width="8" begin="31" end="24" resetval="0x0" description="Reserved field, RO" range="31 - 24" rwaccess="R"/> 
		<bitfield id="PDOWN_STATUS" width="16" begin="23" end="8" resetval="0x0" description="pdown_status" range="23 - 8" rwaccess="R"/> 
		<bitfield id="UTMI_LINESTATE" width="8" begin="7" end="0" resetval="0x0" description="utmi_linestate" range="7 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_PROTO_GAP_TIMER1_REG" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_PROTO_GAP_TIMER1_REG" offset="0x18174" width="32" description="HOST_PROTO_GAP_TIMER1_REG. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="USB2_PROTO_PKT_GAP_FS" width="8" begin="31" end="24" resetval="0x12" description="USB2_PROTO_PKT_GAP_FS" range="31 - 24" rwaccess="R/W"/> 
		<bitfield id="USB2_PROTO_PKT_GAP_HS_RX" width="8" begin="23" end="16" resetval="0x5" description="USB2_PROTO_PKT_GAP_HS_RX" range="23 - 16" rwaccess="R/W"/> 
		<bitfield id="USB2_PROTO_PKT_GAP_HS_SOF" width="8" begin="15" end="8" resetval="0x20" description="USB2_PROTO_PKT_GAP_HS_SOF" range="15 - 8" rwaccess="R/W"/> 
		<bitfield id="USB2_PROTO_PKT_GAP_HS" width="8" begin="7" end="0" resetval="0x12" description="USB2_PROTO_PKT_GAP_HS" range="7 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_PROTO_GAP_TIMER2_REG" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_PROTO_GAP_TIMER2_REG" offset="0x18178" width="32" description="HOST_PROTO_GAP_TIMER2_REG. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="RESERVED_R" width="8" begin="31" end="24" resetval="0x0" description="Reserved field, RO" range="31 - 24" rwaccess="R"/> 
		<bitfield id="USB2_PROTO_PKT_GAP_LS_HTX" width="8" begin="23" end="16" resetval="0x42" description="USB2_PROTO_PKT_GAP_LS_HTX" range="23 - 16" rwaccess="R/W"/> 
		<bitfield id="USB2_PROTO_PKT_GAP_LS_HRX" width="8" begin="15" end="8" resetval="0x60" description="USB2_PROTO_PKT_GAP_LS_HRX" range="15 - 8" rwaccess="R/W"/> 
		<bitfield id="USB2_PROTO_PKT_GAP_LS" width="8" begin="7" end="0" resetval="0x100" description="USB2_PROTO_PKT_GAP_LS" range="7 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_PROTO_BTO_TIMER_REG" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_PROTO_BTO_TIMER_REG" offset="0x1817C" width="32" description="HOST_PROTO_BTO_TIMER_REG. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="USB2_PROTO_BTO_LS" width="11" begin="31" end="21" resetval="0x730" description="USB2_PROTO_BTO_LS" range="31 - 21" rwaccess="R/W"/> 
		<bitfield id="USB2_PROTO_BTO_FS" width="11" begin="20" end="10" resetval="0x100" description="USB2_PROTO_BTO_FS" range="20 - 10" rwaccess="R/W"/> 
		<bitfield id="USB2_PROTO_BTO_HS" width="10" begin="9" end="0" resetval="0x184" description="USB2_PROTO_BTO_HS" range="9 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_CTRL_PSCH_REG" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_CTRL_PSCH_REG" offset="0x18180" width="32" description="HOST_CTRL_PSCH_REG. Specific control register for Power Scheduler. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="PSCH_HOST_CTRL_REG_I_31_24" width="8" begin="31" end="24" resetval="0x10" description="PSCH_HOST_CTRL_REG_I_31_24" range="31 - 24" rwaccess="R/W"/> 
		<bitfield id="RESERVED_RW" width="24" begin="23" end="0" resetval="0x0" description="Reserved field, RW" range="23 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_CTRL_PSCH1_REG" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_CTRL_PSCH1_REG" offset="0x18184" width="32" description="HOST_CTRL_PSCH1_REG. Specific internal used control register for Power Scheduler. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="RESERVED_R" width="16" begin="31" end="16" resetval="0x0" description="Reserved field, RO" range="31 - 16" rwaccess="R"/> 
		<bitfield id="RESERVED_RW2" width="4" begin="15" end="12" resetval="0x0" description="Reserved field, RW" range="15 - 12" rwaccess="R/W"/> 
		<bitfield id="IDLE_SCALE" width="2" begin="11" end="10" resetval="0x0" description="PSCH_HOST_CTRL_REG_I_43_42. idle_scale. 0=1c . 1=1us. 2=125us" range="11 - 10" rwaccess="R/W"/> 
		<bitfield id="RESERVED_RW1" width="10" begin="9" end="0" resetval="0x0" description="Reserved field, RW" range="9 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_CTRL_LTM_REG" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_CTRL_LTM_REG" offset="0x18190" width="32" description="HOST_CTRL_LTM_REG. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="RESERVED_R" width="20" begin="31" end="12" resetval="0x0" description="Reserved field, RO" range="31 - 12" rwaccess="R"/> 
		<bitfield id="BELT_SELECTED" width="12" begin="11" end="0" resetval="0x0" description="Reports several of the latencies depending on the last programmed belt_select value:             0: LTV value programmed,             1: Lowest BELT received,             2: Last received LTM per Slot,             3: Last received LTM per Port." range="11 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_AUX_CTRL_REG2" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_AUX_CTRL_REG2" offset="0x18194" width="32" description="AUX Power Management Control 1. This register may be read from or written to at any time, including whilst the CNR field in the USBSTS register is high. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="UPORTS_CHANGE_DETECT_EN" width="1" begin="31" end="31" resetval="0x1" description="uports_change_detect_en " range="31" rwaccess="R/W"/> 
		<bitfield id="SNPS_PHYSTATUS_DONE_L23_DIS" width="1" begin="30" end="30" resetval="0x1" description="snps_phystatus_done_l23_dis " range="30" rwaccess="R/W"/> 
		<bitfield id="SNPS_PHYSTATUS_DONE_L1_DIS" width="1" begin="29" end="29" resetval="0x1" description="snps_phystatus_done_l1_dis " range="29" rwaccess="R/W"/> 
		<bitfield id="SHADOW_DECODE_DIS" width="1" begin="28" end="28" resetval="0x0" description=" shadow_decode_dis " range="28" rwaccess="R/W"/> 
		<bitfield id="BATT_CHARGE_D3_EN" width="1" begin="27" end="27" resetval="0x0" description="batt_charge_d3_en " range="27" rwaccess="R/W"/> 
		<bitfield id="CFG_DEBOUNCE_EN" width="1" begin="26" end="26" resetval="0x0" description=" cfg_debounce_en " range="26" rwaccess="R/W"/> 
		<bitfield id="CFG_DBGP_DIS_AUTO" width="1" begin="25" end="25" resetval="0x1" description=" cfg_dbgp_dis_auto " range="25" rwaccess="R/W"/> 
		<bitfield id="AUTO_PM_EXIT_L1_EN" width="1" begin="24" end="24" resetval="0x1" description="This bit enables a L1 exit notification to SNPS PCIe core. There is a case where USB ports have waked up and AUX PM module has started the wakeup process. The AUX PM control state got into a wait for P0 state because it needs to wait until PCie core to signal powerdown state change. Due to the fact that the core is in D3Hot, there is no run_stop bit set such that no internal interrupt will be fired. This causes the LTSSM of PCIe stayed in L1 even though AUX PM has known that it needs an L1 exit. This bit works together with bit 21 of this register.            '0': Disables this feature.             '1': Enables this feature" range="24" rwaccess="R/W"/> 
		<bitfield id="CFG_PSCEG_DIS_SEL" width="1" begin="23" end="23" resetval="0x0" description="'0': Assert PLC for disconnection,           '1': Do not assert PLC for disconnection" range="23" rwaccess="R/W"/> 
		<bitfield id="CFG_LTSSM_IDLE2TS2" width="1" begin="22" end="22" resetval="0x0" description="This bit enables a feature in PCie core LTSSM to treat IDLE received as TS2 when LTSSM is in wait for TS2 receive state. This is a function requested from PHY where it is possible to not able to receive TS2 without error.             '0': Disable this feature.             '1': Treat Logic IDLE as TS2 received when in some PCIe LTSSM state. " range="22" rwaccess="R/W"/> 
		<bitfield id="P2_OVERWRITE_WHENL1_EN" width="1" begin="21" end="21" resetval="0x1" description="We have added a feature where if PCIe core LTSSM enters L1 due to the D3hot, the aux PM control will not start a P2 overwrite function in anticipating for the next L23 enter.             '0': enables P2 overwrite even if we are in D3Hot.              '1': disables P2 overwrite due to the D3HOT where PCIe core enters the L1. " range="21" rwaccess="R/W"/> 
		<bitfield id="CFG_U3_AUTO" width="1" begin="20" end="20" resetval="0x1" description="'0': Disables the port to enter U3 automatically when in U1/U2,           '1': Enables the port to enter U3 automatically when in U1/U2." range="20" rwaccess="R/W"/> 
		<bitfield id="PDOWN_2LINK_RST_EN_REG" width="1" begin="19" end="19" resetval="0x1" description="pdown_2link_rst_en" range="19" rwaccess="R/W"/> 
		<bitfield id="U0_WAKE_TIMEOUT_EN" width="1" begin="18" end="18" resetval="0x0" description="This bit enables a feature in AUX PM module where if PCIe core  LTSSM is in P0 for a duration of time, we will exit the deep sleep state. This is for failure control in case.             '0': disable this feature,             '1': enables this feature." range="18" rwaccess="R/W"/> 
		<bitfield id="CFG_U2_P3_LFPS_TIME" width="1" begin="17" end="17" resetval="0x0" description="This bit selects U2 exit LFPS timer value.           '0': 320ns - 400ns in 25MHz domain,             '1': 240ns - 320ns in 25MHz domain." range="17" rwaccess="R/W"/> 
		<bitfield id="WAKE_EXIT_USE_LVL_EN" width="1" begin="16" end="16" resetval="0x1" description=" This bit enables a function that AUX PM module exits from the deep sleep state due to the USB ports wakeup level signal. We have added this feature where USB ports will generate a wakeup level signal to wakeup the AUX PM module if it is in deep sleep state and this level signal will be cleared if the change bits are updated by software.             '0': Disables this function, which means that a wakeup pulse generated from each USB PortSC event will wake up the AUX PM module from deep sleep if the D3 state is programmed.             '1': Enables this function." range="16" rwaccess="R/W"/> 
		<bitfield id="CFG_U2_P3_TIMEOUT" width="2" begin="15" end="14" resetval="0x0" description="This field defines the timeout value to enter P3 mode in U2.             00: 7us - 8us,             01: 511us - 512us,             10: disables the timer [0us],             11: disables the timer [0us]. " range="15 - 14" rwaccess="R/W"/> 
		<bitfield id="CFG_U2_P3_EN" width="1" begin="13" end="13" resetval="0x0" description="'0': disables PHY P3 mode in U2.             '1': enables PHY P3 mode in U2. " range="13" rwaccess="R/W"/> 
		<bitfield id="RESERVED_RW2" width="2" begin="12" end="11" resetval="0x0" description="Reserved field, RW" range="12 - 11" rwaccess="R/W"/> 
		<bitfield id="PRDC_PREVENT_L1_EN" width="1" begin="10" end="10" resetval="0x1" description="This bit enables a function that the SPNS PCIe core is controlled by xHCI engine internal periodic EP traffic conditions.             '0': Disabled this function             '1': Enables the xHC engine to request an exit of L1 when the service time has reached for an periodic EP. " range="10" rwaccess="R/W"/> 
		<bitfield id="CFG_PSCEG_SEL" width="1" begin="9" end="9" resetval="0x1" description=" This bit selects the port status change event generation mode.             '0': port status change event is only blocked by the individual status change bit.             '1': port status change event is blocked until all status change bit are cleared." range="9" rwaccess="R/W"/> 
		<bitfield id="RESERVED_RW1" width="5" begin="8" end="4" resetval="0x0" description="Reserved field, RW" range="8 - 4" rwaccess="R/W"/> 
		<bitfield id="IDLE_WAKEUP_EN" width="1" begin="3" end="3" resetval="0x1" description="This bit enables the AUX PM module to automatically wakeup from deep power down when engine has detected non-idle condition.             '0': feature disabled             '1': feature enabled" range="3" rwaccess="R/W"/> 
		<bitfield id="P0_DRIVE_DIS" width="1" begin="2" end="2" resetval="0x1" description=" This bit ensures the P1 drive during PERST#.             '0': feature disabled,             '1': feature enabled." range="2" rwaccess="R/W"/> 
		<bitfield id="CFG_FAST_SIMS" width="1" begin="1" end="1" resetval="0x0" description=" This bit is for simulation modes only. It enables further reductions to simulation timings in addition to cfg_fast_training. Please refer to Integration Guide Debug Features section            '0': Normal timings             '1': Enable fast simulation timing modes" range="1" rwaccess="R/W"/> 
		<bitfield id="AUTO_P2_OW_EN_REG" width="1" begin="0" end="0" resetval="0x0" description="This bit enables a feature where we can get P2 overwrite to automatically turned on when there is no pending traffic in the engine.             '0': feature disabled,             '1': feature enabled. This field should not be modified by software" range="0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_AUX_CTRL_REG3" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_AUX_CTRL_REG3" offset="0x18198" width="32" description="Configuration bits for USB2 PHY. This register may be read from or written to at any time, including whilst the CNR field in the USBSTS register is high. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="RESERVED_R" width="12" begin="31" end="20" resetval="0x0" description="Reserved field, RO" range="31 - 20" rwaccess="R"/> 
		<bitfield id="HS_DC_V_LVL_ADJ" width="4" begin="19" end="16" resetval="0x8" description="HS DC Voltage Level Adjustment" range="19 - 16" rwaccess="R/W"/> 
		<bitfield id="FSLS_SRC_IMPD_ADJ" width="4" begin="15" end="12" resetval="0x3" description="FS/LS Source Impedance Adjustment" range="15 - 12" rwaccess="R/W"/> 
		<bitfield id="HS_TRANS_PRE_EMPH_EN" width="1" begin="11" end="11" resetval="0x0" description="HS Transmitter Pre-Emphasis Enable" range="11" rwaccess="R/W"/> 
		<bitfield id="HS_TRANS_RS_TIME_ADJ" width="1" begin="10" end="10" resetval="0x0" description="HS Transmitter Rise/Fall Time Adjustment" range="10" rwaccess="R/W"/> 
		<bitfield id="TRANS_HS_CROSS_ADJ" width="2" begin="9" end="8" resetval="0x3" description="Transmitter High-Speed Crossover Adjustment" range="9 - 8" rwaccess="R/W"/> 
		<bitfield id="STA" width="3" begin="7" end="5" resetval="0x3" description="Squelch Threshold Adjustment" range="7 - 5" rwaccess="R/W"/> 
		<bitfield id="PHY_MISC_CTRL_REG_4_2" width="3" begin="4" end="2" resetval="0x4" description="phy_misc_ctrl_reg[4:2]" range="4 - 2" rwaccess="R/W"/> 
		<bitfield id="PHY_MISC_CTRL_REG_1_0" width="2" begin="1" end="0" resetval="0x0" description="phy_misc_ctrl_reg[1:0]" range="1 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_DEBUG_CTRL_REG" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_DEBUG_CTRL_REG" offset="0x1819C" width="32" description="DEBUG_CTRL_REG. This register may be read from or written to at any time, including whilst the CNR field in the USBSTS register is high. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="CFG_PCIE_GASKET_CTRL" width="3" begin="31" end="29" resetval="0x0" description=" cfg_pcie_gasket_ctrl[2:0] This field should not be modified by software" range="31 - 29" rwaccess="R/W"/> 
		<bitfield id="CFG_L1_L0S_CTRL" width="4" begin="28" end="25" resetval="0x1" description="cfg_l1_l0s_ctrl[3:0] This field should not be modified by software" range="28 - 25" rwaccess="R/W"/> 
		<bitfield id="NEW_NB_CTRL_REG" width="5" begin="24" end="20" resetval="0x0" description="new_nb_ctrl_reg. Used in aux_pm module to keep old NB behavior. This field should not be modified by software" range="24 - 20" rwaccess="R/W"/> 
		<bitfield id="CFG_PM_DEBUG_CTRL" width="4" begin="19" end="16" resetval="0x0" description="cfg_pm_debug_ctrl. Used in aux_power_logic.v for debug. This field should not be modified by software" range="19 - 16" rwaccess="R/W"/> 
		<bitfield id="CFG_RESUME_WAKE_DIS" width="1" begin="15" end="15" resetval="0x0" description="cfg_resume_wake_dis This field should not be modified by software" range="15" rwaccess="R/W"/> 
		<bitfield id="CFG_RESUME_TIMER_EN" width="1" begin="14" end="14" resetval="0x0" description="cfg_resume_timer_en This field should not be modified by software" range="14" rwaccess="R/W"/> 
		<bitfield id="RESERVED_RW" width="4" begin="13" end="10" resetval="0x0" description="Reserved field, RW This field should not be modified by software" range="13 - 10" rwaccess="R/W"/> 
		<bitfield id="SW_EEPROM_EN" width="1" begin="9" end="9" resetval="0x0" description="debug control for CoosBay: sw_eeprom_en This field should not be modified by software" range="9" rwaccess="R/W"/> 
		<bitfield id="PORT_PWR_CTRL_TOGGLE" width="1" begin="8" end="8" resetval="0x0" description="debug control for CoosBay: port_pwr_ctrl_toggle This field should not be modified by software" range="8" rwaccess="R/W"/> 
		<bitfield id="DEBUG_EN_TOGGLE" width="1" begin="7" end="7" resetval="0x0" description="debug control for CoosBay: debug_en_toggle This field should not be modified by software" range="7" rwaccess="R/W"/> 
		<bitfield id="DEBUG_FINE_MODE_SEL" width="2" begin="6" end="5" resetval="0x0" description="debug_fine_mode_sel This field should not be modified by software" range="6 - 5" rwaccess="R/W"/> 
		<bitfield id="DEBUG_MODE_SEL" width="5" begin="4" end="0" resetval="0x0" description="debug_mode_sel This field should not be modified by software" range="4 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_CTRL_SCH_REG2" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_CTRL_SCH_REG2" offset="0x181A0" width="32" description="Host Control Scheduler. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="RESERVED_R" width="8" begin="31" end="24" resetval="0x0" description="Reserved field, RO" range="31 - 24" rwaccess="R"/> 
		<bitfield id="RESERVED_RW1" width="9" begin="23" end="15" resetval="0x0" description="Reserved field, RW" range="23 - 15" rwaccess="R/W"/> 
		<bitfield id="SERVICE_TIME_WATERMARK" width="7" begin="14" end="8" resetval="0x122" description="service_time_watermark" range="14 - 8" rwaccess="R/W"/> 
		<bitfield id="RESERVED_RW0" width="4" begin="7" end="4" resetval="0x0" description="Reserved field, RW" range="7 - 4" rwaccess="R/W"/> 
		<bitfield id="SCH_POLL_DBRANG_DIS" width="1" begin="3" end="3" resetval="0x0" description="Host Control Scheduler: sch_poll_dbrang_dis" range="3" rwaccess="R/W"/> 
		<bitfield id="SCH_ALWAYS_RESERVE_DIS" width="1" begin="2" end="2" resetval="0x0" description="Host Control Scheduler: sch_always_reserve_dis" range="2" rwaccess="R/W"/> 
		<bitfield id="SCH_POLL_RESERVATION_DIS" width="1" begin="1" end="1" resetval="0x0" description="Host Control Scheduler: sch_poll_reservation_dis" range="1" rwaccess="R/W"/> 
		<bitfield id="SCH_PRDC_RETRY_USB2_DIS" width="1" begin="0" end="0" resetval="0x0" description="Host Control Scheduler: sch_prdc_retry_usb2_dis" range="0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_AUX_DEBUG_READ_ONLY" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_AUX_DEBUG_READ_ONLY" offset="0x181A4" width="32" description="AUX_DEBUG_READ_ONLY. This register may be read from or written to at any time, including whilst the CNR field in the USBSTS register is high. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="RESERVED_R" width="30" begin="31" end="2" resetval="0x0" description="Reserved field, RO" range="31 - 2" rwaccess="R"/> 
		<bitfield id="P2_OVERWRITE_ENTER" width="1" begin="1" end="1" resetval="0x0" description="p2_overwrite_enter, sticky bit" range="1" rwaccess="R"/> 
		<bitfield id="ALL_UPORTS_IN_U3NC" width="1" begin="0" end="0" resetval="0x1" description="all_uports_in_u3nc. If set all ports are in U3NC state." range="0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_AUX_CTRL_PORTNUM_REG" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_AUX_CTRL_PORTNUM_REG" offset="0x181A8" width="32" description="AUX_CTRL_PORTNUM_REG. This register may be read from or written to at any time, including whilst the CNR field in the USBSTS register is high. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="LIMIT_MAX_SLOTS" width="8" begin="31" end="24" resetval="0x64" description="Limit Max slots to fewer then synthesized [strap]" range="31 - 24" rwaccess="R"/> 
		<bitfield id="LIMIT_MAX_NPORTS" width="8" begin="23" end="16" resetval="0x2" description="Limit Max  ports to fewer then synthesized [strap]" range="23 - 16" rwaccess="R"/> 
		<bitfield id="LIMIT_NPORTS_USB3" width="8" begin="15" end="8" resetval="0x1" description="Limit USB3 ports to fewer then synthesized [strap] This field should not be modified by software" range="15 - 8" rwaccess="R"/> 
		<bitfield id="LIMIT_NPORTS_USB2" width="8" begin="7" end="0" resetval="0x1" description="Limit USB2 ports to fewer then synthesized [strap]" range="7 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_AUX_CTRL_DEV_REMOVE_REG" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_AUX_CTRL_DEV_REMOVE_REG" offset="0x181AC" width="32" description=" Feature #3002 (Device Removable in PORTSC). This register may be read from or written to at any time, including whilst the CNR field in the USBSTS register is high. This register is reserved. This is a vendor defined capability. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="RESERVED_R" width="16" begin="31" end="16" resetval="0x0" description="Reserved field, RO" range="31 - 16" rwaccess="R"/> 
		<bitfield id="DEVICE_REMOVABLE_USB3" width="8" begin="15" end="8" resetval="0x0" description="Set to 1 if port has non-removable device [strap to 0/1]" range="15 - 8" rwaccess="R"/> 
		<bitfield id="DEVICE_REMOVABLE_USB2" width="8" begin="7" end="0" resetval="0x0" description="Set to 1 if port has non-removable device [strap to 0/1]" range="7 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_CTRL_TTE_REG1" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_CTRL_TTE_REG1" offset="0x181E0" width="32" description="Specific control register for SCH. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="RESERVED_R" width="24" begin="31" end="8" resetval="0x0" description="Reserved field, RO" range="31 - 8" rwaccess="R"/> 
		<bitfield id="RESERVED_RW" width="6" begin="7" end="2" resetval="0x0" description="Reserved field, RW" range="7 - 2" rwaccess="R/W"/> 
		<bitfield id="EOB_INT_DIS" width="1" begin="1" end="1" resetval="0x1" description="Disable end of burst workaround INT [0 length on final MDATA]" range="1" rwaccess="R/W"/> 
		<bitfield id="EOB_ISO_DIS" width="1" begin="0" end="0" resetval="0x0" description="Disable end of burst workaround ISO [0 length on final MDATA]" range="0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_CTRL_LTM_REG1" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_CTRL_LTM_REG1" offset="0x181E4" width="32" description="HOST_CTRL_LTM_REG1. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="BELT_SELECT" width="2" begin="31" end="30" resetval="0x0" description="Selects which BELT value should be reported on the belt_selected field when the register is read.       0 - LTV value programmed,       1 - Lowest BELT received,       2 - Last received LTM per Slot,       3 - Last received LTM per Port." range="31 - 30" rwaccess="R/W"/> 
		<bitfield id="BELT_USB2_EN" width="1" begin="29" end="29" resetval="0x0" description="belt_usb2_en, active '0', default enabled" range="29" rwaccess="R/W"/> 
		<bitfield id="BELT_USB3_EN" width="1" begin="28" end="28" resetval="0x0" description="belt_usb3_en, active '0', default enabled" range="28" rwaccess="R/W"/> 
		<bitfield id="BELT_PCIE_EN" width="1" begin="27" end="27" resetval="0x0" description="belt_pcie_en, default disabled" range="27" rwaccess="R/W"/> 
		<bitfield id="BELT_FORCE_RECOMPUTE" width="1" begin="26" end="26" resetval="0x0" description="belt_force_recompute" range="26" rwaccess="R/W"/> 
		<bitfield id="BELT_FORCE_DISABLEALL" width="1" begin="25" end="25" resetval="0x0" description="belt_force_disable_all" range="25" rwaccess="R/W"/> 
		<bitfield id="BELT_FORCE_DISABLESLOT" width="1" begin="24" end="24" resetval="0x0" description="belt_force_disable_slot" range="24" rwaccess="R/W"/> 
		<bitfield id="BELT_PORT_SELECT" width="8" begin="23" end="16" resetval="0x0" description="Port Number for the BELT reported on the belt_selected field when belt_select is 3" range="23 - 16" rwaccess="R/W"/> 
		<bitfield id="BELT_SLOT_SELECT" width="16" begin="15" end="0" resetval="0x0" description="Slot-ID for BELT reported on the belt_selected field when belt_select is 2" range="15 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_CTRL_LTM_REG2" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_CTRL_LTM_REG2" offset="0x181E8" width="32" description="HOST_CTRL_LTM_REG2. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="RESERVED_R" width="20" begin="31" end="12" resetval="0x0" description="Reserved field, RO" range="31 - 12" rwaccess="R"/> 
		<bitfield id="DEFAULT_PCIE_LTM" width="12" begin="11" end="0" resetval="0x1024" description="DEFAULT_PCIE_LTM converted from ns with convert_ns2belt" range="11 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_AUX_SCRATCHPAD_0" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_AUX_SCRATCHPAD_0" offset="0x18200" width="32" description="For internal use. This register may be read from or written to at any time, including whilst the CNR field in the USBSTS register is high. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="RESERVED_RW" width="32" begin="31" end="0" resetval="0x0" description="Reserved field, RW" range="31 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_AUX_SCRATCHPAD_1" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_AUX_SCRATCHPAD_1" offset="0x18204" width="32" description="For internal use. This register may be read from or written to at any time, including whilst the CNR field in the USBSTS register is high. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="RESERVED_RW" width="32" begin="31" end="0" resetval="0x0" description="Reserved field, RW" range="31 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_BATTERY_CHARGE_REG" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_BATTERY_CHARGE_REG" offset="0x18210" width="32" description="Battery charge mode and enable register. This register may be read from or written to at any time, including whilst the CNR field in the USBSTS register is high. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="BATTERY_CHARGE_MODE_EN_REG" width="7" begin="31" end="25" resetval="0x0" description="The register allows enabling battery charge mode for each USB2 port." range="31 - 25" rwaccess="R/W"/> 
		<bitfield id="RESERVED" width="24" begin="24" end="1" resetval="0x0" description="Reserved field, RO." range="24 - 1" rwaccess="N/A"/> 
		<bitfield id="BATTERY_CHARGE_MODE_REG" width="1" begin="0" end="0" resetval="0x0" description="The register allows setting battery charge mode for each USB2 port." range="0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_BATTERY_CHARGE_REG1" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_BATTERY_CHARGE_REG1" offset="0x18214" width="32" description="Battery charge control register 1. This register may be read from or written to at any time, including whilst the CNR field in the USBSTS register is high. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="RESERVED_R" width="1" begin="31" end="31" resetval="0x0" description="Reserved field, RO" range="31" rwaccess="R"/> 
		<bitfield id="BATTERY_CHARGE_CTRL_REG1_DEFAULT" width="31" begin="30" end="0" resetval="0x20333044" description="BATTERY_CHARGE_CTRL_REG1_DEFAULT" range="30 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_BATTERY_CHARGE_REG2" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_BATTERY_CHARGE_REG2" offset="0x18218" width="32" description="Battery charge control register 2. This register may be read from or written to at any time, including whilst the CNR field in the USBSTS register is high. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="RESERVED_R" width="8" begin="31" end="24" resetval="0x0" description="Reserved field, RO" range="31 - 24" rwaccess="R"/> 
		<bitfield id="BATTERY_CHARGE_CTRL_REG2_DEFAULT" width="24" begin="23" end="0" resetval="0x2048020" description="BATTERY_CHARGE_CTRL_REG2_DEFAULT" range="23 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_BATTERY_CHARGE_REG3" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_BATTERY_CHARGE_REG3" offset="0x1821C" width="32" description="Battery charge debug register. This register may be read from or written to at any time, including whilst the CNR field in the USBSTS register is high. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="RESERVED_R" width="8" begin="31" end="24" resetval="0x0" description="Reserved field, RO" range="31 - 24" rwaccess="R"/> 
		<bitfield id="BATTERY_CHARGE_DEBUG" width="24" begin="23" end="0" resetval="0x0" description="Battery charge debug" range="23 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_CTRL_PORT_LINK_REG1" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_HOST_CTRL_PORT_LINK_REG1" offset="0x18220" width="32" description="Feature #581. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="RESERVED_RW" width="18" begin="31" end="14" resetval="0x0" description="Reserved field, RW" range="31 - 14" rwaccess="R/W"/> 
		<bitfield id="CFG_TIEBREAK_MODE" width="2" begin="13" end="12" resetval="0x0" description="cfg_tiebreak_mode" range="13 - 12" rwaccess="R/W"/> 
		<bitfield id="CFG_TIEBREAK_VAL" width="4" begin="11" end="8" resetval="0x0" description="cfg_tiebreak_val" range="11 - 8" rwaccess="R/W"/> 
		<bitfield id="LINK_LTSSM_DEBUG_CTRL" width="6" begin="7" end="2" resetval="0x0" description="link_debug_ctrl register:.link_ltssm_debug_ctrl.           Possible values:            stay_in_idle : bit 0 set.           stay_in_ts1  : bit 1 set.           stay_in_ts2  : bit 2 set.           stay_in_tseq : bit 3 set.           stay_in_lfps : bit 4 set.           timeout_jumpover_en : bit 5 set." range="7 - 2" rwaccess="R/W"/> 
		<bitfield id="LINK_8B_DEBUG_CTRL" width="2" begin="1" end="0" resetval="0x0" description="link_debug_ctrl register:.link_8b_debug_ctrl.           bit[0]: xmt_d102,           bit[1]: xmt_comma." range="1 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_USBLEGSUP" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_USBLEGSUP" offset="0x18370" width="32" description="USB Legacy Support Capability. This register is an xHCI extended capability register. This register is used by pre-OS software (BIOS) and the operating system to coordinate ownership of the xHC. This extended capability requires one additional 32-bit register for control/status information (USBLEGCTLSTS). This register is in the Aux Power well. This register may be read from or written to at any time, including whilst the CNR field in the USBSTS register is high.">
		<bitfield id="RSVD2" width="7" begin="31" end="25" resetval="0x0" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.           Note: At present the fields are implemented as RO." range="31 - 25" rwaccess="R"/> 
		<bitfield id="HCOSOS" width="1" begin="24" end="24" resetval="0x0" description="HC OS Owned Semaphore,  RW. Default = '0'. System software sets this bit to request ownership of the xHC. Ownership is obtained when this bit reads as '1' and the HC BIOS Owned Semaphore bit [HCBIOSOS] reads as '0'." range="24" rwaccess="R/W"/> 
		<bitfield id="RSVD1" width="7" begin="23" end="17" resetval="0x0" description="Reserved: Reserved for future RO implementations. Registers or memory that shall be treated as read-only by system software. Rsvd registers shall return zero when read. Software shall ignore the value read from these bits.           Note: At present the fields are implemented as RO." range="23 - 17" rwaccess="R"/> 
		<bitfield id="HCBIOSOS" width="1" begin="16" end="16" resetval="0x0" description=" HC BIOS Owned Semaphore [HCBIOSOS], RW. Default = '0'. The BIOS sets this bit to establish ownership of the xHC. System BIOS will set this bit to '0' in response to a request for ownership of the xHC by system software." range="16" rwaccess="R/W"/> 
		<bitfield id="NEXTCP" width="8" begin="15" end="8" resetval="0x0" description="Next Capability Pointer, RO. This field indicates the location of the next capability with respect to the effective address of this capability. A non-zero value in this register indicates a relative offset, in Dwords, from this Dword to the beginning of the next extended capability." range="15 - 8" rwaccess="R"/> 
		<bitfield id="CID" width="8" begin="7" end="0" resetval="0x1" description="USB Legacy Support Capability ID, RO. This capability provides the xHCI Pre-OS to OS Handoff Synchronization support capability." range="7 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_USBLEGCTLSTS" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_USBLEGCTLSTS" offset="0x18374" width="32" description="USB Legacy Support Control Status. Pre-OS (BIOS) software uses this register to enable System Management Interrupts (SMIs) for every xHCI/USB event it needs to track. Some bits of this register are simply shadow bit of USBSTS register. This register is in the Aux Power well. This register may be read from or written to at any time, including whilst the CNR field in the USBSTS register is high.">
		<bitfield id="SMIBAR" width="1" begin="31" end="31" resetval="0x0" description=" SMI on BAR, RW1C. Default = '0'. This bit is set to '1' whenever the Base Address Register [BAR] is written." range="31" rwaccess="R/W1TC"/> 
		<bitfield id="SMIPCIC" width="1" begin="30" end="30" resetval="0x0" description=" SMI on PCI Command, RW1C. Default = '0'. This bit is set to '1' whenever the PCI Command Register is written." range="30" rwaccess="R/W1TC"/> 
		<bitfield id="SMIOSOC" width="1" begin="29" end="29" resetval="0x0" description="SMI on OS Ownership Change, RW1C. Default = '0'. This bit is set to '1' whenever the HC OS Owned Semaphore bit in the USBLEGSUP register transitions from '1' to a '0' or '0' to a '1'." range="29" rwaccess="R/W1TC"/> 
		<bitfield id="RSVD4" width="8" begin="28" end="21" resetval="0x0" description="Reserved and Zero: Reserved for future RW1C implementations. Software shall use zero for writes to these bits.           Note: At present the fields are implemented as RO." range="28 - 21" rwaccess="R"/> 
		<bitfield id="SMIHSE" width="1" begin="20" end="20" resetval="0x0" description="SMI on Host System Error, RO. Default = '0'. Shadow bit of Host System Error [HSE] bit in the USBSTS register. Refer to Section 5.4.2 of xHCI specification for definition and effects of the events associated with this bit being set to '1'.           To clear this bit to a '0', system software shall write a '1' to the Host System Error [HSE] bit in the USBSTS register." range="20" rwaccess="R"/> 
		<bitfield id="RSVD3" width="3" begin="19" end="17" resetval="0x0" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.           Note: At present the fields are implemented as RO." range="19 - 17" rwaccess="R"/> 
		<bitfield id="SMIEI" width="1" begin="16" end="16" resetval="0x0" description="SMI on Event Interrupt, RO. Default = '0'. Shadow bit of Event Interrupt [EINT] bit in the USBSTS register. Refer to Section 5.4.2 of xHCI specification for definition. This bit follows the state the Event Interrupt [EINT] bit in the USBSTS register, e.g. it automatically clears when EINT clears or set when EINT is set." range="16" rwaccess="R"/> 
		<bitfield id="SMIBARE" width="1" begin="15" end="15" resetval="0x0" description=" SMI on BAR Enable, RW. Default = '0'. When this bit is '1' and SMI on BAR is '1', then the host controller will issue an SMI." range="15" rwaccess="R/W"/> 
		<bitfield id="SMIPCICE" width="1" begin="14" end="14" resetval="0x0" description=" SMI on PCI Command Enable, RW. Default = '0'. When this bit is '1' and SMI on PCI Command is '1', then the host controller will issue an SMI." range="14" rwaccess="R/W"/> 
		<bitfield id="SMIOSOE" width="1" begin="13" end="13" resetval="0x0" description="SMI on OS Ownership Enable, RW. Default = '0'. When this bit is a '1' AND the OS Ownership Change bit is '1', the host controller will issue an SMI." range="13" rwaccess="R/W"/> 
		<bitfield id="RSVD2" width="8" begin="12" end="5" resetval="0x0" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.           Note: At present the fields are implemented as RO." range="12 - 5" rwaccess="R"/> 
		<bitfield id="SMIHSEE" width="1" begin="4" end="4" resetval="0x0" description="SMI on Host System Error Enable, RW. Default = '0'. When this bit is a '1', and the SMI on Host System Error bit [below] in this register is a '1', the host controller will issue an SMI immediately." range="4" rwaccess="R/W"/> 
		<bitfield id="RSVD1" width="3" begin="3" end="1" resetval="0x0" description="Reserved and Preserved: Reserved for future RW implementations. Software shall preserve the value read for writes to bits.           Note: At present the fields are implemented as RO." range="3 - 1" rwaccess="R"/> 
		<bitfield id="USBSMIE" width="1" begin="0" end="0" resetval="0x0" description="USB SMI Enable, RW. Default = '0'. When this bit is a '1', and the SMI on Event Interrupt bit [below] in this register is a '1', the host controller will issue an SMI immediately." range="0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_USB3_TEST_PORT0_REG" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_XECP_USB3_TEST_PORT0_REG" offset="0x18800" width="32" description="USB3_TEST_PORT_REG. This is a vendor defined capability. This register is reserved. This register should not be accessed by software. It is described only for informative purposes.">
		<bitfield id="LINK_TEST_LOOP_PASS" width="15" begin="31" end="17" resetval="0x0" description="link_test_loop_pass" range="31 - 17" rwaccess="R"/> 
		<bitfield id="LINK_TEST_DONE" width="1" begin="16" end="16" resetval="0x0" description="link_test_done This field should not be modified by software" range="16" rwaccess="R"/> 
		<bitfield id="USB3_TEST_LOOP_NUM" width="15" begin="15" end="1" resetval="0x0" description="USB3_test_loop_num" range="15 - 1" rwaccess="R/W"/> 
		<bitfield id="USB3_TEST_CTRL" width="1" begin="0" end="0" resetval="0x0" description="USB3_test_ctrl" range="0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_usb_conf" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_usb_conf" offset="0x20000" width="32" description="Global Configuration Register">
		<bitfield id="LGO_SSINACT" width="1" begin="31" end="31" resetval="0x0" description="SS.Inactive state entry request [SS mode only]. This bit can be used only if USBSS-DEV is part of the CDNS USB OTG Controller [USB_CAP.OTG_READY bit is 1 while reading]. In other cases should not be used and returns 0 when read. Writing '1' will trigger an attempt to perform transition to SS.Inactive state. Should be used only if Link is in U0 or Recovery state. This bit will be automatically cleared to '0' after link layer finishes SS.Inactive request. Result of the request [link layer enters SS.Inactive or not] can be verified by reading LTS [link state] field in USB_STS register. Writing '0' has no effect" range="31" rwaccess="R/W"/> 
		<bitfield id="LGO_U2" width="1" begin="30" end="30" resetval="0x0" description="U2 state entry request [SS mode only]. 			Writing '1' will trigger an attempt to perform transition to U2 state. This bit will be automatically cleared to '0' after link layer finishes U2 request. Result of the request [link layer enters U2 or not] can be verified by reading LTS [link state] field in USB_STS register.  Writing '1' has no effect when USB_STS.LGOU2ENS is set to '0'. Writing '0' has no effect." range="30" rwaccess="R/W"/> 
		<bitfield id="LGO_U1" width="1" begin="29" end="29" resetval="0x0" description="U1 state entry request [SS mode only]. Writing '1' will trigger an attempt to perform transition to U1 state. This bit will be automatically cleared to '0' after link layer finishes U1 request. Result of the request [link layer enters U1 or not] can be verified by reading LTS [link state] field in USB_STS register.  Writing '1' has no effect when USB_STS.LGOU1ENS is set to '0'. Writing '0' has no effect." range="29" rwaccess="R/W"/> 
		<bitfield id="LGO_U0" width="1" begin="28" end="28" resetval="0x0" description="U0 state entry request [SS mode only]. Writing '1' will trigger an attempt to perform transition to U0 state. If the link is suspended [U3 state] and CPU set this bit to'1', link will start driving resume signaling on its upstream link to indicate remote wakeup. The Function Wake Notification should be send using USB_CMD.SDNFW bit. Writing '0' has no effect." range="28" rwaccess="R/W"/> 
		<bitfield id="U2DS" width="1" begin="27" end="27" resetval="0x0" description="U2 state entry disable [SS mode only]. Writing '1' to this bit disables link layer from entering U2 state.  Status of this bit can be checked in the USB_STS register. When both U2EN and U2DS bits are set to '1' while writing to USB_CONF register, the device behaviour is udefined. Writing '0' has no effect. This bit is always '0' while reading." range="27" rwaccess="W"/> 
		<bitfield id="U2EN" width="1" begin="26" end="26" resetval="0x0" description="U2 state entry enable [device side, SS mode only]. Writing '1' to this bit enables link layer to enter U2 state.  Status of this bit can be checked in the USB_STS register. Writing '0' has no effect. When both U2EN and U2DS bits are set to '1' while writing to USB_CONF register, the device behaviour is udefined. This bit is always '0' while reading." range="26" rwaccess="W"/> 
		<bitfield id="U1DS" width="1" begin="25" end="25" resetval="0x0" description="U1 state entry disable [SS mode only]. Writing '1' to this bit disables link layer from entering U1 state.  Status of this bit can be checked in the USB_STS register. Writing '0' has no effect. When both U1EN and U1DS bits are set to '1' while writing to USB_CONF register, none of the operations associated with these bits will be performed. This bit is always '0' while reading." range="25" rwaccess="W"/> 
		<bitfield id="U1EN" width="1" begin="24" end="24" resetval="0x0" description="U1 state entry enable [device side, SS mode only], Writing '1' to this bit enables link layer to enter U1 state.  Status of this bit can be checked in the USB_STS register. Writing '0' has no effect. When both U1EN and U1DS bits are set to '1' while writing to USB_CONF register, none of the operations associated with these bits will be performed. This bit is always '0' while reading." range="24" rwaccess="W"/> 
		<bitfield id="RESERVED3" width="1" begin="23" end="23" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="23" rwaccess="R"/> 
		<bitfield id="CLK3OFFDS" width="1" begin="22" end="22" resetval="0x0" description="USB 3.0 clock gate enable. Writing '1' to this bit disables pclk clock turning-off when device enters U3 link state in SS mode. The actual 'USB 3.0 clock gate' status in can be checked in the USB_STS.USB3OFF register. When both CLK3OFFDS and CLK3OFFEN bits are set to '1' while writing to USB_CONF register, the device behaviour is udefined. This bit is always '0' while reading." range="22" rwaccess="W"/> 
		<bitfield id="CLK3OFFEN" width="1" begin="21" end="21" resetval="0x0" description="USB 3.0 clock gate disable. Writing '1' to this bit enables pclk  clock turning-off when device enters U3 link state in SS mode. The actual 'USB 3.0 clock gate' status in can be checked in the USB_STS.USB3OFF register. When both CLK3OFFDS and CLK3OFFEN bits are set to '1' while writing to USB_CONF register, the device behaviour is udefined. This bit is always '0' while reading." range="21" rwaccess="W"/> 
		<bitfield id="LGO_L0" width="1" begin="20" end="20" resetval="0x0" description="L0 LPM state entry request [HS/FS mode only]. Writing '1' will trigger an attempt to perform transition to L0 LPM state. This bit will be automatically cleared to '0' after LPM enter L0 state. Result of the request [LPM enters L0 or not] can be verified by reading LPMST [LPM state] field in USB_STS register.  Writing '0' has no effect. If the LPM is suspended [L2 state] and CPU set this bit to'1', upstream will start driving resume signaling to indicate remote wakeup." range="20" rwaccess="R/W"/> 
		<bitfield id="CLK2OFFDS" width="1" begin="19" end="19" resetval="0x0" description="USB 2.0 clock gate enable. Writing '1' to this bit disables hsfs clock turning-off when device enters L2 LPM state in HS/FS mode. The actual 'USB 2.0 clock gate' status in can be checked in the USB_STS.USB2OFF register. When both CLK2OFFDS and CLK2OFFEN bits are set to '1' while writing to USB_CONF register, the device behaviour is udefined. This bit is always '0' while reading." range="19" rwaccess="W"/> 
		<bitfield id="CLK2OFFEN" width="1" begin="18" end="18" resetval="0x0" description="USB 2.0 clock gate disable. Writing '1' to this bit enables hsfs clock turning-off when device enters L2 LPM state in HS/FS mode. The actual 'USB 2.0 clock gate' status in can be checked in the USB_STS.USB2OFF register. When both CLK2OFFDS and CLK2OFFEN bits are set to '1' while writing to USB_CONF register, the device behaviour is udefined. This bit is always '0' while reading." range="18" rwaccess="W"/> 
		<bitfield id="L1DS" width="1" begin="17" end="17" resetval="0x0" description="L1 LPM state entry disable [HS/FS mode only]. Writing '1' to this bit disables USB2.0 LPM from entering L1 state.  Status of this bit can be checked in the USB_STS register. Writing '0' has no effect. When both L1EN and L1DS bits are set to '1' while writing to USB_CONF register, the device behaviour is udefined. This bit is always '0' while reading." range="17" rwaccess="W"/> 
		<bitfield id="L1EN" width="1" begin="16" end="16" resetval="0x0" description="L1 LPM state entry enable [device side, HS/FS mode only]. Writing '1' to this bit enables USB2.0 LPM to enter L1 state.  Status of this bit can be checked in the USB_STS register. Writing '0' has no effect. When both L1EN and L1DS bits are set to '1' while writing to USB_CONF register, the device behaviour is udefined. This bit is always '0' while reading." range="16" rwaccess="W"/> 
		<bitfield id="DEVDS" width="1" begin="15" end="15" resetval="0x0" description="Device disable. Writing '1' to the DEVDS bit sets to '0' the USB_STS.DEVS bit. Check also the DEVEN bit description. Writing '0' has no effect. This bit is always '0' while reading." range="15" rwaccess="W"/> 
		<bitfield id="DEVEN" width="1" begin="14" end="14" resetval="0x0" description="Device enable. After Power-On-Reset the USBSS_DEV is disconnected from the USB bus. To connect the device into the USB bus the software has to write '1' to DEVEN bit - this couse connection of the VBUS input to the internal device logic and  connetion to the USB bus as a result [inside of USBSS_DEV an internal VBUS is used which which is the and gate: VBUS input AND USB_STS.DEVS bit in SFRs]. Writing '1' to the DEVEN bit sets to '1' the USB_STS.DEVS bit. Writing '0' has no effect. This bit is always '0' while reading." range="14" rwaccess="W"/> 
		<bitfield id="SFORCE_FS" width="1" begin="13" end="13" resetval="0x0" description="Set Force Full Speed. Writing '1' to this bit forces Full Speed when USBSS-DEV operates in USB2.0 mode [disables High Speed]. When both SFORCE_FS and CFORCE_FS bits are set to '1' while writing to USB_CONF register, the device behaviour is udefined. The status of this settings can be check in the USB_STS.DISABLE_HS bit. This bit is always '0' while reading." range="13" rwaccess="W"/> 
		<bitfield id="CFORCE_FS" width="1" begin="12" end="12" resetval="0x0" description="Clear Force Full Speed. Writing '1' to this bit stop forcing Full Speed when USBSS-DEV operates in USB2.0 mode [stop disabling High Speed]. When both SFORCE_FS and CFORCE_FS bits are set to '1' while writing to USB_CONF register, the device behaviour is udefined. The status of this settings can be check in the USB_STS.DISABLE_HS bit. This bit is always '0' while reading." range="12" rwaccess="W"/> 
		<bitfield id="DMAOFFDS" width="1" begin="11" end="11" resetval="0x0" description="DMA clock turn-off disable. Writing '1' to this bit disables DMA clock turning-off when device exits U0 link state in SuperSpeed mode. When both DMAOFFDS and DMAOFFEN bits are set to '1' while writing to USB_CONF register, the device behaviour is udefined. This bit is always '0' while reading." range="11" rwaccess="W"/> 
		<bitfield id="DMAOFFEN" width="1" begin="10" end="10" resetval="0x0" description="DMA clock turn-off enable. Writing '1' to this bit enables DMA clock turning-off when device exits U0 link state in SuperSpeed mode. When both DMAOFFDS and DMAOFFEN bits are set to '1' while writing to USB_CONF register, the device behaviour is udefined. This bit is always '0' while reading." range="10" rwaccess="W"/> 
		<bitfield id="RESERVED2" width="1" begin="9" end="9" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="9" rwaccess="R"/> 
		<bitfield id="RESERVED1" width="1" begin="8" end="8" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="8" rwaccess="R"/> 
		<bitfield id="SWRST" width="1" begin="7" end="7" resetval="0x0" description="Device software reset. When set to 1, the entire USBSS-DEV is reset. The SWRST resets most flip-flops in entire USBSS-DEV. This bit is also used to connect disconnected device. Writing '0' has no effect." range="7" rwaccess="R/W"/> 
		<bitfield id="BENDIAN" width="1" begin="6" end="6" resetval="0x0" description="Big Endian Access. Writing '1' to this bit sets Big Endian byte order for SFRs access. Writing '0' has no effect. When both LENDIAN and BENDIAN bits are set to '1' while writing to USB_CONF register, the device behaviour is udefined. This bit is always '0' while reading." range="6" rwaccess="W"/> 
		<bitfield id="LENDIAN" width="1" begin="5" end="5" resetval="0x0" description="Little Endian access. Writing '1' to this bit sets Little Endian byte order for SFRs access. By default [after hardware reset], USBSS-DEV acts as little-endian device. Writing '0' has no effect. When both LENDIAN and BENDIAN bits are set to '1' while writing to USB_CONF register, the device behaviour is udefined. This bit is always '0' while reading." range="5" rwaccess="W"/> 
		<bitfield id="USB2DIS" width="1" begin="4" end="4" resetval="0x0" description="Disconnect USB device in HS/FS. Writing '1' to this bit disconnects USB in HS/FS. The actual USB connection status in HS/FS can be checked in the USB_STS register. Writing '0' has no effect. To connect disconnected device, CPU performs software reset [UCB_CFG.SWRST]. This bit is always '0' while reading." range="4" rwaccess="W"/> 
		<bitfield id="USB3DIS" width="1" begin="3" end="3" resetval="0x0" description="Disconnect USB device in SuperSpeed. Writing '1' to this bit disconnects USB in Super Speed. The actual USB connection status in the SS mode can be checked in the USB_STS register. If link is in U3 [SuperSpeed PHY clock is disabled] while software writes USB3DIS bit, first the hardware automatically wakes up the PHY to the P2 to turn on the PHY clock [clklink], and second, all operations related to device disconnection cease. Writing '0' has no effect. To connect disconnected device, CPU performs software reset [UCB_CFG.SWRST]. This bit is always '0' while reading." range="3" rwaccess="W"/> 
		<bitfield id="RESERVED0" width="1" begin="2" end="2" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="2" rwaccess="R"/> 
		<bitfield id="CFGSET" width="1" begin="1" end="1" resetval="0x0" description="Set Configuration. Software writes '1' to this bit when it receives SET_CONFIGURATION request with non-zero configuration number. CPU sets this bit after setting requested configuration and before setting REQ_CMPL bit in the EP_CMD register.  Configuration will be set internally in the hardware when REQ_CMPL bit will be set. Writing '0' has no effect. The actual configuration status can be checked in the USB_STS register.  This bit is always '0' while reading." range="1" rwaccess="W"/> 
		<bitfield id="CFGRST" width="1" begin="0" end="0" resetval="0x0" description="Reset USB device configuration. Writing '1' to this bit resets USB device configuration, leaving only EP0 IN/OUT active [all other EP-related registers will be loaded with default values]. Any configuration/interface change, including adding new IF, must be preceded with configuration reset, adding current IF's as well as new IF. Writing '0' has no effect. This bit is always '0' while reading." range="0" rwaccess="W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_usb_sts" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_usb_sts" offset="0x20004" width="32" description="Global Status Register">
		<bitfield id="ENDIAN" width="1" begin="31" end="31" resetval="0x0" description="SFR Endian status. Little/Big Endian byte order for SFR access: 0 - Little Endian order [default after hardware reset] 1 - Big Endian order" range="31" rwaccess="R"/> 
		<bitfield id="DMAOFF" width="1" begin="30" end="30" resetval="0x0" description="DMA clock turn-off status. DMA clock turn-off/enable status: 0 - DMA clock is always on [default after hardware reset] 1 - DMA clock turn-off in U1, U2 and U3 [SS mode] is enabled." range="30" rwaccess="R"/> 
		<bitfield id="LST" width="4" begin="29" end="26" resetval="0x15" description="SuperSpeed Link LTSSM state. This field reflects USBSS-DEV current SuperSpeed link state: 0 - U0 State  1 - U1 State  2 - U2 State  3 - U3 State [Device Suspended]  4 - Disabled State  5 - RxDetect State  6 - Inactive State  7 - Polling State  8 - Recovery State  9 - Hot Reset State  10 - Compliance Mode State  11 - Loopback State  12:14 - Reserved 15 - Uninitialized" range="29 - 26" rwaccess="R"/> 
		<bitfield id="U2ENS" width="1" begin="25" end="25" resetval="0x1" description="U2 state enable status [valid in SS mode only]: 0 - Entering to  U2 state disabled 1 - Entering to  U2 state enabled" range="25" rwaccess="R"/> 
		<bitfield id="U1ENS" width="1" begin="24" end="24" resetval="0x1" description="U1 state enable status [valid in SS mode only]: 0 - Entering to  U1 state disabled 1 - Entering to  U1 state enabled" range="24" rwaccess="R"/> 
		<bitfield id="RESERVED2" width="2" begin="23" end="22" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="23 - 22" rwaccess="R"/> 
		<bitfield id="DISABLE_HS" width="1" begin="21" end="21" resetval="0x0" description="DisableHS status [valid for HS/FS mode only] 0 - High Speed operations in USB2.0 [FS/HS] mode not disabled 1 - High Speed operations in USB2.0 [FS/HS] mode disabled" range="21" rwaccess="R"/> 
		<bitfield id="USB2CONS" width="1" begin="20" end="20" resetval="0x1" description="HS/FS mode connection enable status [valid for HS/FS mode only]. 0 - the disconnect bit for HS/FS mode is set [USB_CONF.USB2DIS] 1 - the disconnect bit for HS/FS mode is not set [device can be connected in this mode] The actual connection status can be checked in the USB_STS.USBSPEED register" range="20" rwaccess="R"/> 
		<bitfield id="LPMST" width="2" begin="19" end="18" resetval="0x3" description="HS/FS LPM state [valid for HS/FS mode only]. This field reflects USBSS-DEV current LPM [used in HS/FS mode] state: 0 - L0 State  1 - L1 State  2 - L2 State  3 - L3 State" range="19 - 18" rwaccess="R"/> 
		<bitfield id="VBUSS" width="1" begin="17" end="17" resetval="0x0" description="Internal VBUS connection status. 0 - internal VBUS is not detected 1 - internal VBUS is detected" range="17" rwaccess="R"/> 
		<bitfield id="L1ENS" width="1" begin="16" end="16" resetval="0x0" description="L1 LPM state enable status [valid for HS/FS mode only]. 0 - Entering to L1 LPM state disabled 1 - Entering to L1 LPM state enabled" range="16" rwaccess="R"/> 
		<bitfield id="ADDRESSED" width="1" begin="15" end="15" resetval="0x0" description="Address status: 0 - USB device is default state 1 - USB device is at least in address state [Function Address was set by the SW]" range="15" rwaccess="R"/> 
		<bitfield id="DEVS" width="1" begin="14" end="14" resetval="0x0" description="Device enable Status 0 - USB device is disabled [VBUS input is disconnected from internal logic] 1 - USB device is enabled [VBUS input is connected to the internal logic] This bit can be changed by setting DEVEN or DEVDS bits in USB_CONF register." range="14" rwaccess="R"/> 
		<bitfield id="RESERVED1" width="3" begin="13" end="11" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="13 - 11" rwaccess="R"/> 
		<bitfield id="IN_RST" width="1" begin="10" end="10" resetval="0x0" description="Controler in reset state. This bit indicate that whole [in case of POR] or part of controller [in case of SWRST or USB resets] currently is in reset state.  As controller has registers in both clock domains [system, and USB], internal reset synchronization between these domains may take longer than the cause of the reset [e.g active reset_n input]. Thus it is recommended to check if controller is not in reset state, before software starts its operations [especially after POR]. 0 - Internal reset is active  1 - Internal reset is not active and controller is fully operational." range="10" rwaccess="R"/> 
		<bitfield id="CLK3OFF" width="1" begin="9" end="9" resetval="0x1" description="PCLK clock turn-off status. When CLK3OFF bit is '0', the phypowerdown   output signal is not set to '11' in U3 link state, thus USB3.0 PHY does not turn off the pclk clock. 0 - pclk clock is always on  1 - pclk clock turn-off in U3 [SS mode] is enabled [default after hardware reset]" range="9" rwaccess="R"/> 
		<bitfield id="CLK2OFF" width="1" begin="8" end="8" resetval="0x1" description="HS/FS clock turn-off status. When CLK2OFF bit is '0', the utmisuspendm   output signal is not set low in USB2.0  suspend state [L2 state], thus USB2.0 PHY does not turn off the hsfs clock 0 - hsfs clock is always on  1 - hsfs clock turn-off in L2 [HS/FS mode] is enabled [default after hardware reset]" range="8" rwaccess="R"/> 
		<bitfield id="ENDIAN_MIRROR" width="1" begin="7" end="7" resetval="0x0" description="Little/Big Endian byte order for SFR access. 0 - Little Endian order [default after hardware reset] 1 - Big Endian order Endian byte order for SFR access can be changed by setting BENDIAN or LEDNIAN bits in USB_CONF register." range="7" rwaccess="R"/> 
		<bitfield id="USBSPEED" width="3" begin="6" end="4" resetval="0x0" description="Device speed:  			0: undef., 1: LowSpeed [not supported], 2: FullSpeed, 3: HighSpeed, 4: SuperSpeed, 5-7: Reserved" range="6 - 4" rwaccess="R"/> 
		<bitfield id="RESERVED0" width="1" begin="3" end="3" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="3" rwaccess="R"/> 
		<bitfield id="USB3CONS" width="1" begin="2" end="2" resetval="0x0" description="SuperSpeed connection status. 0 - USB in SuperSpeed mode disconnected 1 - USB in SuperSpeed mode connected" range="2" rwaccess="R"/> 
		<bitfield id="MEM_OV" width="1" begin="1" end="1" resetval="0x0" description="On-chip memory overflow. 0 - On-chip memory status OK 1 - On-chip memory overflow Memory overflow may occur if, during enumeration [SET_CONFIGURATION request] device software will try to turn on too many endpoints or will try to set too much endpoinds buffers [see EP_CFG.BUFFERING].  After each completion of enumeration software should check this bit, and when a memory overflow occurred, software must delete current configuration [using USB_CONF.CFGRST bit] and then set the one that requires less on-chip memory. For available memory calculation, the CDNS_USBSSDEV_ATTACHED_MEM_SIZE define parameter is used." range="1" rwaccess="R"/> 
		<bitfield id="CFGSTS" width="1" begin="0" end="0" resetval="0x0" description="Configuration status.  1 - device is in the configured state 0 - device is not configured This bit set during SET_CONFIGURATION request means that status stage of this request was finished successfully, thus device configuration was finished successfully." range="0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_usb_cmd" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_usb_cmd" offset="0x20008" width="32" description="Global Command Register">
		<bitfield id="RESERVED1" width="4" begin="31" end="28" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="31 - 28" rwaccess="R"/> 
		<bitfield id="DNLTM_BELT_11_8" width="4" begin="27" end="24" resetval="0x0" description="Device Notification 'Latency Tolerance Message' - BELT value [11:8] [SS mode only]. If user writes '1' to SDNLTM bit, the device will send Device Notification 'Latency Tolerance Message' with 'BELT[11:8]' field value equal to DNLTM_BELT_11_8. This field must be filled up before the USB_CMD.SDNLTM bit is set, and cannot be changed while USB_CMD.SDNLTM bit is not zero [Device Notification is being sent by the device controller] This field is always '0' while reading." range="27 - 24" rwaccess="W"/> 
		<bitfield id="DNLTM_BELT_7_0" width="8" begin="23" end="16" resetval="0x0" description="Device Notification 'Latency Tolerance Message' - BELT value [7:0] / Device Notification 'Function Wake' - Interface value [SS mode only]. This field must be filled up before one of the USB_CMD.SDNLTM/SDNFW bits is set, and cannot be changed while USB_CMD.SDNLTM/SDNFW bits are not zero [Device Notification is being sent by the device controller]. If user writes '1' to SDNFW bit the device will send Device Notification 'Function Wake' with 'Interface[7:0]' field value equal to DNLTM_BELT_7_0. If user writes '1' to SDNLTM bit, the device will send Device Notification 'Latency Tolerance Message' with 'BELT[7:0]' field value equal to DNLTM_BELT_7_0. This field is always '0' while reading." range="23 - 16" rwaccess="W"/> 
		<bitfield id="RESERVED0" width="2" begin="15" end="14" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="15 - 14" rwaccess="R"/> 
		<bitfield id="SPKT" width="1" begin="13" end="13" resetval="0x0" description="Send Custom Transaction Packet [SS mode only] Writing '1' will trigger an attempt to send Custom TP as defined in the USB3.0 specification. The packet contents that will be send as TP to the host must be previously prepared in the CPKT1 [will be sent as DWORD 0 in the TP], CPKT2 [will be sent as DWORD 1 in the TP] and CPKT3 [will be sent as DWORD 2 in the TP] registers. Note that TP DWORD 3 will be automatically inserted by the device controller. This bit will be automatically cleared if this TP is sent and only then the new Custom TP [by means of SPKT bit] or other Notification TP [by means of SDNLTM or SDNFW bits] can be send again. Writing 0 has no effect. This bit cannot be written by 1 simultaneously with SDNLTM and SDNFW bits." range="13" rwaccess="R/W"/> 
		<bitfield id="SDNLTM" width="1" begin="12" end="12" resetval="0x0" description="Send Latency Tolerance Message Device Notification TP [SS mode only]. Writing '1' will trigger an attempt to send Device Notification 'Latency Tolerance Message' with 'BELT' field set to DNLTM_BELT. This bit will be automatically cleared if the LTM Notification TP is sent and only then the new LTM Notification TP or the other TP [by means of SPKT or SDNFW bits] can be send again. Writing '0' has no effect. This bit cannot be written by '1' simultaneously with SPKT and SDNFW bits." range="12" rwaccess="R/W"/> 
		<bitfield id="TMODE_SEL" width="2" begin="11" end="10" resetval="0x0" description="Test mode selector [HS/FS mode only]. This field contains selected Test Mode - Device will enter this Test mode when '1' is written to STMODE. USB 2.0 Test mode selector: 00 - Test_J, 01 - Test_K, 10 - Test_SE0_NAK, 11 - Test_Packet This field is always '0' while reading." range="11 - 10" rwaccess="W"/> 
		<bitfield id="STMODE" width="1" begin="9" end="9" resetval="0x0" description="Set Test Mode [HS/FS mode only]. Writing the value '1 'to this bit causes the device enters into test mode selected by the TMODE_SEL field. Writing '0' has no effect. This bit is always '0' while reading." range="9" rwaccess="W"/> 
		<bitfield id="SDNFW" width="1" begin="8" end="8" resetval="0x0" description="Send Function Wake Device Notification TP [SS mode only]. Writing '1' will trigger an attempt to send 'Device Notification' with 'Interface' field set to DNFW_INT. This bit will be automatically cleared if the FW Notification TP is sent and only then the new FW Notification TP or the other TP [by means of SPKT or SDNLTM bits] can be send again. Writing '0' has no effect. This bit cannot be written by '1' simultaneously with SPKT and SDNLTM bits." range="8" rwaccess="R/W"/> 
		<bitfield id="FADDR" width="7" begin="7" end="1" resetval="0x0" description="Function Address. This field is saved to the device only when the field SET_ADDR is set '1 ' during write to USB_CMD register. Software is responsible for entering the address of the device during SET_ADDRESS request service. This field should be set immediately after the SETUP packet is decoded, and prior to confirmation of the status phase [what is done by  bit EP_CMD.REQ_CMPL] Verify that the device successfully completed the SET_ADDRESS request and is in ADRESSED state [as defined in USB3 spec] can be realized by checking the bit USB_STS. ADRESSED. USB_CMD.FADDR field can also be read at any time. This field is always '0' while reading." range="7 - 1" rwaccess="W"/> 
		<bitfield id="SET_ADDR" width="1" begin="0" end="0" resetval="0x0" description="Set Function Address. Writing the value '1 'to this bit causes the device is assigned to the USB Function Address according to the FADDR field. The device address must be saved by software when operating SET_ADDRESS request. After saving device address, software should set the EP_CMD.ERDY bit [as with all other requests] to quit the setup phase and then set bit EP_CMD.REQ_CMPL to confirm the status of the host phase. Writing '0 'has no effect. This bit is always '0' while reading." range="0" rwaccess="W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_usb_iptn" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_usb_iptn" offset="0x2000C" width="32" description="USB ITPN Reserved">
		<bitfield id="RESERVED" width="18" begin="31" end="14" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="31 - 14" rwaccess="R"/> 
		<bitfield id="ITPN" width="14" begin="13" end="0" resetval="0x0" description="ITP[SS] / SOF [HS/FS] number. In SS mode this field represent number of last ITP received from host. In HS/FS mode this field represent number of last SOF received from host." range="13 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_usb_lpm" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_usb_lpm" offset="0x20010" width="32" description="USB LPM Register">
		<bitfield id="RESERVED" width="27" begin="31" end="5" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="31 - 5" rwaccess="R"/> 
		<bitfield id="BRW" width="1" begin="4" end="4" resetval="0x0" description="Remote Wakeup Enable [bRemoteWake]" range="4" rwaccess="R"/> 
		<bitfield id="HIRD" width="4" begin="3" end="0" resetval="0x0" description="Host Initiated Resume Duration. This is the Resume duration from L1 LPM state, received from the host in the latest Extended Token packet. For more information see chapter: 'HS/FS mode - Link Power Management'" range="3 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_usb_ien" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_usb_ien" offset="0x20014" width="32" description="Interrupt Enable Register">
		<bitfield id="RESERVED4" width="2" begin="31" end="30" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="31 - 30" rwaccess="R"/> 
		<bitfield id="UWRESEIEN" width="1" begin="29" end="29" resetval="0x0" description="End of the USB SS warm reset interrupt enable. This bit enables requesting a UWRESEI interrupt" range="29" rwaccess="R/W"/> 
		<bitfield id="UWRESSIEN" width="1" begin="28" end="28" resetval="0x0" description="Start of the USB SS warm reset interrupt enable. This bit enables requesting a UWRESSI interrupt" range="28" rwaccess="R/W"/> 
		<bitfield id="RESERVED3" width="1" begin="27" end="27" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="27" rwaccess="R"/> 
		<bitfield id="CFGRESIEN" width="1" begin="26" end="26" resetval="0x0" description="Configuration reset interrupt enable. This bit enables requesting a CFGRESI interrupt" range="26" rwaccess="R/W"/> 
		<bitfield id="L1EXTIEN" width="1" begin="25" end="25" resetval="0x0" description="LPM L1 state exit interrupt enable. This bit enables requesting an L1EXTI interrupt." range="25" rwaccess="R/W"/> 
		<bitfield id="L1ENTIEN" width="1" begin="24" end="24" resetval="0x0" description="LPM L1 state enter interrupt enable. This bit enables requesting an L1ENTI interrupt." range="24" rwaccess="R/W"/> 
		<bitfield id="RESERVED2" width="2" begin="23" end="22" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="23 - 22" rwaccess="R"/> 
		<bitfield id="L2EXTIEN" width="1" begin="21" end="21" resetval="0x0" description="LPM L2 state exit interrupt enable. This bit enables requesting a L2EXTI interrupt." range="21" rwaccess="R/W"/> 
		<bitfield id="L2ENTIEN" width="1" begin="20" end="20" resetval="0x0" description="LPM L2 state enter interrupt enable. This bit enables requesting a L2ENTI interrupt." range="20" rwaccess="R/W"/> 
		<bitfield id="RESERVED1" width="1" begin="19" end="19" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="19" rwaccess="R"/> 
		<bitfield id="U2RESIEN" width="1" begin="18" end="18" resetval="0x0" description="USB reset [HS/FS mode] interrupt enable. This bit enables requesting an U2RESI interrupt." range="18" rwaccess="R/W"/> 
		<bitfield id="DIS2IEN" width="1" begin="17" end="17" resetval="0x0" description="HS/FS mode disconnection interrupt enable. This bit enables requesting a DIS2I interrupt." range="17" rwaccess="R/W"/> 
		<bitfield id="CON2IEN" width="1" begin="16" end="16" resetval="0x0" description="HS/FS mode connection interrupt enable. This bit enables requesting a CON2I interrupt." range="16" rwaccess="R/W"/> 
		<bitfield id="RESERVED0" width="3" begin="15" end="13" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="15 - 13" rwaccess="R"/> 
		<bitfield id="SPKTIEN" width="1" begin="12" end="12" resetval="0x0" description="Send Custom Packet interrupt enable. This bit enables requesting a Send Custom Packet interrupt." range="12" rwaccess="R/W"/> 
		<bitfield id="WAKEIEN" width="1" begin="11" end="11" resetval="0x0" description="Wakeup interrupt enable. This bit enables requesting a Wakeup interrupt." range="11" rwaccess="R/W"/> 
		<bitfield id="ITPIEN" width="1" begin="10" end="10" resetval="0x0" description="ITP/SOF packet detected interrupt enable. This bit enables requesting an ITPI interrupt." range="10" rwaccess="R/W"/> 
		<bitfield id="U1EXTIEN" width="1" begin="9" end="9" resetval="0x0" description="SS link U1 state exit interrupt enable. This bit enables requesting an U1EXTI interrupt." range="9" rwaccess="R/W"/> 
		<bitfield id="U1ENTIEN" width="1" begin="8" end="8" resetval="0x0" description="SS link U1 state enter interrupt enable. This bit enables requesting an U1ENTI interrupt." range="8" rwaccess="R/W"/> 
		<bitfield id="U2EXTIEN" width="1" begin="7" end="7" resetval="0x0" description="SS link U2 state exit interrupt enable. This bit enables requesting an U2EXTI interrupt." range="7" rwaccess="R/W"/> 
		<bitfield id="U2ENTIEN" width="1" begin="6" end="6" resetval="0x0" description="SS link U2 state enter interrupt enable. This bit enables requesting an U2ENTI interrupt." range="6" rwaccess="R/W"/> 
		<bitfield id="U3EXTIEN" width="1" begin="5" end="5" resetval="0x0" description="SS link U3 state exit interrupt enable [wakeup]. This bit enables requesting an U3EXTI interrupt." range="5" rwaccess="R/W"/> 
		<bitfield id="U3ENTIEN" width="1" begin="4" end="4" resetval="0x0" description="SS link U3 state enter interrupt enable [suspend]. This bit enables requesting an U3ENTI interrupt." range="4" rwaccess="R/W"/> 
		<bitfield id="UHRESIEN" width="1" begin="3" end="3" resetval="0x0" description="USB SS hot reset interrupt enable. This bit enables requesting an UHRESI interrupt." range="3" rwaccess="R/W"/> 
		<bitfield id="UWRESIEN" width="1" begin="2" end="2" resetval="0x0" description="USB SS warm reset interrupt enable. This bit enables requesting an UWRESI interrupt." range="2" rwaccess="R/W"/> 
		<bitfield id="DISIEN" width="1" begin="1" end="1" resetval="0x0" description="SS disconnection interrupt enable. This bit enables requesting a DISI interrupt." range="1" rwaccess="R/W"/> 
		<bitfield id="CONIEN" width="1" begin="0" end="0" resetval="0x0" description="SS connection interrupt enable. This bit enables requesting a CONI interrupt." range="0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_usb_ists" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_usb_ists" offset="0x20018" width="32" description="USB Interrupt Status Register
Each bit (interrupt flag) from this register can be cleared by writing '1'.">
		<bitfield id="RESERVED4" width="2" begin="31" end="30" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="31 - 30" rwaccess="R"/> 
		<bitfield id="UWRESEI" width="1" begin="29" end="29" resetval="0x0" description="End of the USB warm reset detected.  This interrupt is requested after the SuperSpeed warm reset ends. This interrupt is reported on the irqs[0] pin." range="29" rwaccess="R/W1TC"/> 
		<bitfield id="UWRESSI" width="1" begin="28" end="28" resetval="0x0" description="Start of the USB warm reset detected.  This interrupt is requested as soon as the SuperSpeed warm reset signalling is detected. This interrupt is reported on the irqs[0] pin." range="28" rwaccess="R/W1TC"/> 
		<bitfield id="RESERVED3" width="1" begin="27" end="27" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="27" rwaccess="R"/> 
		<bitfield id="CFGRESI" width="1" begin="26" end="26" resetval="0x0" description="USB configuration reset detected. This interrupt is requested after the device internally resets its endpoints onfiguration. This is done after each USB reset [UWRESI, UWRESI or U2RESI], after each connection event [CONI, CON2I] and after configuration reset initiated by software [USB_CONF.CFGRST]. Generally this interrupt is generated in the same time as mentioned interrupts, however due to internal clock domain synchronisation this configuration reset can be performed a little later, so one can use this interrupt to perform some software operations. This interrupt informs that controller did the following operations: disabled all non control endpoints, cleared all pending endpoints transfers and interrupts. The configuration reset does not clear general device configuration [set in USB_CONF] and EP0 configuration settings. This interrupt is reported on the irqs[0] pin." range="26" rwaccess="R/W1TC"/> 
		<bitfield id="L1EXTI" width="1" begin="25" end="25" resetval="0x0" description="LPM L1 state exit detected This interrupt informs that HS/FS LPM exit L1 state.  This interrupt is reported on the irqs[0] pin." range="25" rwaccess="R/W1TC"/> 
		<bitfield id="L1ENTI" width="1" begin="24" end="24" resetval="0x0" description="LPM L1 state enter detected This interrupt informs that HS/FS LPM enter L1 state. This interrupt is reported on the irqs[0] pin." range="24" rwaccess="R/W1TC"/> 
		<bitfield id="RESERVED2" width="2" begin="23" end="22" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="23 - 22" rwaccess="R"/> 
		<bitfield id="L2EXTI" width="1" begin="21" end="21" resetval="0x0" description="LPM L2 state exit detected This interrupt informs that HS/FS LPM exit L2 state. This interrupt is reported on the irqs[1] pin." range="21" rwaccess="R/W1TC"/> 
		<bitfield id="L2ENTI" width="1" begin="20" end="20" resetval="0x0" description="LPM L2 state enter detected This interrupt informs that HS/FS LPM enter L2 state. This interrupt is reported on the irqs[0] pin." range="20" rwaccess="R/W1TC"/> 
		<bitfield id="RESERVED1" width="1" begin="19" end="19" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="19" rwaccess="R"/> 
		<bitfield id="U2RESI" width="1" begin="18" end="18" resetval="0x0" description="USB reset [HS/FS mode] detected This interrupt is requested after the USB reset in HS/FS mode ends.  This interrupt is reported on the irqs[0] pin." range="18" rwaccess="R/W1TC"/> 
		<bitfield id="DIS2I" width="1" begin="17" end="17" resetval="0x0" description="HS/FS mode disconnection detected This interrupt informs that HS/FS upstream port was disconncted from the USB line. This interrupt is reported on the irqs[0] pin." range="17" rwaccess="R/W1TC"/> 
		<bitfield id="CON2I" width="1" begin="16" end="16" resetval="0x0" description="HS/FS mode connection detected This interrupt informs that HS/FS upstream port was conncted to the USB line This interrupt is reported on the irqs[0] pin." range="16" rwaccess="R/W1TC"/> 
		<bitfield id="RESERVED0" width="3" begin="15" end="13" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="15 - 13" rwaccess="R"/> 
		<bitfield id="SPKTI" width="1" begin="12" end="12" resetval="0x0" description="Send Custom Packet This interrupt informs that Custom Packet prepared in the USB_CPKT1-3 registers and triggered with USB_CMD.SPKT bit was already sent. This interrupt is reported on the irqs[0] pin." range="12" rwaccess="R/W1TC"/> 
		<bitfield id="WAKEI" width="1" begin="11" end="11" resetval="0x0" description="This interrupt informs that at wakeup pin appeared active state. This interrupt is reported on the irqs[1] pin." range="11" rwaccess="R/W1TC"/> 
		<bitfield id="ITPI" width="1" begin="10" end="10" resetval="0x0" description="ITP/SOF packet detected In SuperSpeed mode this interrupt informs that ITP packet was received. In FS/HS mode this interrupt informs that SOF was detected. This interrupt is reported on the irqs[0] pin." range="10" rwaccess="R/W1TC"/> 
		<bitfield id="U1EXTI" width="1" begin="9" end="9" resetval="0x0" description="SS link U1 state exit detected This interrupt informs that SuperSpeed link exit U1 state. This interrupt is reported on the irqs[0] pin." range="9" rwaccess="R/W1TC"/> 
		<bitfield id="U1ENTI" width="1" begin="8" end="8" resetval="0x0" description="SS link U1 state enter detected This interrupt informs that SuperSpeed link enter U1 state. This interrupt is reported on the irqs[0] pin." range="8" rwaccess="R/W1TC"/> 
		<bitfield id="U2EXTI" width="1" begin="7" end="7" resetval="0x0" description="SS link U2 state exit detected This interrupt informs that SuperSpeed link exit U2 state. This interrupt is reported on the irqs[0] pin." range="7" rwaccess="R/W1TC"/> 
		<bitfield id="U2ENTI" width="1" begin="6" end="6" resetval="0x0" description="SS link U2 state enter detected This interrupt informs that SuperSpeed link enter U2 state. This interrupt is reported on the irqs[0] pin." range="6" rwaccess="R/W1TC"/> 
		<bitfield id="U3EXTI" width="1" begin="5" end="5" resetval="0x0" description="SS link U3 state exit detected [wakeup] This interrupt informs that SuperSpeed link exit U3 state. This interrupt is reported on the irqs[1] pin." range="5" rwaccess="R/W1TC"/> 
		<bitfield id="U3ENTI" width="1" begin="4" end="4" resetval="0x0" description="SS link U3 state enter detected [suspend] This interrupt informs that SuperSpeed link enter U3 state. This interrupt is reported on the irqs[0] pin." range="4" rwaccess="R/W1TC"/> 
		<bitfield id="UHRESI" width="1" begin="3" end="3" resetval="0x0" description="USB SS hot reset detected This interrupt is requested after the SuperSpeed hot reset ends.  This interrupt is reported on the irqs[0] pin." range="3" rwaccess="R/W1TC"/> 
		<bitfield id="UWRESI" width="1" begin="2" end="2" resetval="0x0" description="USB SS warm reset detected This interrupt is requested after the SuperSpeed warm reset ends or when USBSS-DEVs LTSSM exits Polling.LFPS state. After this reset, SW should reininitialize the controller. This interrupt is reported on the irqs[0] pin." range="2" rwaccess="R/W1TC"/> 
		<bitfield id="DISI" width="1" begin="1" end="1" resetval="0x0" description="SS disconnection detected This interrupt informs that SuperSpeed link was disconncted from the USB line. This interrupt is reported on the irqs[0] pin." range="1" rwaccess="R/W1TC"/> 
		<bitfield id="CONI" width="1" begin="0" end="0" resetval="0x0" description="SS connection detected This interrupt informs that SuperSpeed link was conncted to the USB line This interrupt is reported on the irqs[0] pin." range="0" rwaccess="R/W1TC"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ep_sel" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ep_sel" offset="0x2001C" width="32" description="Endpoint Select Register
This register is used in conjunction with Endpoint Configuration, Command, Status, and Transfer ring address registers. If processor wants to access a specific endpoint, it has to first identify this endpoint by selecting it in Endpoint select register.">
		<bitfield id="RESERVED1" width="24" begin="31" end="8" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="31 - 8" rwaccess="R"/> 
		<bitfield id="DIR" width="1" begin="7" end="7" resetval="0x0" description="Selected Endpoint direction. 0-OUT Endpoint selected, 1-IN Endpoint selected" range="7" rwaccess="R/W"/> 
		<bitfield id="RESERVED0" width="3" begin="6" end="4" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="6 - 4" rwaccess="R"/> 
		<bitfield id="EPNO" width="4" begin="3" end="0" resetval="0x0" description="Selected Endpoint number" range="3 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ep_traddr" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ep_traddr" offset="0x20020" width="32" description="Endpoint Transfer Ring Address Register
All bytes of the register must be written, to store the TRADDR value. If all bytes of this register are not written at the same time (e.g. byte access), the MSB must be written at the end of the operation">
		<bitfield id="TRADDR" width="32" begin="31" end="0" resetval="0x0" description="Transfer Ring address. Address of transfer ring for endpoint selected by endpoint select register. Based on this address, DMA will fetch transfer descriptors from system memory. This register can be used as dequeue pointer.  CPU can use this register [read it or write to it] only when endpoint is configured and enabled [using EP_CFG register]" range="31 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ep_cfg" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ep_cfg" offset="0x20024" width="32" description="Endpoint Configuration Register
The endpoint configuration can be changed only once after reset (or configuration reset: USB_CONF.CFGRST). While the device is not in the CONFIGURED state, each write to EP_CFG register allocates space for endpoint configuration in on-chip memory (this is done automatically by the hardware and invisible to the software). That is why write to this register for one endpoint can be executed only once during setup of the device.
When the software finishes the device configuration (i.e. all required endpoints have been enabled), it has to set the USB_CONF.CFGSET bit to inform the hardware that the device is in CONFIGURED state. In this state, writing to EP_CFG register can change only ENABLE, ENDIAN and STREAM_EN bits and does not allocate space for endpoint configuration in on-chip memory.
All bytes of the register must be written during endpoint configuration. If all bytes of this register are not written at the same time (e.g. byte access), the MSB must be written at the end of the operation.">
		<bitfield id="BUFFERING" width="5" begin="31" end="27" resetval="0x0" description="Max number of buffered packets. The maximum number of packets the device can buffer in the on-chip memory for a specified endpoint. Valid values are from 0 to 15.  Value 0 means that 1 on-chip buffer is available for the appropriate endpoint. Value 15 means that 16 on-chip buffers are available for the appropriate endpoint. Each IN endpoint has individual buffers associated with it. OUT endpoints have common buffers, so buffering for OUT endpoints is determined by the maximum buffering value along all enabled OUT endpoints. The number of possible endpoint buffers depends on the on-chip memory size and the size of endpoint buffers." range="31 - 27" rwaccess="R/W"/> 
		<bitfield id="MAXPKTSIZE" width="11" begin="26" end="16" resetval="0x0" description="Max packet size. The maximum packet size this endpoint is capable of sending or receiving.  SuperSpeed mode: For control endpoints, this field is set to 512. For bulk endpoint types, this field is set to 1024. For interrupt and isochronous endpoints, this field is set to 1024 if this endpoint defines a value in the bMaxBurst field greater than zero. If the value in the bMaxBurst field is set to zero, then this field can have any value from 0 to 1024 for an isochronous endpoint, and 1 to 1024 for an interrupt endpoint. High Speed/Full Speed mode: For control endpoints, this field is set to 64. For  other endpoint types this field can have any value from 0 to 1024." range="26 - 16" rwaccess="R/W"/> 
		<bitfield id="MULT" width="2" begin="15" end="14" resetval="0x0" description="ISO max burst SuperSpeed mode: A zero-based value that indicates the maximum number of bursts within a service interval that this endpoint supports. This field is only valid for isochronous endpoints. A value of zero indicates that the device supports one Burst of bMaxBurst packets per service interval. The max value that can be set in this field in SuperSpeed is '2'. HS/FS mode: This field indicates how many packets will be transferred during micro frame. In Full-Speed mode only one ISO IN packet can be transferred per endpoint, per frame, thus this field has to be always '0'. In High-Speed mode, up to three ISO IN packets can be transferred per endpoint, per microframe, so the max value that can be set in this field in HighSpeed is '2'." range="15 - 14" rwaccess="R/W"/> 
		<bitfield id="RESERVED1" width="2" begin="13" end="12" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="13 - 12" rwaccess="R"/> 
		<bitfield id="MAXBURST" width="4" begin="11" end="8" resetval="0x0" description="Maximum Burst size. The maximum number of packets the endpoint can send or receive as part of a burst. Valid values are from 0 to 15. A value of 0 indicates that the endpoint can only burst one packet at a time, and a value of 15 indicates that the endpoint can burst up to 16 packets at a time. For endpoints of type control this is set to 0. This field is meaningfull only in SuperSpeed mode." range="11 - 8" rwaccess="R/W"/> 
		<bitfield id="EPENDIAN" width="1" begin="7" end="7" resetval="0x0" description="DMA transfer endianness. When the conversion is ON, the byte order within DWORD is inverted. While the bit is set, the software confirms that the transfer length is a multiplication of 4 bytes.  Enabling the conversion is possible only when SUPPORT_ENDIANESS_CONV is defined. By default this parameter is not defined, so endianess conversion is disabled. 0:  Endianess conversion OFF 1: Endianess conversion ON " range="7" rwaccess="R/W"/> 
		<bitfield id="RESERVED0" width="1" begin="6" end="6" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="6" rwaccess="R"/> 
		<bitfield id="SID_CHK" width="1" begin="5" end="5" resetval="0x0" description="SID check[only in SS mode for BULK OUT EP] This field can be set only for SS bulk OUT endpoints with stream support enabled 1] If SID_CHK bit is set, the device checks whether the incoming packets from the host to the particular OUT endpoint have the SID field set to the expected value. If the packet has an expected SID value is then taken and stored in the on-chip device buffers. If the packet has a different SID than expected, then the packet is rejected [NRDY] and the SIDERROR interrupt is reported to the software. The value of the SID to which incoming packets will be compared, are written to the device during sending ERDY TP [EP_CMD.ERDY and EP_CMD.ERDY_SID]. The SID value from the incoming packet that has been rejected and caused the SIDERR interrupt can be read from the EP_STS_SID register. 2] If SID_CHK bit is not set, then each packet from the host is taken to the on-chip buffers is transmitted by the DMA regardless of the SID field in the TD. 0: SID chceck at device input OFF 1: SID chceck at device input ON" range="5" rwaccess="R/W"/> 
		<bitfield id="TDL_CHK" width="1" begin="4" end="4" resetval="0x0" description="TDL check[only in SS mode for BULK OUT EP]. This field has to be set for stream capable SS bulk endpoints and it can be set for other bulk endpoint. The OUT bulk endpoints If the TDL_CHK bit is set if the device takes the packets to the OUT endpoint only when the value of the TDL [EP_CMD.TDL] for this endpoint is different from zero. Each received packet for the particular endpoint decrements the value of a TDL. If the TDL_CHK bit is not set, then each packet from the host to the OUT endpoint is taken as long as it free space in the on-chip device buffers.  The IN bulk endpoints This bit is is used by USBSS_DEV to set EOB bit when TDL [programmed value] reach zero. 0: Do not check the TDL value when sending/receiving packets to the endpoints 1: Check the TDL value when sending/receiving packets to the endpoint" range="4" rwaccess="R/W"/> 
		<bitfield id="STREAM_EN" width="1" begin="3" end="3" resetval="0x0" description="Stream support enable [only in SS mode]. This bit must be set to enable a stream transfes on a bulk endpoint  0: Stream support OFF 1: Stream support ON" range="3" rwaccess="R/W"/> 
		<bitfield id="EPTYPE" width="2" begin="2" end="1" resetval="0x0" description="Endpoint type.  0: control, 1: isochronous, 2: bulk, 3: interrupt. Endpoint type is programmable, however, certain types of transmissions require hardware support that must be incorporated prior to implementation. That can be done only for selected endpoints. Selective inclusion of hardware support is to reduce the size of the controller. Accordingly: - Endpoint-type iso should be set by the software only for those endpoints for which isochronous transmission hardware support is enabled. - A bulk endpoint can handle transmission with Bulk Streams support only for those endpoints for which Bulk Stream transmission hardware support is enabled. For detailed description how to implement hardware support for ISO transfers or Bulk Stream transfers see chapter 'Endpoints Implementation'." range="2 - 1" rwaccess="R/W"/> 
		<bitfield id="ENABLE" width="1" begin="0" end="0" resetval="0x0" description="Endpoint enable. If endpoint is disabled [the ENABLE bit is cleared], the endpoint will not: - request any interrupts - start any transmission over the DMA Even if Endpoint is disabled, software can set DRDY bit for it, but the DMA transmission will not begin until the endpoint is enabled. 0: disabled 1: enabled Reset value of this bit for EP0 is 1, for other EP's is 0." range="0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ep_cmd" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ep_cmd" offset="0x20028" width="32" description="Endpoint Command Register">
		<bitfield id="ERDY_SID" width="16" begin="31" end="16" resetval="0x0" description="ERDY Stream ID value [used in SS mode]. This field contains SID - it will be sent to host in ERDY packet [by writing '1' to ERDY]. This field is meaningfull only in SuperSpeed mode." range="31 - 16" rwaccess="R/W"/> 
		<bitfield id="RESERVED1" width="8" begin="15" end="8" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="15 - 8" rwaccess="R"/> 
		<bitfield id="DFLUSH" width="1" begin="7" end="7" resetval="0x0" description="Data flush. Writing '1' to this bit performs the following actions for particular endpoint: - clears DRDY bit and stops DMA transfer - flush endpoint data from on chip buffers As in case of Endpoint reset [EPRST bit], after endpoint data flush the software is responsible for it to re-set the Endpoint TRADDR. When DFLUSH operation is started ['1' is written], CPU must wait until this bit becomes again '0' [it indicates that HW finishes all internal opertations related to DFLUSH], and only then can proceed with next software operations. Writing '0' has no effect." range="7" rwaccess="R/W"/> 
		<bitfield id="DRDY" width="1" begin="6" end="6" resetval="0x0" description="Transfer descriptor ready. Transfer Descriptor Ready for selected endpoint [0 - no effect, 1 - starts transfer]. Writing '1' to this bit informs USBSS-DEV that in-system memory has prepared a new Transfer Descriptor for selected endpoints. If an IN endpoint is 'Not Ready' [NRDY=1 in Endpoint Status Register], then setting the DRDY bit [which is proceeded by DMA transfer to the on-chip buffers] will cause the device to send the ERDY packet. If the TRB error occurs, the DRDY bit is cleared and held in the low state until the TRBERR is not cleared [even if the DTRANS bit is set i.e. the Multiple TRB chain mode is enabled].  This bit is duplicated in the Doorbell register. Writing '1' to this bit while DESCMIS interrupt flag is set for the same endpoint will also clear the DESCMIS flag." range="6" rwaccess="R/W"/> 
		<bitfield id="REQ_CMPL" width="1" begin="5" end="5" resetval="0x0" description="Request complete. 0 : no effect  1 : informs device that Request service is complete Bit valid only for endpoint 0. Writing '1' to this bit informs USBSS-DEV that software finished USB request service and device can send ACK answer for the Status Stage within USB request. This bit is automatically cleared by USBSS-DEV after device answers to the status stage with ACK or STALL. Until software do not set this bit, during proceeding current host request, the device will answer to the status stage with NRDY  answer." range="5" rwaccess="R/W"/> 
		<bitfield id="RESERVED0" width="1" begin="4" end="4" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="4" rwaccess="R"/> 
		<bitfield id="ERDY" width="1" begin="3" end="3" resetval="0x0" description="Send ERDY TP. Writing '1' to this bit forces the device to send ERDY TP with stream ID equal to ERDY_SID.  This bit is necessary to support SS bulk stream transfers. This bit is also used during control transfers [in both modes: HS/FS and SS]: writing '1' instruct device controller HW that it can exit from Setup Stage to the Data Stage [or directly to the Status Stage if USB Request is without Data Stage]. However the ERDY packet is only actually sent in SS mode. Writing '0' has no effect." range="3" rwaccess="R/W"/> 
		<bitfield id="CSTALL" width="1" begin="2" end="2" resetval="0x0" description="Endpoint STALL clear. Writing '1' to this bit cause the endpoint becames not halted. 0: no effect  1: clears endpoint STALL" range="2" rwaccess="R/W1TC"/> 
		<bitfield id="SSTALL" width="1" begin="1" end="1" resetval="0x0" description="Endpoint STALL set. Writing '1' to this bit cause the endpoint is halted. 0: no effect  1: STALLs endpoint" range="1" rwaccess="R/W"/> 
		<bitfield id="EPRST" width="1" begin="0" end="0" resetval="0x0" description="Endpoint reset. 0: no effect  1: resets endpoint This command performs the following actions for particular endpoint: - clears DRDY bit and stops DMA transfer - clears on-chip buffers - clears sequence number in SS mode or Data Toggle in HS/FS mode This command does not clear Endpoint interrupt if already requested [irq[0] pin was asserted] thus it is recommended first to clear all interrupts from endpoint scheduled to reset.   When EPRST operation is started ['1' is written], CPU must wait until this bit becomes again '0' [it indicates that HW finishes all internal opertations related to DFLUSH], and only then can proceed with next software operations. Additionally, when DMA already started processing TD for this EP, the EPRST command cause that DMA engine will once more access the descriptor in external memory.  After endpoint reset the software is responsible for it to re-set the Endpoint TRADDR. Writing '0 'has no effect." range="0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ep_sts" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ep_sts" offset="0x2002C" width="32" description="Endpoint Status Register.
The EP_STS register consists of two types of bits: 
- Interrupt flags (RW1C bits). If any of these bit is active (set to '1') and not masked (with an  EP_STS_EN register) then the interrupt is requested (irqs[0] line is set to high). To clear these bits, the software must write a '1' at the apptopriate field.
- Status bits (RO bits). These bits are not taken into account for interrupt generation (not reported in EP__ISTS register nor on irqs output), and SW is not expected to clear them">
		<bitfield id="STPWAIT" width="1" begin="31" end="31" resetval="0x0" description="Bit used only for EP0. If setup packet is received correctly and stored in the on-chip buffer, this bit is set to 1 and interrupt is generated. Setup packet is applicable only to control transmissions [EP0]. This interrupt can be masked by the corresponding bit in EP_STS_EN register. Writing '1' to this bit clears the interrupt." range="31" rwaccess="R/W1TC"/> 
		<bitfield id="RESERVED1" width="2" begin="30" end="29" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="30 - 29" rwaccess="R"/> 
		<bitfield id="OUTQ_VAL" width="1" begin="28" end="28" resetval="0x0" description="OUT queue valid flag. This field indicates whether the endpoint number of the OUT packet waiting for transmission by the DMA, is valid or not. In other words, whether the packet queue is not empty. As there is one buffers queue for all Out Endpoints, this field is not endpoint related, and thus it can be read regardless of current value stored in the EP_SEL register. 0 - queue of out packets is empty thus OUTQ_NO is not valid 1 - queue of out packets is not empty thus OUTQ_NO is valid This bit is only a status bit [not an interrupt flag]." range="28" rwaccess="R"/> 
		<bitfield id="OUTQ_NO" width="4" begin="27" end="24" resetval="0x0" description="OUT queue endpoint number. This field shows the number of the endpoint to which the packet, received by the host, currently is waiting to be transmitted by the DMA from the on-chip buffers to the system memory.  As there is one buffers queue for all Out Endpoints, this field is not endpoint related, and thus it can be read regardless of current value stored in the EP_SEL register. This bit is only a status bit [not an interrupt flag]." range="27 - 24" rwaccess="R"/> 
		<bitfield id="RESERVED0" width="4" begin="23" end="20" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="23 - 20" rwaccess="R"/> 
		<bitfield id="IOT" width="1" begin="19" end="19" resetval="0x0" description="Interrupt On Transfer complete. This interrupt is generated when the TDL is decremented to zero.  It means that the device  -	does not expect to have more packets from the host [OUT EP]  -	does not want to send more packets [IN EP] More information can be found in the description of EP_TDL register. Writing '1' to this bit clears the interrupt." range="19" rwaccess="R/W1TC"/> 
		<bitfield id="SPSMST" width="2" begin="18" end="17" resetval="0x0" description="Stream Protocol State Machine State [only for Bulk stream endpoints] This field is valid only for stream capable bulk endpoints and reflects the current state of the Stream Protocol State Machine for selected endpoint: 0 - DISABLED 1 - IDLE 2 - START_STREAM 3 - MOVE_DATA Soft should check if the SPSM is in IDLE state before sending ERDY TP from stream EP [leading to the transition from IDE to START_STREAM]  Before software will order to send an ERDY TP from stream capable endpoint [leading to the transition from IDLE to START_STREAM] it should first check if the SPSM is in IDLE state. This bit is only a status bit [not an interrupt flag]." range="18 - 17" rwaccess="R"/> 
		<bitfield id="HOSTPP" width="1" begin="16" end="16" resetval="0x0" description="Host Packet Pending [only for SS mode]. Depending on whether the endpoint is enabled for streams or not, this bit behaves as follows: 1]For stream enabled bulk endpoints [EP_CFG.EPSTREAM_EN bit set]: This bit reflects the PP bit in the last packet received from the host during Move Data state of the DOSPSM for the OUT endpoint. This bit is updated on exit from the MOVE DATA state of the DOSPSM and can be analyzed during servicing MD_EXIT interrupt for BULK OUT endpoint with Stream support enabled.  If this bit is set to '0' during MD_EXIT interrupt, it means that the host terminated current stream. If this bit is set to '1' during MD_EXIT interrupt, it means that the host doesn't terminated current stream and still has data for this stream. 2]Non stream bulk endpoints [EP_CFG.EPSTREAM_EN bit not set]: This bit reflects the PP bit in the packets received from the host. This bit is updated as long as the EP_CMD.TDL is nonzero and it can be analyzed during servicing IOT interrupt for BULK endpoints. This bit is only a status bit [not an interrupt flag]." range="16" rwaccess="R"/> 
		<bitfield id="ISOERR" width="1" begin="15" end="15" resetval="0x0" description="ISO transmission error. Error of isochronous transmission. This bit is set during data transmission to/from ISO endpoints while the last data transfer at PIPE IF is in current micro frame. For ISO IN endpoints: If host asks for data packet and device is not ready for sent data immediatelly, then ISOERR flag is set for particular endpoint and core sends a 0-length DATA packet to the host. The next data portion transfer [for the next micro frame] from system memory to on-chip buffers is automatically started [when EP_CMD.DRDY bit is set or DMA works in DMULT mode]. For ISO OUT endpoints: When host issues an OUT data packet for the specific endpoint but the OUT buffers are full, then device is unable to receive data packet and the ISOERR flag is set. For more information about ISO trasfer see chapter 'Isochronous Transfers'. This interrupt can be masked by the corresponding bit in EP_STS_EN register. Writing '1' to this bit clears the interrupt." range="15" rwaccess="R/W1TC"/> 
		<bitfield id="OUTSMM" width="1" begin="14" end="14" resetval="0x0" description="OUT size mismatch. This bit is set when host sends a different data size than device was anticipating [according to Data Length field in TRB].  In such a case, the DMA updates length field in current TRB, updates TRADDR [next TRB address], and triggers the interrupt. DMA will not start processing TRB ring of this EP until its DRDY is set. This interrupt can be masked by the corresponding bit in EP_STS_EN register. Writing '1' to this bit clears the interrupt." range="14" rwaccess="R/W1TC"/> 
		<bitfield id="SIDERR" width="1" begin="13" end="13" resetval="0x0" description="Stream error [used only in SS mode] If host requested IN [sent OUT] packet with particular Stream ID, and device is actually programmed to transfer packets with different Stream ID [SID written in the EP_CMD.ERDY_SID field] the host IN request [OUT packet] is rejected [NRDY] and the SIDERR interrupt is requested. In case of IN direction, the SIDERR interrupt will not be requested when device is not prepared for any transfer [EP_CMD.TDL= 0 for this endpoint]. In this case [and additionally when EP_CMD.DRDY= 0 and   EP_STS.DBUSY=0], the DESCMIS interrupt will be requested. This interrupt can be masked by the corresponding bit in EP_STS_EN register. Writing '1' to this bit clears the interrupt." range="13" rwaccess="R/W1TC"/> 
		<bitfield id="PRIME" width="1" begin="12" end="12" resetval="0x0" description="Prime [used only in SS mode]. This bit is set when the device receives the packet with PRIME ID. This interrupt can be masked by the corresponding bit in EP_STS_EN register. Writing '1' to this bit clears the interrupt." range="12" rwaccess="R/W1TC"/> 
		<bitfield id="CCS" width="1" begin="11" end="11" resetval="0x1" description="Current Cycle Status. Informs about current value of C bit corresponding to DMA ownership of TRBs for selected endpoint. For more information about TRBs C bit see chapter 2.11.3. This bit is only a status bit [not an interrupt flag]." range="11" rwaccess="R"/> 
		<bitfield id="BUFFEMPTY" width="1" begin="10" end="10" resetval="0x1" description="Endpoint Buffer Empty. When this bit is set to '1', there are no packets for the particular endpoint in the on-chip buffers.  This bit is only a status bit [not an interrupt flag]." range="10" rwaccess="R"/> 
		<bitfield id="DBUSY" width="1" begin="9" end="9" resetval="0x0" description="DMA busy. This bit is set to '1' while the DMA services the endpoint. Through the service means either actual transmission of data between on-chip cache and system memory for particular endpoint or a pending data transmission which has already begun but was interrupted by endpoint with a higher priority. Such pending transmissions will begin automatically themselves after these higher priority. This bit is only a status bit [not an interrupt flag]." range="9" rwaccess="R"/> 
		<bitfield id="NRDY" width="1" begin="8" end="8" resetval="0x0" description="Not ready [used only in SS mode]. This bit is automatically set to 1 when for some reason endpoint enters Flow Control. If ERDY is sent automatically by the endpoint [what is done when current TDL value is greater then zero], this interrupt bit is not automatically cleared [although the endpoint itself leaves FlowControl].  Note: For BULK OUT endpoints with TDL_CHK bit seting this interrupt should be used instead of DESCMIS interrupt. See also DESCMIS description. Writing '1' to this bit clears the interrupt." range="8" rwaccess="R/W1TC"/> 
		<bitfield id="TRBERR" width="1" begin="7" end="7" resetval="0x0" description="TRB error. This bit is set if DMA read corrupted TRB [wrong C bit value or TRB type]. Address of the TRB is stored in the EP_TRADDR register. This interrupt can be masked by the corresponding bit in EP_STS_EN register. If this error occurs, the bit DRDY is cleared and held in the low state until the TRBERR is not cleared. To start the DMA again, the software has to clear this interrupt and set the DRDY bit once more. Writing '1' to this bit clears the interrupt." range="7" rwaccess="R/W1TC"/> 
		<bitfield id="MD_EXIT" width="1" begin="6" end="6" resetval="0x0" description="EXIT from MOVE DATA State [used only for stream transfers in SS mode] This bit is set to '1' if stream capable endpoint exits from MOVE DATA state of Bulk IN/OUT Stream Ptrotocol State Machine [ISPSM/OSPSM]. Stream support is class-dependent.  This interrupt can be masked by the corresponding bit in MD_EXITEN register. Writing '1' to this bit clears the interrupt." range="6" rwaccess="R/W1TC"/> 
		<bitfield id="STREAMR" width="1" begin="5" end="5" resetval="0x0" description="Stream Rejected [used only in SS mode]. This bit is set to '1' if device tries to initiate stream number and host does not accept it. Stream support is class-dependent.  This interrupt can be masked by the corresponding bit in STREAMREN register. Writing '1' to this bit clears the interrupt." range="5" rwaccess="R/W1TC"/> 
		<bitfield id="DESCMIS" width="1" begin="4" end="4" resetval="0x0" description="Transfer descriptor missing. This bit is set to 1 and interrupt is generated when any of the following conditions are met: - device is requested to send data to host and none of Transfer Descriptor is prepared [IN transfer] - device receives OUT packet and cannot transmit it using DMA as Transfer Descriptor has not been prepared [DRDY was not set] for it [OUT transfer] Note1: This interrupt is not generated for ISO IN endpoints. For such endpoints the ISOERR interrupt should be used. Note2: DMA will not start operating on transfer descriptor array until the OUT packet is received [or host requests IN packet] and processor has not previously notified DMA [by writing to EP_CMD register of DRDY register]. Note2: For BULK OUT endpoints with TDL_CHK bit set this interrupt will not by requested as device will not accept any packet from host when TRB is not prepared [and TDL is not written with non-zero value]. In this case the NRDY interrupt should be used instead of DESMIS. Writing '1' to this bit or writing '1' to EP_CMD.DRDY bit of endpoints which generated interrupt will delete the interrupt. This interrupt can be masked by the corresponding bit in EP_STS_EN register. Writing '1' to this bit clears the interrupt." range="4" rwaccess="R/W1TC"/> 
		<bitfield id="ISP" width="1" begin="3" end="3" resetval="0x0" description="Interrupt on Short Packet. This bit is set to 1 and interrupt is generated when a transfer containing less data than MaxPacket for a given endpoint has been completed and transfer descriptor has been updated.Enabling or disabling of interrupt is realized by ISP bit in transfer descriptor. Additionally, this interrupt can be masked for a particular endpoint in EP__ISTS register. When in given transfer descriptor both interrupts are enabled [IOC and ISP], then in the case of short packet only one interrupt is generated - SP.  Writing '1' to this bit clears the interrupt." range="3" rwaccess="R/W1TC"/> 
		<bitfield id="IOC" width="1" begin="2" end="2" resetval="0x0" description="Interrupt On Complete When DMA transfer is completed and transfer descriptor is updated, then this bit is set to 1 and interrupt is generated. Enabling or disabling of this interrupt is realized by IOC bit in transfer descriptor. Additionally, this interrupt can be masked for a particular endpoint in EP__ISTS register. When in given transfer descriptor both interrupts [IOC and ISP interrupts] are enabled, then in the case of short packet, only one interrupt is generated - SP.  Writing '1' to this bit clears the interrupt." range="2" rwaccess="R/W1TC"/> 
		<bitfield id="STALL" width="1" begin="1" end="1" resetval="0x0" description="Endpoint STALL status 0 - endpoint is not stalled 1 - endpoint is stalled This bit is not treated as an interrupt [not reported in the EP__ISTS register]. This bit is read-only." range="1" rwaccess="R"/> 
		<bitfield id="SETUP" width="1" begin="0" end="0" resetval="0x0" description="Setup transfer complete. Bit used only for EP0. If setup type transmission has been completed and data from host has been received and copied to system memory, this bit is set to '1' and interrupt is generated. Setup packet is applicable only to control transmissions [EP0].  This interrupt can be masked by the corresponding bit in EP_STS_EN register. Writing '1' to this bit clears the interrupt." range="0" rwaccess="R/W1TC"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ep_sts_sid" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ep_sts_sid" offset="0x20030" width="32" description="Endpoint Status Register">
		<bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="31 - 16" rwaccess="R"/> 
		<bitfield id="SID" width="16" begin="15" end="0" resetval="0x0" description="Stream ID [used only in SS mode]. Stream ID of packet, which generates interrupt. The interrupts that update the SID field are: -	SIDERR for EP OUT -	SIDERR/DESCMIS for EP IN For the above interrupts, the values of the SID field reflects: -	in case of SIDERR for EP OUT this field reflects the Stream ID of OUT packet sent by host which was rejected by the device, due to SID_CHK bit set -	in case of SIDERR/DESCMIS for EP IN this field reflects the Stream ID of ACK TP sent by host which was rejected by the device." range="15 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ep_sts_en" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ep_sts_en" offset="0x20034" width="32" description="Endpoint Status Register Enable">
		<bitfield id="STPWAITEN" width="1" begin="31" end="31" resetval="0x0" description="Setup Wait interrupt enable. This bit enables the STPWAIT interrupt. Valid only for EP0" range="31" rwaccess="R/W"/> 
		<bitfield id="RESERVED3" width="11" begin="30" end="20" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="30 - 20" rwaccess="R"/> 
		<bitfield id="IOTEN" width="1" begin="19" end="19" resetval="0x0" description="Interrupt on Transmission complete enable. This bit enables the IOT interrupt." range="19" rwaccess="R/W"/> 
		<bitfield id="RESERVED2" width="3" begin="18" end="16" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="18 - 16" rwaccess="R"/> 
		<bitfield id="ISOERREN" width="1" begin="15" end="15" resetval="0x0" description="ISO transmission error enable. This bit enables the ISOERR interrupt." range="15" rwaccess="R/W"/> 
		<bitfield id="OUTSMMEN" width="1" begin="14" end="14" resetval="0x0" description=" OUT size mismatch enable. This bit enables the OUTSMM interrupt." range="14" rwaccess="R/W"/> 
		<bitfield id="SIDERREN" width="1" begin="13" end="13" resetval="0x0" description=" Stream error enable. This bit enables the SIDERR interrupt." range="13" rwaccess="R/W"/> 
		<bitfield id="PRIMEEN" width="1" begin="12" end="12" resetval="0x0" description="Prime enable. This bit enables the PRIME interrupt." range="12" rwaccess="R/W"/> 
		<bitfield id="RESERVED1" width="3" begin="11" end="9" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="11 - 9" rwaccess="R"/> 
		<bitfield id="NRDYEN" width="1" begin="8" end="8" resetval="0x0" description="NRDY enable. This bit enables the NRDY interrupt." range="8" rwaccess="R/W"/> 
		<bitfield id="TRBERREN" width="1" begin="7" end="7" resetval="0x0" description="TRB enable. This bit enables the TRBERR interrupt." range="7" rwaccess="R/W"/> 
		<bitfield id="MD_EXITEN" width="1" begin="6" end="6" resetval="0x0" description="Move Data Exit enable. This bit enables the MD_EXIT interrupt." range="6" rwaccess="R/W"/> 
		<bitfield id="STREAMREN" width="1" begin="5" end="5" resetval="0x0" description="Stream Rejected enable. This bit enables the STREAMR interrupt." range="5" rwaccess="R/W"/> 
		<bitfield id="DESCMISEN" width="1" begin="4" end="4" resetval="0x0" description="OUT transfer missing descriptor enable. This bit enables the DESCMIS interrupt." range="4" rwaccess="R/W"/> 
		<bitfield id="RESERVED0" width="3" begin="3" end="1" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="3 - 1" rwaccess="R"/> 
		<bitfield id="SETUPEN" width="1" begin="0" end="0" resetval="0x0" description="Setup transfer complete. This bit enables the SETUP interrupt. Valid only for EP0." range="0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_drbl" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_drbl" offset="0x20038" width="32" description="Doorbell Register - used for initiating transfers with one access to USBSS-DEV, without use of the EP_SEL register(+EP_CMD.DRDY) ">
		<bitfield id="DRBL15I" width="1" begin="31" end="31" resetval="0x0" description="Dorbel Bit - used for initiating transfers for selected Endpoint " range="31" rwaccess="R/W1TS"/> 
		<bitfield id="DRBL14I" width="1" begin="30" end="30" resetval="0x0" description="Dorbel Bit - used for initiating transfers for selected Endpoint " range="30" rwaccess="R/W1TS"/> 
		<bitfield id="DRBL13I" width="1" begin="29" end="29" resetval="0x0" description="Dorbel Bit - used for initiating transfers for selected Endpoint " range="29" rwaccess="R/W1TS"/> 
		<bitfield id="DRBL12I" width="1" begin="28" end="28" resetval="0x0" description="Dorbel Bit - used for initiating transfers for selected Endpoint " range="28" rwaccess="R/W1TS"/> 
		<bitfield id="DRBL11I" width="1" begin="27" end="27" resetval="0x0" description="Dorbel Bit - used for initiating transfers for selected Endpoint " range="27" rwaccess="R/W1TS"/> 
		<bitfield id="DRBL10I" width="1" begin="26" end="26" resetval="0x0" description="Dorbel Bit - used for initiating transfers for selected Endpoint " range="26" rwaccess="R/W1TS"/> 
		<bitfield id="DRBL9I" width="1" begin="25" end="25" resetval="0x0" description="Dorbel Bit - used for initiating transfers for selected Endpoint " range="25" rwaccess="R/W1TS"/> 
		<bitfield id="DRBL8I" width="1" begin="24" end="24" resetval="0x0" description="Dorbel Bit - used for initiating transfers for selected Endpoint " range="24" rwaccess="R/W1TS"/> 
		<bitfield id="DRBL7I" width="1" begin="23" end="23" resetval="0x0" description="Dorbel Bit - used for initiating transfers for selected Endpoint " range="23" rwaccess="R/W1TS"/> 
		<bitfield id="DRBL6I" width="1" begin="22" end="22" resetval="0x0" description="Dorbel Bit - used for initiating transfers for selected Endpoint " range="22" rwaccess="R/W1TS"/> 
		<bitfield id="DRBL5I" width="1" begin="21" end="21" resetval="0x0" description="Dorbel Bit - used for initiating transfers for selected Endpoint " range="21" rwaccess="R/W1TS"/> 
		<bitfield id="DRBL4I" width="1" begin="20" end="20" resetval="0x0" description="Dorbel Bit - used for initiating transfers for selected Endpoint " range="20" rwaccess="R/W1TS"/> 
		<bitfield id="DRBL3I" width="1" begin="19" end="19" resetval="0x0" description="Dorbel Bit - used for initiating transfers for selected Endpoint " range="19" rwaccess="R/W1TS"/> 
		<bitfield id="DRBL2I" width="1" begin="18" end="18" resetval="0x0" description="Dorbel Bit - used for initiating transfers for selected Endpoint " range="18" rwaccess="R/W1TS"/> 
		<bitfield id="DRBL1I" width="1" begin="17" end="17" resetval="0x0" description="Dorbel Bit - used for initiating transfers for selected Endpoint " range="17" rwaccess="R/W1TS"/> 
		<bitfield id="DRBL0I" width="1" begin="16" end="16" resetval="0x0" description="Dorbel Bit - used for initiating transfers for selected Endpoint " range="16" rwaccess="R/W1TS"/> 
		<bitfield id="DRBL15O" width="1" begin="15" end="15" resetval="0x0" description="Dorbel Bit - used for initiating transfers for selected Endpoint " range="15" rwaccess="R/W1TS"/> 
		<bitfield id="DRBL14O" width="1" begin="14" end="14" resetval="0x0" description="Dorbel Bit - used for initiating transfers for selected Endpoint " range="14" rwaccess="R/W1TS"/> 
		<bitfield id="DRBL13O" width="1" begin="13" end="13" resetval="0x0" description="Dorbel Bit - used for initiating transfers for selected Endpoint " range="13" rwaccess="R/W1TS"/> 
		<bitfield id="DRBL12O" width="1" begin="12" end="12" resetval="0x0" description="Dorbel Bit - used for initiating transfers for selected Endpoint " range="12" rwaccess="R/W1TS"/> 
		<bitfield id="DRBL11O" width="1" begin="11" end="11" resetval="0x0" description="Dorbel Bit - used for initiating transfers for selected Endpoint " range="11" rwaccess="R/W1TS"/> 
		<bitfield id="DRBL10O" width="1" begin="10" end="10" resetval="0x0" description="Dorbel Bit - used for initiating transfers for selected Endpoint " range="10" rwaccess="R/W1TS"/> 
		<bitfield id="DRBL9O" width="1" begin="9" end="9" resetval="0x0" description="Dorbel Bit - used for initiating transfers for selected Endpoint " range="9" rwaccess="R/W1TS"/> 
		<bitfield id="DRBL8O" width="1" begin="8" end="8" resetval="0x0" description="Dorbel Bit - used for initiating transfers for selected Endpoint " range="8" rwaccess="R/W1TS"/> 
		<bitfield id="DRBL7O" width="1" begin="7" end="7" resetval="0x0" description="Dorbel Bit - used for initiating transfers for selected Endpoint " range="7" rwaccess="R/W1TS"/> 
		<bitfield id="DRBL6O" width="1" begin="6" end="6" resetval="0x0" description="Dorbel Bit - used for initiating transfers for selected Endpoint " range="6" rwaccess="R/W1TS"/> 
		<bitfield id="DRBL5O" width="1" begin="5" end="5" resetval="0x0" description="Dorbel Bit - used for initiating transfers for selected Endpoint " range="5" rwaccess="R/W1TS"/> 
		<bitfield id="DRBL4O" width="1" begin="4" end="4" resetval="0x0" description="Dorbel Bit - used for initiating transfers for selected Endpoint " range="4" rwaccess="R/W1TS"/> 
		<bitfield id="DRBL3O" width="1" begin="3" end="3" resetval="0x0" description="Dorbel Bit - used for initiating transfers for selected Endpoint " range="3" rwaccess="R/W1TS"/> 
		<bitfield id="DRBL2O" width="1" begin="2" end="2" resetval="0x0" description="Dorbel Bit - used for initiating transfers for selected Endpoint " range="2" rwaccess="R/W1TS"/> 
		<bitfield id="DRBL1O" width="1" begin="1" end="1" resetval="0x0" description="Dorbel Bit - used for initiating transfers for selected Endpoint " range="1" rwaccess="R/W1TS"/> 
		<bitfield id="DRBL0O" width="1" begin="0" end="0" resetval="0x0" description="Dorbel Bit - used for initiating transfers for selected Endpoint " range="0" rwaccess="R/W1TS"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ep_ien" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ep_ien" offset="0x2003C" width="32" description="Endpoints Interrupt Enable Register (1 - enables interrupt, 0 - disables interrupt)">
		<bitfield id="EINEN15" width="1" begin="31" end="31" resetval="0x0" description="Endpoints Interrupt Enable Bit [1 - enables interrupt, 0 - disables interrupt]" range="31" rwaccess="R/W"/> 
		<bitfield id="EINEN14" width="1" begin="30" end="30" resetval="0x0" description="Endpoints Interrupt Enable Bit [1 - enables interrupt, 0 - disables interrupt]" range="30" rwaccess="R/W"/> 
		<bitfield id="EINEN13" width="1" begin="29" end="29" resetval="0x0" description="Endpoints Interrupt Enable Bit [1 - enables interrupt, 0 - disables interrupt]" range="29" rwaccess="R/W"/> 
		<bitfield id="EINEN12" width="1" begin="28" end="28" resetval="0x0" description="Endpoints Interrupt Enable Bit [1 - enables interrupt, 0 - disables interrupt]" range="28" rwaccess="R/W"/> 
		<bitfield id="EINEN11" width="1" begin="27" end="27" resetval="0x0" description="Endpoints Interrupt Enable Bit [1 - enables interrupt, 0 - disables interrupt]" range="27" rwaccess="R/W"/> 
		<bitfield id="EINEN10" width="1" begin="26" end="26" resetval="0x0" description="Endpoints Interrupt Enable Bit [1 - enables interrupt, 0 - disables interrupt]" range="26" rwaccess="R/W"/> 
		<bitfield id="EINEN9" width="1" begin="25" end="25" resetval="0x0" description="Endpoints Interrupt Enable Bit [1 - enables interrupt, 0 - disables interrupt]" range="25" rwaccess="R/W"/> 
		<bitfield id="EINEN8" width="1" begin="24" end="24" resetval="0x0" description="Endpoints Interrupt Enable Bit [1 - enables interrupt, 0 - disables interrupt]" range="24" rwaccess="R/W"/> 
		<bitfield id="EINEN7" width="1" begin="23" end="23" resetval="0x0" description="Endpoints Interrupt Enable Bit [1 - enables interrupt, 0 - disables interrupt]" range="23" rwaccess="R/W"/> 
		<bitfield id="EINEN6" width="1" begin="22" end="22" resetval="0x0" description="Endpoints Interrupt Enable Bit [1 - enables interrupt, 0 - disables interrupt]" range="22" rwaccess="R/W"/> 
		<bitfield id="EINEN5" width="1" begin="21" end="21" resetval="0x0" description="Endpoints Interrupt Enable Bit [1 - enables interrupt, 0 - disables interrupt]" range="21" rwaccess="R/W"/> 
		<bitfield id="EINEN4" width="1" begin="20" end="20" resetval="0x0" description="Endpoints Interrupt Enable Bit [1 - enables interrupt, 0 - disables interrupt]" range="20" rwaccess="R/W"/> 
		<bitfield id="EINEN3" width="1" begin="19" end="19" resetval="0x0" description="Endpoints Interrupt Enable Bit [1 - enables interrupt, 0 - disables interrupt]" range="19" rwaccess="R/W"/> 
		<bitfield id="EINEN2" width="1" begin="18" end="18" resetval="0x0" description="Endpoints Interrupt Enable Bit [1 - enables interrupt, 0 - disables interrupt]" range="18" rwaccess="R/W"/> 
		<bitfield id="EINEN1" width="1" begin="17" end="17" resetval="0x0" description="Endpoints Interrupt Enable Bit [1 - enables interrupt, 0 - disables interrupt]" range="17" rwaccess="R/W"/> 
		<bitfield id="EINEN0" width="1" begin="16" end="16" resetval="0x1" description="Endpoints Interrupt Enable Bit [1 - enables interrupt, 0 - disables interrupt]" range="16" rwaccess="R/W"/> 
		<bitfield id="EOUTEN15" width="1" begin="15" end="15" resetval="0x0" description="Endpoints Interrupt Enable Bit [1 - enables interrupt, 0 - disables interrupt]" range="15" rwaccess="R/W"/> 
		<bitfield id="EOUTEN14" width="1" begin="14" end="14" resetval="0x0" description="Endpoints Interrupt Enable Bit [1 - enables interrupt, 0 - disables interrupt]" range="14" rwaccess="R/W"/> 
		<bitfield id="EOUTEN13" width="1" begin="13" end="13" resetval="0x0" description="Endpoints Interrupt Enable Bit [1 - enables interrupt, 0 - disables interrupt]" range="13" rwaccess="R/W"/> 
		<bitfield id="EOUTEN12" width="1" begin="12" end="12" resetval="0x0" description="Endpoints Interrupt Enable Bit [1 - enables interrupt, 0 - disables interrupt]" range="12" rwaccess="R/W"/> 
		<bitfield id="EOUTEN11" width="1" begin="11" end="11" resetval="0x0" description="Endpoints Interrupt Enable Bit [1 - enables interrupt, 0 - disables interrupt]" range="11" rwaccess="R/W"/> 
		<bitfield id="EOUTEN10" width="1" begin="10" end="10" resetval="0x0" description="Endpoints Interrupt Enable Bit [1 - enables interrupt, 0 - disables interrupt]" range="10" rwaccess="R/W"/> 
		<bitfield id="EOUTEN9" width="1" begin="9" end="9" resetval="0x0" description="Endpoints Interrupt Enable Bit [1 - enables interrupt, 0 - disables interrupt]" range="9" rwaccess="R/W"/> 
		<bitfield id="EOUTEN8" width="1" begin="8" end="8" resetval="0x0" description="Endpoints Interrupt Enable Bit [1 - enables interrupt, 0 - disables interrupt]" range="8" rwaccess="R/W"/> 
		<bitfield id="EOUTEN7" width="1" begin="7" end="7" resetval="0x0" description="Endpoints Interrupt Enable Bit [1 - enables interrupt, 0 - disables interrupt]" range="7" rwaccess="R/W"/> 
		<bitfield id="EOUTEN6" width="1" begin="6" end="6" resetval="0x0" description="Endpoints Interrupt Enable Bit [1 - enables interrupt, 0 - disables interrupt]" range="6" rwaccess="R/W"/> 
		<bitfield id="EOUTEN5" width="1" begin="5" end="5" resetval="0x0" description="Endpoints Interrupt Enable Bit [1 - enables interrupt, 0 - disables interrupt]" range="5" rwaccess="R/W"/> 
		<bitfield id="EOUTEN4" width="1" begin="4" end="4" resetval="0x0" description="Endpoints Interrupt Enable Bit [1 - enables interrupt, 0 - disables interrupt]" range="4" rwaccess="R/W"/> 
		<bitfield id="EOUTEN3" width="1" begin="3" end="3" resetval="0x0" description="Endpoints Interrupt Enable Bit [1 - enables interrupt, 0 - disables interrupt]" range="3" rwaccess="R/W"/> 
		<bitfield id="EOUTEN2" width="1" begin="2" end="2" resetval="0x0" description="Endpoints Interrupt Enable Bit [1 - enables interrupt, 0 - disables interrupt]" range="2" rwaccess="R/W"/> 
		<bitfield id="EOUTEN1" width="1" begin="1" end="1" resetval="0x0" description="Endpoints Interrupt Enable Bit [1 - enables interrupt, 0 - disables interrupt]" range="1" rwaccess="R/W"/> 
		<bitfield id="EOUTEN0" width="1" begin="0" end="0" resetval="0x1" description="Endpoints Interrupt Enable Bit [1 - enables interrupt, 0 - disables interrupt]" range="0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ep_ists" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ep_ists" offset="0x20040" width="32" description="Endpoints Interrupt Status Register. The EIN.n/EOUT.n bit corresponds to interrupt request of n-number endpoint. The reason for interrupt can be read from EP_STS. Interrupt remains valid until given EP_STS.n is cleared by writing in the corresponding bit. NOTE: before access to EP_STS register, EP_SEL must be written with appropriate endpoint number">
		<bitfield id="EIN15" width="1" begin="31" end="31" resetval="0x0" description="Endpoints Interrupt Status Bit." range="31" rwaccess="R"/> 
		<bitfield id="EIN14" width="1" begin="30" end="30" resetval="0x0" description="Endpoints Interrupt Status Bit." range="30" rwaccess="R"/> 
		<bitfield id="EIN13" width="1" begin="29" end="29" resetval="0x0" description="Endpoints Interrupt Status Bit." range="29" rwaccess="R"/> 
		<bitfield id="EIN12" width="1" begin="28" end="28" resetval="0x0" description="Endpoints Interrupt Status Bit." range="28" rwaccess="R"/> 
		<bitfield id="EIN11" width="1" begin="27" end="27" resetval="0x0" description="Endpoints Interrupt Status Bit." range="27" rwaccess="R"/> 
		<bitfield id="EIN10" width="1" begin="26" end="26" resetval="0x0" description="Endpoints Interrupt Status Bit." range="26" rwaccess="R"/> 
		<bitfield id="EIN9" width="1" begin="25" end="25" resetval="0x0" description="Endpoints Interrupt Status Bit." range="25" rwaccess="R"/> 
		<bitfield id="EIN8" width="1" begin="24" end="24" resetval="0x0" description="Endpoints Interrupt Status Bit." range="24" rwaccess="R"/> 
		<bitfield id="EIN7" width="1" begin="23" end="23" resetval="0x0" description="Endpoints Interrupt Status Bit." range="23" rwaccess="R"/> 
		<bitfield id="EIN6" width="1" begin="22" end="22" resetval="0x0" description="Endpoints Interrupt Status Bit." range="22" rwaccess="R"/> 
		<bitfield id="EIN5" width="1" begin="21" end="21" resetval="0x0" description="Endpoints Interrupt Status Bit." range="21" rwaccess="R"/> 
		<bitfield id="EIN4" width="1" begin="20" end="20" resetval="0x0" description="Endpoints Interrupt Status Bit." range="20" rwaccess="R"/> 
		<bitfield id="EIN3" width="1" begin="19" end="19" resetval="0x0" description="Endpoints Interrupt Status Bit." range="19" rwaccess="R"/> 
		<bitfield id="EIN2" width="1" begin="18" end="18" resetval="0x0" description="Endpoints Interrupt Status Bit." range="18" rwaccess="R"/> 
		<bitfield id="EIN1" width="1" begin="17" end="17" resetval="0x0" description="Endpoints Interrupt Status Bit." range="17" rwaccess="R"/> 
		<bitfield id="EIN0" width="1" begin="16" end="16" resetval="0x0" description="Endpoints Interrupt Status Bit." range="16" rwaccess="R"/> 
		<bitfield id="EOUT15" width="1" begin="15" end="15" resetval="0x0" description="Endpoints Interrupt Status Bit." range="15" rwaccess="R"/> 
		<bitfield id="EOUT14" width="1" begin="14" end="14" resetval="0x0" description="Endpoints Interrupt Status Bit." range="14" rwaccess="R"/> 
		<bitfield id="EOUT13" width="1" begin="13" end="13" resetval="0x0" description="Endpoints Interrupt Status Bit." range="13" rwaccess="R"/> 
		<bitfield id="EOUT12" width="1" begin="12" end="12" resetval="0x0" description="Endpoints Interrupt Status Bit." range="12" rwaccess="R"/> 
		<bitfield id="EOUT11" width="1" begin="11" end="11" resetval="0x0" description="Endpoints Interrupt Status Bit." range="11" rwaccess="R"/> 
		<bitfield id="EOUT10" width="1" begin="10" end="10" resetval="0x0" description="Endpoints Interrupt Status Bit." range="10" rwaccess="R"/> 
		<bitfield id="EOUT9" width="1" begin="9" end="9" resetval="0x0" description="Endpoints Interrupt Status Bit." range="9" rwaccess="R"/> 
		<bitfield id="EOUT8" width="1" begin="8" end="8" resetval="0x0" description="Endpoints Interrupt Status Bit." range="8" rwaccess="R"/> 
		<bitfield id="EOUT7" width="1" begin="7" end="7" resetval="0x0" description="Endpoints Interrupt Status Bit." range="7" rwaccess="R"/> 
		<bitfield id="EOUT6" width="1" begin="6" end="6" resetval="0x0" description="Endpoints Interrupt Status Bit." range="6" rwaccess="R"/> 
		<bitfield id="EOUT5" width="1" begin="5" end="5" resetval="0x0" description="Endpoints Interrupt Status Bit." range="5" rwaccess="R"/> 
		<bitfield id="EOUT4" width="1" begin="4" end="4" resetval="0x0" description="Endpoints Interrupt Status Bit." range="4" rwaccess="R"/> 
		<bitfield id="EOUT3" width="1" begin="3" end="3" resetval="0x0" description="Endpoints Interrupt Status Bit." range="3" rwaccess="R"/> 
		<bitfield id="EOUT2" width="1" begin="2" end="2" resetval="0x0" description="Endpoints Interrupt Status Bit." range="2" rwaccess="R"/> 
		<bitfield id="EOUT1" width="1" begin="1" end="1" resetval="0x0" description="Endpoints Interrupt Status Bit." range="1" rwaccess="R"/> 
		<bitfield id="EOUT0" width="1" begin="0" end="0" resetval="0x0" description="Endpoints Interrupt Status Bit." range="0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_usb_pwr" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_usb_pwr" offset="0x20044" width="32" description="Global power configuration register">
		<bitfield id="FAST_REG_ACCESS" width="1" begin="31" end="31" resetval="0x0" description="Fast Registers Access. When Device Port is in a low power state [U3/L2/Not Connected], accesses to registers listed in section 2.3 of USBSS-DEV design specification may take long time. In order to enable fast register access in that case, user can use this register in the following way: - set FAST_REG_ACCESS bit  - wait until FAST_REG_ACCESS_STAT bit is set - perform required accesses - clear FAST_REG_ACCESS bit  Note that to enable USBSS-DEV low power state entry [U3/L2], the FAST_REG_ACCESS bit has to be cleared." range="31" rwaccess="R/W"/> 
		<bitfield id="FAST_REG_ACCESS_STAT" width="1" begin="30" end="30" resetval="0x0" description="Fast Registers Access status. This bit informs if Fast Registers Access is enabled. It should be used as described in FAST_REG_ACCESS bit." range="30" rwaccess="R"/> 
		<bitfield id="RESERVED1" width="20" begin="29" end="10" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="29 - 10" rwaccess="R"/> 
		<bitfield id="STB_CLK_SWITCH_DONE" width="1" begin="9" end="9" resetval="0x0" description="Status bit indicating that operation required by STB_CLK_SWITCH_EN write is completed. This bit is optional and implemented only when support for OTG is implemented [indicated by OTG_READY bit set to 1]." range="9" rwaccess="R"/> 
		<bitfield id="STB_CLK_SWITCH_EN" width="1" begin="8" end="8" resetval="0x0" description="Enables turning-off Reference Clock. This bit is optional and implemented only when support for OTG is implemented [indicated by OTG_READY bit set to 1]. Should not be used when PHY Reference clock control is not supported" range="8" rwaccess="R/W"/> 
		<bitfield id="RESERVED0" width="6" begin="7" end="2" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="7 - 2" rwaccess="R"/> 
		<bitfield id="PSO_DS" width="1" begin="1" end="1" resetval="0x1" description="Power Shut Off capability disable. Writing '1' to this bit disables power domains switching capability and clears the PSO_EN bit. It is recommended to set this bit after during U3EXTI interrupt service." range="1" rwaccess="R/W1TS"/> 
		<bitfield id="PSO_EN" width="1" begin="0" end="0" resetval="0x0" description="Power Shut Off capability enable. Writing '1' to this bit enables dower domains switching capability and clears the PSO_DS bit. The Domain will be switched off if both PSO_EN will be set and the USB controller will be in the in the U3 state. It is recommended to set this bit in U3ENTI interrupt service, after software ensures that no data transfer is pending. If this bit will be always set, the controller will automatically switch off the power in the switchable PD after USB controller will enter U3 state." range="0" rwaccess="R/W1TC"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_usb_conf2" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_usb_conf2" offset="0x20048" width="32" description="USB configuration register 2">
		<bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="31 - 1" rwaccess="R"/> 
		<bitfield id="AHB_RETRY_EN" width="1" begin="0" end="0" resetval="0x0" description="AHB retry enable. This bit enables the AHB retrys for AHB slave interface. This bit has no effect when AHB slave interface is not implemented." range="0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_usb_cap1" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_usb_cap1" offset="0x2004C" width="32" description="USB Capability Register 1">
		<bitfield id="RESERVED" width="3" begin="31" end="29" resetval="0x0" description="This field is reserved and it is always 0 when reading." range="31 - 29" rwaccess="R"/> 
		<bitfield id="TDL_FROM_TRB" width="1" begin="28" end="28" resetval="0x1" description="This field informs if device controller supports automatic internal TDL calculation basing on the size provided in TRB for DMULT mode:               - 0 - controller doesn't support automatic internal TDL calculation                - 1 - controller supports automatic internal TDL calculation" range="28" rwaccess="R"/> 
		<bitfield id="OTG_READY" width="1" begin="27" end="27" resetval="0x1" description="This field informs if device is OTG ready:               - pure device mode: 0x0,               - some features and ports for CDNS USB OTG controller are implemented: 0x1." range="27" rwaccess="R"/> 
		<bitfield id="U2PHY_WIDTH" width="1" begin="26" end="26" resetval="0x0" description="USB2 PHY Interface width. This field reflects width of USB2 PHY interface implemented:               - 8 bit interface: 0x0,               - 16 bit interface: 0x1.               Note: The ULPI interface is always 8-bit wide." range="26" rwaccess="R"/> 
		<bitfield id="U2PHY_TYPE" width="1" begin="25" end="25" resetval="0x0" description="USB2 PHY Interface type. This field reflects type of USB2 PHY interface implemented:               - UTMI: 0x0,               - ULPI: 0x1." range="25" rwaccess="R"/> 
		<bitfield id="U2PHY_EN" width="1" begin="24" end="24" resetval="0x1" description="USB2 PHY Interface enable. This field informs if USB2 PHY interface is implemented:               - interface NOT implemented: 0x0,               - interface implemented: 0x1." range="24" rwaccess="R"/> 
		<bitfield id="U3PHY_WIDTH" width="4" begin="23" end="20" resetval="0x2" description="USB3 PHY Interface width. This field reflects width of USB3 PHY interface implemented:               - 0x0: 8 bit PIPE interface,               - 0x1: 16 bit PIPE interface,               - 0x2: 32 bit PIPE interface,               - 0x3: 64 bit PIPE interface,               - 0x4-0xF: reserved.               Note: When SSIC interface is implemented this field shows the width of internal PIPE interface. The RMMI interface is always 20-bit wide." range="23 - 20" rwaccess="R"/> 
		<bitfield id="U3PHY_TYPE" width="4" begin="19" end="16" resetval="0x0" description="USB3 PHY Interface type. This field reflects type of USB3 PHY interface implemented:               - 0x0: USB PIPE,               - 0x1: RMMI,               - 0x2-0xF: reserved" range="19 - 16" rwaccess="R"/> 
		<bitfield id="DMA_WIDTH" width="4" begin="15" end="12" resetval="0x3" description="DMA Interface width. This field reflects width of DMA interface implemented:               - 0x0: reserved,               - 0x1: reserved,               - 0x2: 32 bit interface,               - 0x3: 64 bit interface,               - 0x4-0xF: reserved" range="15 - 12" rwaccess="R"/> 
		<bitfield id="DMA_TYPE" width="4" begin="11" end="8" resetval="0x3" description="DMA Interface type. This field reflects type of DMA interface implemented:               - 0x0: OCP,               - 0x1: AHB,               - 0x2: PLB,               - 0x3: AXI,               - 0x4-0xF: reserved" range="11 - 8" rwaccess="R"/> 
		<bitfield id="SFR_WIDTH" width="4" begin="7" end="4" resetval="0x2" description="SFR Interface width. This field reflects width of SFR interface implemented:               - 0x0: 8 bit interface,               - 0x1: 16 bit interface,               - 0x2: 32 bit interface,               - 0x3: 64 bit interface,               - 0x4-0xF: reserved" range="7 - 4" rwaccess="R"/> 
		<bitfield id="SFR_TYPE" width="4" begin="3" end="0" resetval="0x4" description="SFR Interface type. This field reflects type of SFR interface implemented: 0x0 - OCP, 0x1 - AHB, 0x2 - PLB, 0x3 - AXI, 0x4 - APB, 0x5-0xF - reserved." range="3 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_usb_cap2" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_usb_cap2" offset="0x20050" width="32" description="USB Capability Register">
		<bitfield id="RESERVED" width="19" begin="31" end="13" resetval="0x0" description="This field is reserved and it is always 0 when reading." range="31 - 13" rwaccess="R"/> 
		<bitfield id="MAX_MEM_SIZE" width="5" begin="12" end="8" resetval="0x12" description="Max supported mem size. This field reflects width of on-chip RAM address bus width, which determines max supported mem size: 0x0-0x7 reserved, 0x8 - support for 4kB mem, 0x9 - support for 8kB mem, 0xA - support for 16kB mem, 0xB - support for 32kB mem, 0xC - support for 64kB mem, 0xD - support for 128kB mem, 0xE - support for 256kB mem, 0xF - reserved." range="12 - 8" rwaccess="R"/> 
		<bitfield id="ACTUAL_MEM_SIZE" width="8" begin="7" end="0" resetval="0x0" description="The actual size of the connected On-chip RAM memory in kB:              - 0 means 256 kB [max supported mem size]              - value other than 0 reflects the mem size in kB.              This value reflects the CDNS_USBSSDEV_ATTACHED_MEM_SIZE parameter defined in the usbss_dev_defines.v file. This value has to be adequately set before synthesis by engineer who connects the on-chip memory for controller." range="7 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_usb_cap3" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_usb_cap3" offset="0x20054" width="32" description="USB Capability Register 3. Implemented Endpoints. EPIN.n/EPOUT.n bit informs if n-number endpoint is implemented in the hardware. Default: all EP">
		<bitfield id="EPIN_N" width="16" begin="31" end="16" resetval="0x65535" description="Endpoints IN" range="31 - 16" rwaccess="R"/> 
		<bitfield id="EPOUT_N" width="16" begin="15" end="0" resetval="0x65535" description="Endpoints OUT" range="15 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_usb_cap4" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_usb_cap4" offset="0x20058" width="32" description="ISO HW support for Endpoints implemented EPINI.n/EPOUTI.n bit informs if n- number endpoint has ISO support implemented in the hardware. Note that EP0 is not intended for isochronous transfers, so both EPINI.0 and EPOUTI.0 must be always set to 0.">
		<bitfield id="EPINI_N" width="16" begin="31" end="16" resetval="0x65534" description="Endpoints  IN" range="31 - 16" rwaccess="R"/> 
		<bitfield id="EPOUTI_N" width="16" begin="15" end="0" resetval="0x65534" description="Endpoints OUT" range="15 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_usb_cap5" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_usb_cap5" offset="0x2005C" width="32" description="Bulk Stream HW support for Endpoints implemented. EPINS.n/EPOUTS.n bit informs if n-number endpoint has Bulk Stream support implemented in the hardware. Note that EP0 is not intended for stream transfers, so both EPINS.0 and EPOUTS.0 must be always set to '0'.">
		<bitfield id="EPINI_N" width="16" begin="31" end="16" resetval="0x65534" description="Endpoints IN" range="31 - 16" rwaccess="R"/> 
		<bitfield id="EPOUTI_N" width="16" begin="15" end="0" resetval="0x65534" description="Endpoints OUT" range="15 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_usb_cap6" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_usb_cap6" offset="0x20060" width="32" description="Device controller version.">
		<bitfield id="VERSION" width="32" begin="31" end="0" resetval="0x148749" description="Device controller version." range="31 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_usb_cpkt1" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_usb_cpkt1" offset="0x20064" width="32" description="Custom Packet value.
If the USB_CMD.SPKT bit is set, then this field is sent to the host as DWORD 0 in the Transaction Packet. Refer to USB3.0 specification, chapter 8.5 Transaction Packet for more details.
This field must be filled up before the USB_CMD.SPKT bit is set, and cannot be changed while USB_CMD.SPKT bit is not zero (TP is being sent by the device controller)">
		<bitfield id="CPKT1" width="32" begin="31" end="0" resetval="0x0" description="Custom Packet value 1." range="31 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_usb_cpkt2" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_usb_cpkt2" offset="0x20068" width="32" description="Custom Packet value.
If the USB_CMD.SPKT bit is set, then this field is sent to the host as DWORD 1 in the Transaction Packet. Refer to USB3.0 specification, chapter 8.5 Transaction Packet for more details.
This field must be filled up before the USB_CMD.SPKT bit is set, and cannot be changed while USB_CMD.SPKT bit is not zero (TP is being sent by the device controller)">
		<bitfield id="CPKT2" width="32" begin="31" end="0" resetval="0x0" description="Custom Packet value 2." range="31 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_usb_cpkt3" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_usb_cpkt3" offset="0x2006C" width="32" description="Custom Packet value.
If the USB_CMD.SPKT bit is set, then this field is sent to the host as DWORD 2 in the Transaction Packet. Refer to USB3.0 specification, chapter 8.5 Transaction Packet for more details.
This field must be filled up before the USB_CMD.SPKT bit is set, and cannot be changed while USB_CMD.SPKT bit is not zero (TP is being sent by the device controller)">
		<bitfield id="CPKT3" width="32" begin="31" end="0" resetval="0x0" description="Custom Packet value 3." range="31 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ep_dma_ext_addr" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ep_dma_ext_addr" offset="0x20070" width="32" description="Upper address for DMA
This register is optional and is implemented only if the DMA supports address bigger than 32-bit address">
		<bitfield id="RESERVED0" width="16" begin="31" end="16" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="31 - 16" rwaccess="R"/> 
		<bitfield id="EP_DMA_ADDR_H" width="16" begin="15" end="0" resetval="0x0" description="Transfer Ring address. This register specify upper [above 32-bits] DMA address for each endpoint separatelly.  This part of DMA address, is not modified by the DMA. CPU can use this register [read it or write to it] only when endpoint is selected [using EP_SEL register]" range="15 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_buf_addr" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_buf_addr" offset="0x20074" width="32" description="Address for On-chip Buffer operations.
Used for accessing device controller on-chip memory via SFR interface. This register is used together with BUF_DATA and BUF_CTRL registers.">
		<bitfield id="BUF_ADDR" width="32" begin="31" end="0" resetval="0x0" description="On-chip Memory Address. This register specify the address of the on-chip memory cell which is accessed using BUF_CTRL register." range="31 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_buf_data" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_buf_data" offset="0x20078" width="32" description="Data for On-chip Buffer operations.
Used for accessing device controller on-chip memory via SFR interface. This register is used together with BUF_ADDR and BUF_CTRL registers.">
		<bitfield id="BUF_DATA" width="32" begin="31" end="0" resetval="0x0" description="Data for On-chip Buffer operations. This register specify the address of the on-chip memory cell which is accessed using BUF_CTRL register. For write operation this register must be written before WRITE command is issued using BUF_CTRL register. For read operation, this register must be read after READ command is issued using BUF_CTRL register." range="31 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_buf_ctrl" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_buf_ctrl" offset="0x2007C" width="32" description="On-chip Buffer Access register.
Used for accessing device controller on-chip memory via SFR interface. This register is used together with BUF_ADDR and BUF_DATA registers.">
		<bitfield id="BUF_CMD_STS" width="1" begin="31" end="31" resetval="0x0" description="Status of BUF_CMD operations. This bit is set high when controller performs BUF CMD IWD and IWU operations. When it is set, no other SFR or DMA operation can be issued to the controller." range="31" rwaccess="R"/> 
		<bitfield id="RESERVED0" width="25" begin="30" end="6" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="30 - 6" rwaccess="R"/> 
		<bitfield id="BUF_CMD_IWD" width="1" begin="5" end="5" resetval="0x0" description="Incremental write counting down to device on-chip mem. Used for incremental writing data into device on-chip memory starting from address pointed by BUF_ADDR register [two lsb rounded down to 0].  To write data to memory, the following order must be maintained: 1] BUF_ADDR register must be set with start address, 2] The BUF_DATA must be set with data expected to be written to on-chip mem 3] BUF_CMD_IWD with BUF_CMD_SET must be set to perform write operation.   This write operation is effective only when this BUF_CMD_IWD bit is set together with the BUF_CMD_SET bit. As long as controller performs this command, the BUF_CMD_STS status bit is set, and no other SFR or DMA operation can be issued to the controller. This command can be useful during memory initialization" range="5" rwaccess="R/W"/> 
		<bitfield id="BUF_CMD_IWU" width="1" begin="4" end="4" resetval="0x0" description="Incremental write counting up to device on-chip mem. Used for incremental writing data into device on-chip memory starting from address pointed by BUF_ADDR register [two lsb rounded down to 0].  To write data to memory, the following order must be maintained: 1] BUF_ADDR register must be set with start address, 2] The BUF_DATA must be set with data expected to be written to on-chip mem 3] BUF_CMD_IWD with BUF_CMD_SET must be set to perform write operation.   This write operation is effective only when this BUF_CMD_IWU bit is set together with the BUF_CMD_SET bit. As long as controller performs this command, the BUF_CMD_STS status bit is set, and no other SFR or DMA operation can be issued to the controller. This command can be useful during memory initialization" range="4" rwaccess="R/W"/> 
		<bitfield id="BUF_CMD_WR4" width="1" begin="3" end="3" resetval="0x0" description="Write 4 words [16B] to device on-chip mem. Used for writing 4 words [4x duplicated BUF_DATA data] into device on-chip memory at address pointed by BUF_ADDR register [two lsb rounded down to 0].  To write data to memory, the following order must be maintained: 1] BUF_ADDR register must be set with address to be accessed, 2] The BUF_DATA must be set with data expected to be written to on-chip mem 3] BUF_CMD_WR4 with BUF_CMD_SET must be set to perform write operation. During this operation the BUF_DATA [duplicated 4 times] register is written to memory.  This write operation is effective only when this BUF_CMD_WR4 bit is set together with the BUF_CMD_SET bit. This command can be useful during memory initialization" range="3" rwaccess="R/W"/> 
		<bitfield id="BUF_CMD_RD" width="1" begin="2" end="2" resetval="0x0" description="Read data [32B] from device on-chip mem. Used for reading data [1 word] from device on-chip memory from address pointed by BUF_ADDR register.  To read data from memory,the following order must be maintained: 1] BUF_ADDR register must be set with address to be accessed, 2] BUF_CMD_RD with BUF_CMD_SET must be set to perform read operation. During this operation the BUF_DATA register is loaded with data readed from memory 3] The BUF_DATA can be read.  This read operation is effective only when this BUF_CMD_RD bit is set together with the BUF_CMD_SET bit." range="2" rwaccess="R/W"/> 
		<bitfield id="BUF_CMD_WR" width="1" begin="1" end="1" resetval="0x0" description="Write 1 word [4B] to device on-chip mem. Used for writing 1 word [as prepared in BUF_DATA register] into device on-chip memory at address pointed by BUF_ADDR register.  To write data to memory,the following order must be maintained: 1] BUF_ADDR register must be set with address to be accessed, 2] The BUF_DATA must be set with data expected to be written to on-chip mem 3] BUF_CMD_WR with BUF_CMD_SET must be set to perform write operation. During this operation the BUF_DATA register is written to memory.  This write operation is effective only when this BUF_CMD_WR bit is set together with the BUF_CMD_SET bit." range="1" rwaccess="R/W"/> 
		<bitfield id="BUF_CMD_SET" width="1" begin="0" end="0" resetval="0x0" description="Buffer Command Set. This bit must be written 1 in conjuction with one of WR, RD, WR4 IWD or IWU commands to make command effective. Only one command can be set at a moment. Commands WR, WR4 and RD are executed immediatelly, but after issuing commands IWD and IWU, the BUF_CMD_STS bit must be check before going forward to other SW operations " range="0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_dtrans" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_dtrans" offset="0x20080" width="32" description="DMA transfer configuration Register (1 - DMULT mode, 0 - DSINGLE mode). Bits 0..15 applies to EPOUT0..EPOUT15 and bits 16..31 applies to EPIN0..EPIN15">
		<bitfield id="DTRANS15I" width="1" begin="31" end="31" resetval="0x0" description="DMA transfer configuration status for selected Endpoint[0 - single request - Single TRB chain. Single request [DRDY/Doorbell] triggers DMA, which transfers single TRB chain only and ends the EP transfer. 1 - single request - Multiple TRB chain. Single request [DRDY/Doorbell] triggers DMA which starts transfer until the owner of the new chain is not DMA [this causes a TRB error interrupt]. ] " range="31" rwaccess="R/W"/> 
		<bitfield id="DTRANS14I" width="1" begin="30" end="30" resetval="0x0" description="DMA transfer configuration status for selected Endpoint[0 - single request - Single TRB chain. Single request [DRDY/Doorbell] triggers DMA, which transfers single TRB chain only and ends the EP transfer. 1 - single request - Multiple TRB chain. Single request [DRDY/Doorbell] triggers DMA which starts transfer until the owner of the new chain is not DMA [this causes a TRB error interrupt]. ] " range="30" rwaccess="R/W"/> 
		<bitfield id="DTRANS13I" width="1" begin="29" end="29" resetval="0x0" description="DMA transfer configuration status for selected Endpoint[0 - single request - Single TRB chain. Single request [DRDY/Doorbell] triggers DMA, which transfers single TRB chain only and ends the EP transfer. 1 - single request - Multiple TRB chain. Single request [DRDY/Doorbell] triggers DMA which starts transfer until the owner of the new chain is not DMA [this causes a TRB error interrupt]. ] " range="29" rwaccess="R/W"/> 
		<bitfield id="DTRANS12I" width="1" begin="28" end="28" resetval="0x0" description="DMA transfer configuration status for selected Endpoint[0 - single request - Single TRB chain. Single request [DRDY/Doorbell] triggers DMA, which transfers single TRB chain only and ends the EP transfer. 1 - single request - Multiple TRB chain. Single request [DRDY/Doorbell] triggers DMA which starts transfer until the owner of the new chain is not DMA [this causes a TRB error interrupt]. ] " range="28" rwaccess="R/W"/> 
		<bitfield id="DTRANS11I" width="1" begin="27" end="27" resetval="0x0" description="DMA transfer configuration status for selected Endpoint[0 - single request - Single TRB chain. Single request [DRDY/Doorbell] triggers DMA, which transfers single TRB chain only and ends the EP transfer. 1 - single request - Multiple TRB chain. Single request [DRDY/Doorbell] triggers DMA which starts transfer until the owner of the new chain is not DMA [this causes a TRB error interrupt]. ] " range="27" rwaccess="R/W"/> 
		<bitfield id="DTRANS10I" width="1" begin="26" end="26" resetval="0x0" description="DMA transfer configuration status for selected Endpoint[0 - single request - Single TRB chain. Single request [DRDY/Doorbell] triggers DMA, which transfers single TRB chain only and ends the EP transfer. 1 - single request - Multiple TRB chain. Single request [DRDY/Doorbell] triggers DMA which starts transfer until the owner of the new chain is not DMA [this causes a TRB error interrupt]. ] " range="26" rwaccess="R/W"/> 
		<bitfield id="DTRANS9I" width="1" begin="25" end="25" resetval="0x0" description="DMA transfer configuration status for selected Endpoint[0 - single request - Single TRB chain. Single request [DRDY/Doorbell] triggers DMA, which transfers single TRB chain only and ends the EP transfer. 1 - single request - Multiple TRB chain. Single request [DRDY/Doorbell] triggers DMA which starts transfer until the owner of the new chain is not DMA [this causes a TRB error interrupt]. ] " range="25" rwaccess="R/W"/> 
		<bitfield id="DTRANS8I" width="1" begin="24" end="24" resetval="0x0" description="DMA transfer configuration status for selected Endpoint[0 - single request - Single TRB chain. Single request [DRDY/Doorbell] triggers DMA, which transfers single TRB chain only and ends the EP transfer. 1 - single request - Multiple TRB chain. Single request [DRDY/Doorbell] triggers DMA which starts transfer until the owner of the new chain is not DMA [this causes a TRB error interrupt]. ] " range="24" rwaccess="R/W"/> 
		<bitfield id="DTRANS7I" width="1" begin="23" end="23" resetval="0x0" description="DMA transfer configuration status for selected Endpoint[0 - single request - Single TRB chain. Single request [DRDY/Doorbell] triggers DMA, which transfers single TRB chain only and ends the EP transfer. 1 - single request - Multiple TRB chain. Single request [DRDY/Doorbell] triggers DMA which starts transfer until the owner of the new chain is not DMA [this causes a TRB error interrupt]. ] " range="23" rwaccess="R/W"/> 
		<bitfield id="DTRANS6I" width="1" begin="22" end="22" resetval="0x0" description="DMA transfer configuration status for selected Endpoint[0 - single request - Single TRB chain. Single request [DRDY/Doorbell] triggers DMA, which transfers single TRB chain only and ends the EP transfer. 1 - single request - Multiple TRB chain. Single request [DRDY/Doorbell] triggers DMA which starts transfer until the owner of the new chain is not DMA [this causes a TRB error interrupt]. ] " range="22" rwaccess="R/W"/> 
		<bitfield id="DTRANS5I" width="1" begin="21" end="21" resetval="0x0" description="DMA transfer configuration status for selected Endpoint[0 - single request - Single TRB chain. Single request [DRDY/Doorbell] triggers DMA, which transfers single TRB chain only and ends the EP transfer. 1 - single request - Multiple TRB chain. Single request [DRDY/Doorbell] triggers DMA which starts transfer until the owner of the new chain is not DMA [this causes a TRB error interrupt]. ] " range="21" rwaccess="R/W"/> 
		<bitfield id="DTRANS4I" width="1" begin="20" end="20" resetval="0x0" description="DMA transfer configuration status for selected Endpoint[0 - single request - Single TRB chain. Single request [DRDY/Doorbell] triggers DMA, which transfers single TRB chain only and ends the EP transfer. 1 - single request - Multiple TRB chain. Single request [DRDY/Doorbell] triggers DMA which starts transfer until the owner of the new chain is not DMA [this causes a TRB error interrupt]. ] " range="20" rwaccess="R/W"/> 
		<bitfield id="DTRANS3I" width="1" begin="19" end="19" resetval="0x0" description="DMA transfer configuration status for selected Endpoint[0 - single request - Single TRB chain. Single request [DRDY/Doorbell] triggers DMA, which transfers single TRB chain only and ends the EP transfer. 1 - single request - Multiple TRB chain. Single request [DRDY/Doorbell] triggers DMA which starts transfer until the owner of the new chain is not DMA [this causes a TRB error interrupt]. ] " range="19" rwaccess="R/W"/> 
		<bitfield id="DTRANS2I" width="1" begin="18" end="18" resetval="0x0" description="DMA transfer configuration status for selected Endpoint[0 - single request - Single TRB chain. Single request [DRDY/Doorbell] triggers DMA, which transfers single TRB chain only and ends the EP transfer. 1 - single request - Multiple TRB chain. Single request [DRDY/Doorbell] triggers DMA which starts transfer until the owner of the new chain is not DMA [this causes a TRB error interrupt]. ] " range="18" rwaccess="R/W"/> 
		<bitfield id="DTRANS1I" width="1" begin="17" end="17" resetval="0x0" description="DMA transfer configuration status for selected Endpoint[0 - single request - Single TRB chain. Single request [DRDY/Doorbell] triggers DMA, which transfers single TRB chain only and ends the EP transfer. 1 - single request - Multiple TRB chain. Single request [DRDY/Doorbell] triggers DMA which starts transfer until the owner of the new chain is not DMA [this causes a TRB error interrupt]. ] " range="17" rwaccess="R/W"/> 
		<bitfield id="DTRANS0I" width="1" begin="16" end="16" resetval="0x0" description="DMA transfer configuration status for selected Endpoint[0 - single request - Single TRB chain. Single request [DRDY/Doorbell] triggers DMA, which transfers single TRB chain only and ends the EP transfer. 1 - single request - Multiple TRB chain. Single request [DRDY/Doorbell] triggers DMA which starts transfer until the owner of the new chain is not DMA [this causes a TRB error interrupt]. ] " range="16" rwaccess="R/W"/> 
		<bitfield id="DTRANS15O" width="1" begin="15" end="15" resetval="0x0" description="DMA transfer configuration status for selected Endpoint[0 - single request - Single TRB chain. Single request [DRDY/Doorbell] triggers DMA, which transfers single TRB chain only and ends the EP transfer. 1 - single request - Multiple TRB chain. Single request [DRDY/Doorbell] triggers DMA which starts transfer until the owner of the new chain is not DMA [this causes a TRB error interrupt]. ] " range="15" rwaccess="R/W"/> 
		<bitfield id="DTRANS14O" width="1" begin="14" end="14" resetval="0x0" description="DMA transfer configuration status for selected Endpoint[0 - single request - Single TRB chain. Single request [DRDY/Doorbell] triggers DMA, which transfers single TRB chain only and ends the EP transfer. 1 - single request - Multiple TRB chain. Single request [DRDY/Doorbell] triggers DMA which starts transfer until the owner of the new chain is not DMA [this causes a TRB error interrupt]. ] " range="14" rwaccess="R/W"/> 
		<bitfield id="DTRANS13O" width="1" begin="13" end="13" resetval="0x0" description="DMA transfer configuration status for selected Endpoint[0 - single request - Single TRB chain. Single request [DRDY/Doorbell] triggers DMA, which transfers single TRB chain only and ends the EP transfer. 1 - single request - Multiple TRB chain. Single request [DRDY/Doorbell] triggers DMA which starts transfer until the owner of the new chain is not DMA [this causes a TRB error interrupt]. ] " range="13" rwaccess="R/W"/> 
		<bitfield id="DTRANS12O" width="1" begin="12" end="12" resetval="0x0" description="DMA transfer configuration status for selected Endpoint[0 - single request - Single TRB chain. Single request [DRDY/Doorbell] triggers DMA, which transfers single TRB chain only and ends the EP transfer. 1 - single request - Multiple TRB chain. Single request [DRDY/Doorbell] triggers DMA which starts transfer until the owner of the new chain is not DMA [this causes a TRB error interrupt]. ] " range="12" rwaccess="R/W"/> 
		<bitfield id="DTRANS11O" width="1" begin="11" end="11" resetval="0x0" description="DMA transfer configuration status for selected Endpoint[0 - single request - Single TRB chain. Single request [DRDY/Doorbell] triggers DMA, which transfers single TRB chain only and ends the EP transfer. 1 - single request - Multiple TRB chain. Single request [DRDY/Doorbell] triggers DMA which starts transfer until the owner of the new chain is not DMA [this causes a TRB error interrupt]. ] " range="11" rwaccess="R/W"/> 
		<bitfield id="DTRANS10O" width="1" begin="10" end="10" resetval="0x0" description="DMA transfer configuration status for selected Endpoint[0 - single request - Single TRB chain. Single request [DRDY/Doorbell] triggers DMA, which transfers single TRB chain only and ends the EP transfer. 1 - single request - Multiple TRB chain. Single request [DRDY/Doorbell] triggers DMA which starts transfer until the owner of the new chain is not DMA [this causes a TRB error interrupt]. ] " range="10" rwaccess="R/W"/> 
		<bitfield id="DTRANS9O" width="1" begin="9" end="9" resetval="0x0" description="DMA transfer configuration status for selected Endpoint[0 - single request - Single TRB chain. Single request [DRDY/Doorbell] triggers DMA, which transfers single TRB chain only and ends the EP transfer. 1 - single request - Multiple TRB chain. Single request [DRDY/Doorbell] triggers DMA which starts transfer until the owner of the new chain is not DMA [this causes a TRB error interrupt]. ] " range="9" rwaccess="R/W"/> 
		<bitfield id="DTRANS8O" width="1" begin="8" end="8" resetval="0x0" description="DMA transfer configuration status for selected Endpoint[0 - single request - Single TRB chain. Single request [DRDY/Doorbell] triggers DMA, which transfers single TRB chain only and ends the EP transfer. 1 - single request - Multiple TRB chain. Single request [DRDY/Doorbell] triggers DMA which starts transfer until the owner of the new chain is not DMA [this causes a TRB error interrupt]. ] " range="8" rwaccess="R/W"/> 
		<bitfield id="DTRANS7O" width="1" begin="7" end="7" resetval="0x0" description="DMA transfer configuration status for selected Endpoint[0 - single request - Single TRB chain. Single request [DRDY/Doorbell] triggers DMA, which transfers single TRB chain only and ends the EP transfer. 1 - single request - Multiple TRB chain. Single request [DRDY/Doorbell] triggers DMA which starts transfer until the owner of the new chain is not DMA [this causes a TRB error interrupt]. ] " range="7" rwaccess="R/W"/> 
		<bitfield id="DTRANS6O" width="1" begin="6" end="6" resetval="0x0" description="DMA transfer configuration status for selected Endpoint[0 - single request - Single TRB chain. Single request [DRDY/Doorbell] triggers DMA, which transfers single TRB chain only and ends the EP transfer. 1 - single request - Multiple TRB chain. Single request [DRDY/Doorbell] triggers DMA which starts transfer until the owner of the new chain is not DMA [this causes a TRB error interrupt]. ] " range="6" rwaccess="R/W"/> 
		<bitfield id="DTRANS5O" width="1" begin="5" end="5" resetval="0x0" description="DMA transfer configuration status for selected Endpoint[0 - single request - Single TRB chain. Single request [DRDY/Doorbell] triggers DMA, which transfers single TRB chain only and ends the EP transfer. 1 - single request - Multiple TRB chain. Single request [DRDY/Doorbell] triggers DMA which starts transfer until the owner of the new chain is not DMA [this causes a TRB error interrupt]. ] " range="5" rwaccess="R/W"/> 
		<bitfield id="DTRANS4O" width="1" begin="4" end="4" resetval="0x0" description="DMA transfer configuration status for selected Endpoint[0 - single request - Single TRB chain. Single request [DRDY/Doorbell] triggers DMA, which transfers single TRB chain only and ends the EP transfer. 1 - single request - Multiple TRB chain. Single request [DRDY/Doorbell] triggers DMA which starts transfer until the owner of the new chain is not DMA [this causes a TRB error interrupt]. ] " range="4" rwaccess="R/W"/> 
		<bitfield id="DTRANS3O" width="1" begin="3" end="3" resetval="0x0" description="DMA transfer configuration status for selected Endpoint[0 - single request - Single TRB chain. Single request [DRDY/Doorbell] triggers DMA, which transfers single TRB chain only and ends the EP transfer. 1 - single request - Multiple TRB chain. Single request [DRDY/Doorbell] triggers DMA which starts transfer until the owner of the new chain is not DMA [this causes a TRB error interrupt]. ] " range="3" rwaccess="R/W"/> 
		<bitfield id="DTRANS2O" width="1" begin="2" end="2" resetval="0x0" description="DMA transfer configuration status for selected Endpoint[0 - single request - Single TRB chain. Single request [DRDY/Doorbell] triggers DMA, which transfers single TRB chain only and ends the EP transfer. 1 - single request - Multiple TRB chain. Single request [DRDY/Doorbell] triggers DMA which starts transfer until the owner of the new chain is not DMA [this causes a TRB error interrupt]. ] " range="2" rwaccess="R/W"/> 
		<bitfield id="DTRANS1O" width="1" begin="1" end="1" resetval="0x0" description="DMA transfer configuration status for selected Endpoint[0 - single request - Single TRB chain. Single request [DRDY/Doorbell] triggers DMA, which transfers single TRB chain only and ends the EP transfer. 1 - single request - Multiple TRB chain. Single request [DRDY/Doorbell] triggers DMA which starts transfer until the owner of the new chain is not DMA [this causes a TRB error interrupt]. ] " range="1" rwaccess="R/W"/> 
		<bitfield id="DTRANS0O" width="1" begin="0" end="0" resetval="0x0" description="DMA transfer configuration status for selected Endpoint[0 - single request - Single TRB chain. Single request [DRDY/Doorbell] triggers DMA, which transfers single TRB chain only and ends the EP transfer. 1 - single request - Multiple TRB chain. Single request [DRDY/Doorbell] triggers DMA which starts transfer until the owner of the new chain is not DMA [this causes a TRB error interrupt]. ] " range="0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_tdl_from_trb" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_tdl_from_trb" offset="0x20084" width="32" description="Source of TDL configuration Register (1 - TDL read by DMA from TD_SIZE field in TRB , 0 - TDL programmed through EP_TDL register). Bits 0..15 applies to EPOUT0..EPOUT15 and bits 16..31 applies to EPIN0..EPIN15">
		<bitfield id="TDL_FROM_TRB15I" width="1" begin="31" end="31" resetval="0x0" description="This field informs if support for automatic internal TDL calculation basing on the size provided in TRB for DMULT mode is enabled for selected Endpoint. To enable/disable this feature use the ENABLE_TDL_TRB/DISABLE_TDL_TRB bits in the USB_CONF2 register.               When this option is enabled the TDL programming with EP_CMD.TDL+STDL is disabled, however read operation through this register can be performed.                 - 0 - controller doesn't support automatic internal TDL calculation                - 1 - controller supports automatic internal TDL calculation                This feature can be enabled only when controller supports it, i.e. when the USB_CAP1.TDL_FROM_TRB=1 and when DMULT mode for particular EP is set " range="31" rwaccess="R/W"/> 
		<bitfield id="TDL_FROM_TRB14I" width="1" begin="30" end="30" resetval="0x0" description="This field informs if support for automatic internal TDL calculation basing on the size provided in TRB for DMULT mode is enabled for selected Endpoint. To enable/disable this feature use the ENABLE_TDL_TRB/DISABLE_TDL_TRB bits in the USB_CONF2 register.               When this option is enabled the TDL programming with EP_CMD.TDL+STDL is disabled, however read operation through this register can be performed.                 - 0 - controller doesn't support automatic internal TDL calculation                - 1 - controller supports automatic internal TDL calculation                This feature can be enabled only when controller supports it, i.e. when the USB_CAP1.TDL_FROM_TRB=1 and when DMULT mode for particular EP is set " range="30" rwaccess="R/W"/> 
		<bitfield id="TDL_FROM_TRB13I" width="1" begin="29" end="29" resetval="0x0" description="This field informs if support for automatic internal TDL calculation basing on the size provided in TRB for DMULT mode is enabled for selected Endpoint. To enable/disable this feature use the ENABLE_TDL_TRB/DISABLE_TDL_TRB bits in the USB_CONF2 register.               When this option is enabled the TDL programming with EP_CMD.TDL+STDL is disabled, however read operation through this register can be performed.                 - 0 - controller doesn't support automatic internal TDL calculation                - 1 - controller supports automatic internal TDL calculation                This feature can be enabled only when controller supports it, i.e. when the USB_CAP1.TDL_FROM_TRB=1 and when DMULT mode for particular EP is set " range="29" rwaccess="R/W"/> 
		<bitfield id="TDL_FROM_TRB12I" width="1" begin="28" end="28" resetval="0x0" description="This field informs if support for automatic internal TDL calculation basing on the size provided in TRB for DMULT mode is enabled for selected Endpoint. To enable/disable this feature use the ENABLE_TDL_TRB/DISABLE_TDL_TRB bits in the USB_CONF2 register.               When this option is enabled the TDL programming with EP_CMD.TDL+STDL is disabled, however read operation through this register can be performed.                 - 0 - controller doesn't support automatic internal TDL calculation                - 1 - controller supports automatic internal TDL calculation                This feature can be enabled only when controller supports it, i.e. when the USB_CAP1.TDL_FROM_TRB=1 and when DMULT mode for particular EP is set " range="28" rwaccess="R/W"/> 
		<bitfield id="TDL_FROM_TRB11I" width="1" begin="27" end="27" resetval="0x0" description="This field informs if support for automatic internal TDL calculation basing on the size provided in TRB for DMULT mode is enabled for selected Endpoint. To enable/disable this feature use the ENABLE_TDL_TRB/DISABLE_TDL_TRB bits in the USB_CONF2 register.               When this option is enabled the TDL programming with EP_CMD.TDL+STDL is disabled, however read operation through this register can be performed.                 - 0 - controller doesn't support automatic internal TDL calculation                - 1 - controller supports automatic internal TDL calculation                This feature can be enabled only when controller supports it, i.e. when the USB_CAP1.TDL_FROM_TRB=1 and when DMULT mode for particular EP is set " range="27" rwaccess="R/W"/> 
		<bitfield id="TDL_FROM_TRB10I" width="1" begin="26" end="26" resetval="0x0" description="This field informs if support for automatic internal TDL calculation basing on the size provided in TRB for DMULT mode is enabled for selected Endpoint. To enable/disable this feature use the ENABLE_TDL_TRB/DISABLE_TDL_TRB bits in the USB_CONF2 register.               When this option is enabled the TDL programming with EP_CMD.TDL+STDL is disabled, however read operation through this register can be performed.                 - 0 - controller doesn't support automatic internal TDL calculation                - 1 - controller supports automatic internal TDL calculation                This feature can be enabled only when controller supports it, i.e. when the USB_CAP1.TDL_FROM_TRB=1 and when DMULT mode for particular EP is set " range="26" rwaccess="R/W"/> 
		<bitfield id="TDL_FROM_TRB9I" width="1" begin="25" end="25" resetval="0x0" description="This field informs if support for automatic internal TDL calculation basing on the size provided in TRB for DMULT mode is enabled for selected Endpoint. To enable/disable this feature use the ENABLE_TDL_TRB/DISABLE_TDL_TRB bits in the USB_CONF2 register.               When this option is enabled the TDL programming with EP_CMD.TDL+STDL is disabled, however read operation through this register can be performed.                 - 0 - controller doesn't support automatic internal TDL calculation                - 1 - controller supports automatic internal TDL calculation                This feature can be enabled only when controller supports it, i.e. when the USB_CAP1.TDL_FROM_TRB=1 and when DMULT mode for particular EP is set " range="25" rwaccess="R/W"/> 
		<bitfield id="TDL_FROM_TRB8I" width="1" begin="24" end="24" resetval="0x0" description="This field informs if support for automatic internal TDL calculation basing on the size provided in TRB for DMULT mode is enabled for selected Endpoint. To enable/disable this feature use the ENABLE_TDL_TRB/DISABLE_TDL_TRB bits in the USB_CONF2 register.               When this option is enabled the TDL programming with EP_CMD.TDL+STDL is disabled, however read operation through this register can be performed.                 - 0 - controller doesn't support automatic internal TDL calculation                - 1 - controller supports automatic internal TDL calculation                This feature can be enabled only when controller supports it, i.e. when the USB_CAP1.TDL_FROM_TRB=1 and when DMULT mode for particular EP is set " range="24" rwaccess="R/W"/> 
		<bitfield id="TDL_FROM_TRB7I" width="1" begin="23" end="23" resetval="0x0" description="This field informs if support for automatic internal TDL calculation basing on the size provided in TRB for DMULT mode is enabled for selected Endpoint. To enable/disable this feature use the ENABLE_TDL_TRB/DISABLE_TDL_TRB bits in the USB_CONF2 register.               When this option is enabled the TDL programming with EP_CMD.TDL+STDL is disabled, however read operation through this register can be performed.                 - 0 - controller doesn't support automatic internal TDL calculation                - 1 - controller supports automatic internal TDL calculation                This feature can be enabled only when controller supports it, i.e. when the USB_CAP1.TDL_FROM_TRB=1 and when DMULT mode for particular EP is set " range="23" rwaccess="R/W"/> 
		<bitfield id="TDL_FROM_TRB6I" width="1" begin="22" end="22" resetval="0x0" description="This field informs if support for automatic internal TDL calculation basing on the size provided in TRB for DMULT mode is enabled for selected Endpoint. To enable/disable this feature use the ENABLE_TDL_TRB/DISABLE_TDL_TRB bits in the USB_CONF2 register.               When this option is enabled the TDL programming with EP_CMD.TDL+STDL is disabled, however read operation through this register can be performed.                 - 0 - controller doesn't support automatic internal TDL calculation                - 1 - controller supports automatic internal TDL calculation                This feature can be enabled only when controller supports it, i.e. when the USB_CAP1.TDL_FROM_TRB=1 and when DMULT mode for particular EP is set " range="22" rwaccess="R/W"/> 
		<bitfield id="TDL_FROM_TRB5I" width="1" begin="21" end="21" resetval="0x0" description="This field informs if support for automatic internal TDL calculation basing on the size provided in TRB for DMULT mode is enabled for selected Endpoint. To enable/disable this feature use the ENABLE_TDL_TRB/DISABLE_TDL_TRB bits in the USB_CONF2 register.               When this option is enabled the TDL programming with EP_CMD.TDL+STDL is disabled, however read operation through this register can be performed.                 - 0 - controller doesn't support automatic internal TDL calculation                - 1 - controller supports automatic internal TDL calculation                This feature can be enabled only when controller supports it, i.e. when the USB_CAP1.TDL_FROM_TRB=1 and when DMULT mode for particular EP is set " range="21" rwaccess="R/W"/> 
		<bitfield id="TDL_FROM_TRB4I" width="1" begin="20" end="20" resetval="0x0" description="This field informs if support for automatic internal TDL calculation basing on the size provided in TRB for DMULT mode is enabled for selected Endpoint. To enable/disable this feature use the ENABLE_TDL_TRB/DISABLE_TDL_TRB bits in the USB_CONF2 register.               When this option is enabled the TDL programming with EP_CMD.TDL+STDL is disabled, however read operation through this register can be performed.                 - 0 - controller doesn't support automatic internal TDL calculation                - 1 - controller supports automatic internal TDL calculation                This feature can be enabled only when controller supports it, i.e. when the USB_CAP1.TDL_FROM_TRB=1 and when DMULT mode for particular EP is set " range="20" rwaccess="R/W"/> 
		<bitfield id="TDL_FROM_TRB3I" width="1" begin="19" end="19" resetval="0x0" description="This field informs if support for automatic internal TDL calculation basing on the size provided in TRB for DMULT mode is enabled for selected Endpoint. To enable/disable this feature use the ENABLE_TDL_TRB/DISABLE_TDL_TRB bits in the USB_CONF2 register.               When this option is enabled the TDL programming with EP_CMD.TDL+STDL is disabled, however read operation through this register can be performed.                 - 0 - controller doesn't support automatic internal TDL calculation                - 1 - controller supports automatic internal TDL calculation                This feature can be enabled only when controller supports it, i.e. when the USB_CAP1.TDL_FROM_TRB=1 and when DMULT mode for particular EP is set " range="19" rwaccess="R/W"/> 
		<bitfield id="TDL_FROM_TRB2I" width="1" begin="18" end="18" resetval="0x0" description="This field informs if support for automatic internal TDL calculation basing on the size provided in TRB for DMULT mode is enabled for selected Endpoint. To enable/disable this feature use the ENABLE_TDL_TRB/DISABLE_TDL_TRB bits in the USB_CONF2 register.               When this option is enabled the TDL programming with EP_CMD.TDL+STDL is disabled, however read operation through this register can be performed.                 - 0 - controller doesn't support automatic internal TDL calculation                - 1 - controller supports automatic internal TDL calculation                This feature can be enabled only when controller supports it, i.e. when the USB_CAP1.TDL_FROM_TRB=1 and when DMULT mode for particular EP is set " range="18" rwaccess="R/W"/> 
		<bitfield id="TDL_FROM_TRB1I" width="1" begin="17" end="17" resetval="0x0" description="This field informs if support for automatic internal TDL calculation basing on the size provided in TRB for DMULT mode is enabled for selected Endpoint. To enable/disable this feature use the ENABLE_TDL_TRB/DISABLE_TDL_TRB bits in the USB_CONF2 register.               When this option is enabled the TDL programming with EP_CMD.TDL+STDL is disabled, however read operation through this register can be performed.                 - 0 - controller doesn't support automatic internal TDL calculation                - 1 - controller supports automatic internal TDL calculation                This feature can be enabled only when controller supports it, i.e. when the USB_CAP1.TDL_FROM_TRB=1 and when DMULT mode for particular EP is set " range="17" rwaccess="R/W"/> 
		<bitfield id="TDL_FROM_TRB0I" width="1" begin="16" end="16" resetval="0x0" description="This field informs if support for automatic internal TDL calculation basing on the size provided in TRB for DMULT mode is enabled for selected Endpoint. To enable/disable this feature use the ENABLE_TDL_TRB/DISABLE_TDL_TRB bits in the USB_CONF2 register.               When this option is enabled the TDL programming with EP_CMD.TDL+STDL is disabled, however read operation through this register can be performed.                 - 0 - controller doesn't support automatic internal TDL calculation                - 1 - controller supports automatic internal TDL calculation                This feature can be enabled only when controller supports it, i.e. when the USB_CAP1.TDL_FROM_TRB=1 and when DMULT mode for particular EP is set " range="16" rwaccess="R/W"/> 
		<bitfield id="TDL_FROM_TRB15O" width="1" begin="15" end="15" resetval="0x0" description="This field informs if support for automatic internal TDL calculation basing on the size provided in TRB for DMULT mode is enabled for selected Endpoint. To enable/disable this feature use the ENABLE_TDL_TRB/DISABLE_TDL_TRB bits in the USB_CONF2 register.               When this option is enabled the TDL programming with EP_CMD.TDL+STDL is disabled, however read operation through this register can be performed.                 - 0 - controller doesn't support automatic internal TDL calculation                - 1 - controller supports automatic internal TDL calculation                This feature can be enabled only when controller supports it, i.e. when the USB_CAP1.TDL_FROM_TRB=1 and when DMULT mode for particular EP is set " range="15" rwaccess="R/W"/> 
		<bitfield id="TDL_FROM_TRB14O" width="1" begin="14" end="14" resetval="0x0" description="This field informs if support for automatic internal TDL calculation basing on the size provided in TRB for DMULT mode is enabled for selected Endpoint. To enable/disable this feature use the ENABLE_TDL_TRB/DISABLE_TDL_TRB bits in the USB_CONF2 register.               When this option is enabled the TDL programming with EP_CMD.TDL+STDL is disabled, however read operation through this register can be performed.                 - 0 - controller doesn't support automatic internal TDL calculation                - 1 - controller supports automatic internal TDL calculation                This feature can be enabled only when controller supports it, i.e. when the USB_CAP1.TDL_FROM_TRB=1 and when DMULT mode for particular EP is set " range="14" rwaccess="R/W"/> 
		<bitfield id="TDL_FROM_TRB13O" width="1" begin="13" end="13" resetval="0x0" description="This field informs if support for automatic internal TDL calculation basing on the size provided in TRB for DMULT mode is enabled for selected Endpoint. To enable/disable this feature use the ENABLE_TDL_TRB/DISABLE_TDL_TRB bits in the USB_CONF2 register.               When this option is enabled the TDL programming with EP_CMD.TDL+STDL is disabled, however read operation through this register can be performed.                 - 0 - controller doesn't support automatic internal TDL calculation                - 1 - controller supports automatic internal TDL calculation                This feature can be enabled only when controller supports it, i.e. when the USB_CAP1.TDL_FROM_TRB=1 and when DMULT mode for particular EP is set " range="13" rwaccess="R/W"/> 
		<bitfield id="TDL_FROM_TRB12O" width="1" begin="12" end="12" resetval="0x0" description="This field informs if support for automatic internal TDL calculation basing on the size provided in TRB for DMULT mode is enabled for selected Endpoint. To enable/disable this feature use the ENABLE_TDL_TRB/DISABLE_TDL_TRB bits in the USB_CONF2 register.               When this option is enabled the TDL programming with EP_CMD.TDL+STDL is disabled, however read operation through this register can be performed.                 - 0 - controller doesn't support automatic internal TDL calculation                - 1 - controller supports automatic internal TDL calculation                This feature can be enabled only when controller supports it, i.e. when the USB_CAP1.TDL_FROM_TRB=1 and when DMULT mode for particular EP is set " range="12" rwaccess="R/W"/> 
		<bitfield id="TDL_FROM_TRB11O" width="1" begin="11" end="11" resetval="0x0" description="This field informs if support for automatic internal TDL calculation basing on the size provided in TRB for DMULT mode is enabled for selected Endpoint. To enable/disable this feature use the ENABLE_TDL_TRB/DISABLE_TDL_TRB bits in the USB_CONF2 register.               When this option is enabled the TDL programming with EP_CMD.TDL+STDL is disabled, however read operation through this register can be performed.                 - 0 - controller doesn't support automatic internal TDL calculation                - 1 - controller supports automatic internal TDL calculation                This feature can be enabled only when controller supports it, i.e. when the USB_CAP1.TDL_FROM_TRB=1 and when DMULT mode for particular EP is set " range="11" rwaccess="R/W"/> 
		<bitfield id="TDL_FROM_TRB10O" width="1" begin="10" end="10" resetval="0x0" description="This field informs if support for automatic internal TDL calculation basing on the size provided in TRB for DMULT mode is enabled for selected Endpoint. To enable/disable this feature use the ENABLE_TDL_TRB/DISABLE_TDL_TRB bits in the USB_CONF2 register.               When this option is enabled the TDL programming with EP_CMD.TDL+STDL is disabled, however read operation through this register can be performed.                 - 0 - controller doesn't support automatic internal TDL calculation                - 1 - controller supports automatic internal TDL calculation                This feature can be enabled only when controller supports it, i.e. when the USB_CAP1.TDL_FROM_TRB=1 and when DMULT mode for particular EP is set " range="10" rwaccess="R/W"/> 
		<bitfield id="TDL_FROM_TRB9O" width="1" begin="9" end="9" resetval="0x0" description="This field informs if support for automatic internal TDL calculation basing on the size provided in TRB for DMULT mode is enabled for selected Endpoint. To enable/disable this feature use the ENABLE_TDL_TRB/DISABLE_TDL_TRB bits in the USB_CONF2 register.               When this option is enabled the TDL programming with EP_CMD.TDL+STDL is disabled, however read operation through this register can be performed.                 - 0 - controller doesn't support automatic internal TDL calculation                - 1 - controller supports automatic internal TDL calculation                This feature can be enabled only when controller supports it, i.e. when the USB_CAP1.TDL_FROM_TRB=1 and when DMULT mode for particular EP is set " range="9" rwaccess="R/W"/> 
		<bitfield id="TDL_FROM_TRB8O" width="1" begin="8" end="8" resetval="0x0" description="This field informs if support for automatic internal TDL calculation basing on the size provided in TRB for DMULT mode is enabled for selected Endpoint. To enable/disable this feature use the ENABLE_TDL_TRB/DISABLE_TDL_TRB bits in the USB_CONF2 register.               When this option is enabled the TDL programming with EP_CMD.TDL+STDL is disabled, however read operation through this register can be performed.                 - 0 - controller doesn't support automatic internal TDL calculation                - 1 - controller supports automatic internal TDL calculation                This feature can be enabled only when controller supports it, i.e. when the USB_CAP1.TDL_FROM_TRB=1 and when DMULT mode for particular EP is set " range="8" rwaccess="R/W"/> 
		<bitfield id="TDL_FROM_TRB7O" width="1" begin="7" end="7" resetval="0x0" description="This field informs if support for automatic internal TDL calculation basing on the size provided in TRB for DMULT mode is enabled for selected Endpoint. To enable/disable this feature use the ENABLE_TDL_TRB/DISABLE_TDL_TRB bits in the USB_CONF2 register.               When this option is enabled the TDL programming with EP_CMD.TDL+STDL is disabled, however read operation through this register can be performed.                 - 0 - controller doesn't support automatic internal TDL calculation                - 1 - controller supports automatic internal TDL calculation                This feature can be enabled only when controller supports it, i.e. when the USB_CAP1.TDL_FROM_TRB=1 and when DMULT mode for particular EP is set " range="7" rwaccess="R/W"/> 
		<bitfield id="TDL_FROM_TRB6O" width="1" begin="6" end="6" resetval="0x0" description="This field informs if support for automatic internal TDL calculation basing on the size provided in TRB for DMULT mode is enabled for selected Endpoint. To enable/disable this feature use the ENABLE_TDL_TRB/DISABLE_TDL_TRB bits in the USB_CONF2 register.               When this option is enabled the TDL programming with EP_CMD.TDL+STDL is disabled, however read operation through this register can be performed.                 - 0 - controller doesn't support automatic internal TDL calculation                - 1 - controller supports automatic internal TDL calculation                This feature can be enabled only when controller supports it, i.e. when the USB_CAP1.TDL_FROM_TRB=1 and when DMULT mode for particular EP is set " range="6" rwaccess="R/W"/> 
		<bitfield id="TDL_FROM_TRB5O" width="1" begin="5" end="5" resetval="0x0" description="This field informs if support for automatic internal TDL calculation basing on the size provided in TRB for DMULT mode is enabled for selected Endpoint. To enable/disable this feature use the ENABLE_TDL_TRB/DISABLE_TDL_TRB bits in the USB_CONF2 register.               When this option is enabled the TDL programming with EP_CMD.TDL+STDL is disabled, however read operation through this register can be performed.                 - 0 - controller doesn't support automatic internal TDL calculation                - 1 - controller supports automatic internal TDL calculation                This feature can be enabled only when controller supports it, i.e. when the USB_CAP1.TDL_FROM_TRB=1 and when DMULT mode for particular EP is set " range="5" rwaccess="R/W"/> 
		<bitfield id="TDL_FROM_TRB4O" width="1" begin="4" end="4" resetval="0x0" description="This field informs if support for automatic internal TDL calculation basing on the size provided in TRB for DMULT mode is enabled for selected Endpoint. To enable/disable this feature use the ENABLE_TDL_TRB/DISABLE_TDL_TRB bits in the USB_CONF2 register.               When this option is enabled the TDL programming with EP_CMD.TDL+STDL is disabled, however read operation through this register can be performed.                 - 0 - controller doesn't support automatic internal TDL calculation                - 1 - controller supports automatic internal TDL calculation                This feature can be enabled only when controller supports it, i.e. when the USB_CAP1.TDL_FROM_TRB=1 and when DMULT mode for particular EP is set " range="4" rwaccess="R/W"/> 
		<bitfield id="TDL_FROM_TRB3O" width="1" begin="3" end="3" resetval="0x0" description="This field informs if support for automatic internal TDL calculation basing on the size provided in TRB for DMULT mode is enabled for selected Endpoint. To enable/disable this feature use the ENABLE_TDL_TRB/DISABLE_TDL_TRB bits in the USB_CONF2 register.               When this option is enabled the TDL programming with EP_CMD.TDL+STDL is disabled, however read operation through this register can be performed.                 - 0 - controller doesn't support automatic internal TDL calculation                - 1 - controller supports automatic internal TDL calculation                This feature can be enabled only when controller supports it, i.e. when the USB_CAP1.TDL_FROM_TRB=1 and when DMULT mode for particular EP is set " range="3" rwaccess="R/W"/> 
		<bitfield id="TDL_FROM_TRB2O" width="1" begin="2" end="2" resetval="0x0" description="This field informs if support for automatic internal TDL calculation basing on the size provided in TRB for DMULT mode is enabled for selected Endpoint. To enable/disable this feature use the ENABLE_TDL_TRB/DISABLE_TDL_TRB bits in the USB_CONF2 register.               When this option is enabled the TDL programming with EP_CMD.TDL+STDL is disabled, however read operation through this register can be performed.                 - 0 - controller doesn't support automatic internal TDL calculation                - 1 - controller supports automatic internal TDL calculation                This feature can be enabled only when controller supports it, i.e. when the USB_CAP1.TDL_FROM_TRB=1 and when DMULT mode for particular EP is set " range="2" rwaccess="R/W"/> 
		<bitfield id="TDL_FROM_TRB1O" width="1" begin="1" end="1" resetval="0x0" description="This field informs if support for automatic internal TDL calculation basing on the size provided in TRB for DMULT mode is enabled for selected Endpoint. To enable/disable this feature use the ENABLE_TDL_TRB/DISABLE_TDL_TRB bits in the USB_CONF2 register.               When this option is enabled the TDL programming with EP_CMD.TDL+STDL is disabled, however read operation through this register can be performed.                 - 0 - controller doesn't support automatic internal TDL calculation                - 1 - controller supports automatic internal TDL calculation                This feature can be enabled only when controller supports it, i.e. when the USB_CAP1.TDL_FROM_TRB=1 and when DMULT mode for particular EP is set " range="1" rwaccess="R/W"/> 
		<bitfield id="TDL_FROM_TRB0O" width="1" begin="0" end="0" resetval="0x0" description="This field informs if support for automatic internal TDL calculation basing on the size provided in TRB for DMULT mode is enabled for selected Endpoint. To enable/disable this feature use the ENABLE_TDL_TRB/DISABLE_TDL_TRB bits in the USB_CONF2 register.               When this option is enabled the TDL programming with EP_CMD.TDL+STDL is disabled, however read operation through this register can be performed.                 - 0 - controller doesn't support automatic internal TDL calculation                - 1 - controller supports automatic internal TDL calculation                This feature can be enabled only when controller supports it, i.e. when the USB_CAP1.TDL_FROM_TRB=1 and when DMULT mode for particular EP is set " range="0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_tdl_beh" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_tdl_beh" offset="0x20088" width="32" description="TDL behavior configuration Register. Value 0 means that USB short packet decrements TDL, value 1 means that USB short packet clears-blocks TDL (defined by TDL_BEH2 register). When specific Endpoint works in TDL_FROM_TRB mode (TDL_FROM_TRB.n == 1) this register must be set to 1. When specific Endpoint is configured to Bulk stream transfers (EP_CFG.STREAM_EN == 1) this register must be set to 0. Bits 0..15 applies to EPOUT0..EPOUT15">
		<bitfield id="RESERVED" width="1" begin="31" end="31" resetval="0x0" description="Reserved field. Write ignored. 0 when read." range="31" rwaccess="N/A"/> 
		<bitfield id="RESERVED" width="1" begin="30" end="30" resetval="0x0" description="Reserved field. Write ignored. 0 when read." range="30" rwaccess="N/A"/> 
		<bitfield id="RESERVED" width="1" begin="29" end="29" resetval="0x0" description="Reserved field. Write ignored. 0 when read." range="29" rwaccess="N/A"/> 
		<bitfield id="RESERVED" width="1" begin="28" end="28" resetval="0x0" description="Reserved field. Write ignored. 0 when read." range="28" rwaccess="N/A"/> 
		<bitfield id="RESERVED" width="1" begin="27" end="27" resetval="0x0" description="Reserved field. Write ignored. 0 when read." range="27" rwaccess="N/A"/> 
		<bitfield id="RESERVED" width="1" begin="26" end="26" resetval="0x0" description="Reserved field. Write ignored. 0 when read." range="26" rwaccess="N/A"/> 
		<bitfield id="RESERVED" width="1" begin="25" end="25" resetval="0x0" description="Reserved field. Write ignored. 0 when read." range="25" rwaccess="N/A"/> 
		<bitfield id="RESERVED" width="1" begin="24" end="24" resetval="0x0" description="Reserved field. Write ignored. 0 when read." range="24" rwaccess="N/A"/> 
		<bitfield id="RESERVED" width="1" begin="23" end="23" resetval="0x0" description="Reserved field. Write ignored. 0 when read." range="23" rwaccess="N/A"/> 
		<bitfield id="RESERVED" width="1" begin="22" end="22" resetval="0x0" description="Reserved field. Write ignored. 0 when read." range="22" rwaccess="N/A"/> 
		<bitfield id="RESERVED" width="1" begin="21" end="21" resetval="0x0" description="Reserved field. Write ignored. 0 when read." range="21" rwaccess="N/A"/> 
		<bitfield id="RESERVED" width="1" begin="20" end="20" resetval="0x0" description="Reserved field. Write ignored. 0 when read." range="20" rwaccess="N/A"/> 
		<bitfield id="RESERVED" width="1" begin="19" end="19" resetval="0x0" description="Reserved field. Write ignored. 0 when read." range="19" rwaccess="N/A"/> 
		<bitfield id="RESERVED" width="1" begin="18" end="18" resetval="0x0" description="Reserved field. Write ignored. 0 when read." range="18" rwaccess="N/A"/> 
		<bitfield id="RESERVED" width="1" begin="17" end="17" resetval="0x0" description="Reserved field. Write ignored. 0 when read." range="17" rwaccess="N/A"/> 
		<bitfield id="RESERVED" width="1" begin="16" end="16" resetval="0x0" description="Reserved field. Write ignored. 0 when read." range="16" rwaccess="N/A"/> 
		<bitfield id="TDL_BEH15O" width="1" begin="15" end="15" resetval="0x0" description="TDL behavior configuration Bit. This register configures TDL behavior for selected Endpoint." range="15" rwaccess="R/W"/> 
		<bitfield id="TDL_BEH14O" width="1" begin="14" end="14" resetval="0x0" description="TDL behavior configuration Bit. This register configures TDL behavior for selected Endpoint." range="14" rwaccess="R/W"/> 
		<bitfield id="TDL_BEH13O" width="1" begin="13" end="13" resetval="0x0" description="TDL behavior configuration Bit. This register configures TDL behavior for selected Endpoint." range="13" rwaccess="R/W"/> 
		<bitfield id="TDL_BEH12O" width="1" begin="12" end="12" resetval="0x0" description="TDL behavior configuration Bit. This register configures TDL behavior for selected Endpoint." range="12" rwaccess="R/W"/> 
		<bitfield id="TDL_BEH11O" width="1" begin="11" end="11" resetval="0x0" description="TDL behavior configuration Bit. This register configures TDL behavior for selected Endpoint." range="11" rwaccess="R/W"/> 
		<bitfield id="TDL_BEH10O" width="1" begin="10" end="10" resetval="0x0" description="TDL behavior configuration Bit. This register configures TDL behavior for selected Endpoint." range="10" rwaccess="R/W"/> 
		<bitfield id="TDL_BEH9O" width="1" begin="9" end="9" resetval="0x0" description="TDL behavior configuration Bit. This register configures TDL behavior for selected Endpoint." range="9" rwaccess="R/W"/> 
		<bitfield id="TDL_BEH8O" width="1" begin="8" end="8" resetval="0x0" description="TDL behavior configuration Bit. This register configures TDL behavior for selected Endpoint." range="8" rwaccess="R/W"/> 
		<bitfield id="TDL_BEH7O" width="1" begin="7" end="7" resetval="0x0" description="TDL behavior configuration Bit. This register configures TDL behavior for selected Endpoint." range="7" rwaccess="R/W"/> 
		<bitfield id="TDL_BEH6O" width="1" begin="6" end="6" resetval="0x0" description="TDL behavior configuration Bit. This register configures TDL behavior for selected Endpoint." range="6" rwaccess="R/W"/> 
		<bitfield id="TDL_BEH5O" width="1" begin="5" end="5" resetval="0x0" description="TDL behavior configuration Bit. This register configures TDL behavior for selected Endpoint." range="5" rwaccess="R/W"/> 
		<bitfield id="TDL_BEH4O" width="1" begin="4" end="4" resetval="0x0" description="TDL behavior configuration Bit. This register configures TDL behavior for selected Endpoint." range="4" rwaccess="R/W"/> 
		<bitfield id="TDL_BEH3O" width="1" begin="3" end="3" resetval="0x0" description="TDL behavior configuration Bit. This register configures TDL behavior for selected Endpoint." range="3" rwaccess="R/W"/> 
		<bitfield id="TDL_BEH2O" width="1" begin="2" end="2" resetval="0x0" description="TDL behavior configuration Bit. This register configures TDL behavior for selected Endpoint." range="2" rwaccess="R/W"/> 
		<bitfield id="TDL_BEH1O" width="1" begin="1" end="1" resetval="0x0" description="TDL behavior configuration Bit. This register configures TDL behavior for selected Endpoint." range="1" rwaccess="R/W"/> 
		<bitfield id="TDL_BEH0O" width="1" begin="0" end="0" resetval="0x0" description="TDL behavior configuration Bit. This register configures TDL behavior for selected Endpoint." range="0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ep_tdl" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_ep_tdl" offset="0x2008C" width="32" description="Endpoint TDL Register">
		<bitfield id="RESERVED0" width="21" begin="31" end="11" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="31 - 11" rwaccess="R"/> 
		<bitfield id="TDL" width="11" begin="10" end="0" resetval="0x0" description="This field can be used to update/read internal TDL counter when TDL_FROM_TRB mode is not enabled for specific Endpoint.Writing into this field any non-zero value, will result in adding to existing TDL value the new written value. A as the maximum accumulative value of TDL counter is 2047, so when new value is written, and a sum of existing value and new value exceeds 2047, then register is wrap around, e.g. adding value 10 to the existing 2040 will result a value 2 in the TDL register. Writing zero, reset TDL counter to zero. For more information see USBSS-DEV_design_specification document." range="10 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_tdl_beh2" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_tdl_beh2" offset="0x20090" width="32" description="TDL behavior 2 configuration Register. Value 0 means that USB short packet temporary gates TDL for protocol, allowing SW to read curent value of TDL. After SW reads TDL (on IOT irq) it should clear TDL to remove gating TDL value for protocol, value 1 means that USB short packet immediatelly clears TDL.  When specific Endpoint works in TDL_FROM_TRB mode (TDL_FROM_TRB.n == 1) this register must be set to 1. When specific Endpoint is configured to Bulk stream transfers (EP_CFG.STREAM_EN == 1) this register must be set to 0. Bits 0..15 applies to EPOUT0..EPOUT15">
		<bitfield id="RESERVED" width="1" begin="31" end="31" resetval="0x0" description="Reserved field. Write ignored. 0 when read." range="31" rwaccess="N/A"/> 
		<bitfield id="RESERVED" width="1" begin="30" end="30" resetval="0x0" description="Reserved field. Write ignored. 0 when read." range="30" rwaccess="N/A"/> 
		<bitfield id="RESERVED" width="1" begin="29" end="29" resetval="0x0" description="Reserved field. Write ignored. 0 when read." range="29" rwaccess="N/A"/> 
		<bitfield id="RESERVED" width="1" begin="28" end="28" resetval="0x0" description="Reserved field. Write ignored. 0 when read." range="28" rwaccess="N/A"/> 
		<bitfield id="RESERVED" width="1" begin="27" end="27" resetval="0x0" description="Reserved field. Write ignored. 0 when read." range="27" rwaccess="N/A"/> 
		<bitfield id="RESERVED" width="1" begin="26" end="26" resetval="0x0" description="Reserved field. Write ignored. 0 when read." range="26" rwaccess="N/A"/> 
		<bitfield id="RESERVED" width="1" begin="25" end="25" resetval="0x0" description="Reserved field. Write ignored. 0 when read." range="25" rwaccess="N/A"/> 
		<bitfield id="RESERVED" width="1" begin="24" end="24" resetval="0x0" description="Reserved field. Write ignored. 0 when read." range="24" rwaccess="N/A"/> 
		<bitfield id="RESERVED" width="1" begin="23" end="23" resetval="0x0" description="Reserved field. Write ignored. 0 when read." range="23" rwaccess="N/A"/> 
		<bitfield id="RESERVED" width="1" begin="22" end="22" resetval="0x0" description="Reserved field. Write ignored. 0 when read." range="22" rwaccess="N/A"/> 
		<bitfield id="RESERVED" width="1" begin="21" end="21" resetval="0x0" description="Reserved field. Write ignored. 0 when read." range="21" rwaccess="N/A"/> 
		<bitfield id="RESERVED" width="1" begin="20" end="20" resetval="0x0" description="Reserved field. Write ignored. 0 when read." range="20" rwaccess="N/A"/> 
		<bitfield id="RESERVED" width="1" begin="19" end="19" resetval="0x0" description="Reserved field. Write ignored. 0 when read." range="19" rwaccess="N/A"/> 
		<bitfield id="RESERVED" width="1" begin="18" end="18" resetval="0x0" description="Reserved field. Write ignored. 0 when read." range="18" rwaccess="N/A"/> 
		<bitfield id="RESERVED" width="1" begin="17" end="17" resetval="0x0" description="Reserved field. Write ignored. 0 when read." range="17" rwaccess="N/A"/> 
		<bitfield id="RESERVED" width="1" begin="16" end="16" resetval="0x0" description="Reserved field. Write ignored. 0 when read." range="16" rwaccess="N/A"/> 
		<bitfield id="TDL_BEH215O" width="1" begin="15" end="15" resetval="0x0" description="TDL behavior 2 configuration Bit. This register configures TDL behavior for selected Endpoint." range="15" rwaccess="R/W"/> 
		<bitfield id="TDL_BEH214O" width="1" begin="14" end="14" resetval="0x0" description="TDL behavior 2 configuration Bit. This register configures TDL behavior for selected Endpoint." range="14" rwaccess="R/W"/> 
		<bitfield id="TDL_BEH213O" width="1" begin="13" end="13" resetval="0x0" description="TDL behavior 2 configuration Bit. This register configures TDL behavior for selected Endpoint." range="13" rwaccess="R/W"/> 
		<bitfield id="TDL_BEH212O" width="1" begin="12" end="12" resetval="0x0" description="TDL behavior 2 configuration Bit. This register configures TDL behavior for selected Endpoint." range="12" rwaccess="R/W"/> 
		<bitfield id="TDL_BEH211O" width="1" begin="11" end="11" resetval="0x0" description="TDL behavior 2 configuration Bit. This register configures TDL behavior for selected Endpoint." range="11" rwaccess="R/W"/> 
		<bitfield id="TDL_BEH210O" width="1" begin="10" end="10" resetval="0x0" description="TDL behavior 2 configuration Bit. This register configures TDL behavior for selected Endpoint." range="10" rwaccess="R/W"/> 
		<bitfield id="TDL_BEH29O" width="1" begin="9" end="9" resetval="0x0" description="TDL behavior 2 configuration Bit. This register configures TDL behavior for selected Endpoint." range="9" rwaccess="R/W"/> 
		<bitfield id="TDL_BEH28O" width="1" begin="8" end="8" resetval="0x0" description="TDL behavior 2 configuration Bit. This register configures TDL behavior for selected Endpoint." range="8" rwaccess="R/W"/> 
		<bitfield id="TDL_BEH27O" width="1" begin="7" end="7" resetval="0x0" description="TDL behavior 2 configuration Bit. This register configures TDL behavior for selected Endpoint." range="7" rwaccess="R/W"/> 
		<bitfield id="TDL_BEH26O" width="1" begin="6" end="6" resetval="0x0" description="TDL behavior 2 configuration Bit. This register configures TDL behavior for selected Endpoint." range="6" rwaccess="R/W"/> 
		<bitfield id="TDL_BEH25O" width="1" begin="5" end="5" resetval="0x0" description="TDL behavior 2 configuration Bit. This register configures TDL behavior for selected Endpoint." range="5" rwaccess="R/W"/> 
		<bitfield id="TDL_BEH24O" width="1" begin="4" end="4" resetval="0x0" description="TDL behavior 2 configuration Bit. This register configures TDL behavior for selected Endpoint." range="4" rwaccess="R/W"/> 
		<bitfield id="TDL_BEH23O" width="1" begin="3" end="3" resetval="0x0" description="TDL behavior 2 configuration Bit. This register configures TDL behavior for selected Endpoint." range="3" rwaccess="R/W"/> 
		<bitfield id="TDL_BEH22O" width="1" begin="2" end="2" resetval="0x0" description="TDL behavior 2 configuration Bit. This register configures TDL behavior for selected Endpoint." range="2" rwaccess="R/W"/> 
		<bitfield id="TDL_BEH21O" width="1" begin="1" end="1" resetval="0x0" description="TDL behavior 2 configuration Bit. This register configures TDL behavior for selected Endpoint." range="1" rwaccess="R/W"/> 
		<bitfield id="TDL_BEH20O" width="1" begin="0" end="0" resetval="0x0" description="TDL behavior 2 configuration Bit. This register configures TDL behavior for selected Endpoint." range="0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_dma_adv_td" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_dma_adv_td" offset="0x20094" width="32" description="DMA Advance TD configuration Register  (0 - when stopped during transfer, DMA will advance its address only to the next TRB (+12) start address. 1 - when stopped during transfer (e.g. on USB short packet received in TDL_FROM_TRB mode) DMA will advance its address to the next TD start address). Bits 0..15 applies to EPOUT0..EPOUT15 and bits 16..31 applies to EPIN0..EPIN15">
		<bitfield id="DMA_ADV_TD15I" width="1" begin="31" end="31" resetval="0x0" description="DMA Advance TD configuration Register for selected Endpoint." range="31" rwaccess="R/W"/> 
		<bitfield id="DMA_ADV_TD14I" width="1" begin="30" end="30" resetval="0x0" description="DMA Advance TD configuration Register for selected Endpoint." range="30" rwaccess="R/W"/> 
		<bitfield id="DMA_ADV_TD13I" width="1" begin="29" end="29" resetval="0x0" description="DMA Advance TD configuration Register for selected Endpoint." range="29" rwaccess="R/W"/> 
		<bitfield id="DMA_ADV_TD12I" width="1" begin="28" end="28" resetval="0x0" description="DMA Advance TD configuration Register for selected Endpoint." range="28" rwaccess="R/W"/> 
		<bitfield id="DMA_ADV_TD11I" width="1" begin="27" end="27" resetval="0x0" description="DMA Advance TD configuration Register for selected Endpoint." range="27" rwaccess="R/W"/> 
		<bitfield id="DMA_ADV_TD10I" width="1" begin="26" end="26" resetval="0x0" description="DMA Advance TD configuration Register for selected Endpoint." range="26" rwaccess="R/W"/> 
		<bitfield id="DMA_ADV_TD9I" width="1" begin="25" end="25" resetval="0x0" description="DMA Advance TD configuration Register for selected Endpoint." range="25" rwaccess="R/W"/> 
		<bitfield id="DMA_ADV_TD8I" width="1" begin="24" end="24" resetval="0x0" description="DMA Advance TD configuration Register for selected Endpoint." range="24" rwaccess="R/W"/> 
		<bitfield id="DMA_ADV_TD7I" width="1" begin="23" end="23" resetval="0x0" description="DMA Advance TD configuration Register for selected Endpoint." range="23" rwaccess="R/W"/> 
		<bitfield id="DMA_ADV_TD6I" width="1" begin="22" end="22" resetval="0x0" description="DMA Advance TD configuration Register for selected Endpoint." range="22" rwaccess="R/W"/> 
		<bitfield id="DMA_ADV_TD5I" width="1" begin="21" end="21" resetval="0x0" description="DMA Advance TD configuration Register for selected Endpoint." range="21" rwaccess="R/W"/> 
		<bitfield id="DMA_ADV_TD4I" width="1" begin="20" end="20" resetval="0x0" description="DMA Advance TD configuration Register for selected Endpoint." range="20" rwaccess="R/W"/> 
		<bitfield id="DMA_ADV_TD3I" width="1" begin="19" end="19" resetval="0x0" description="DMA Advance TD configuration Register for selected Endpoint." range="19" rwaccess="R/W"/> 
		<bitfield id="DMA_ADV_TD2I" width="1" begin="18" end="18" resetval="0x0" description="DMA Advance TD configuration Register for selected Endpoint." range="18" rwaccess="R/W"/> 
		<bitfield id="DMA_ADV_TD1I" width="1" begin="17" end="17" resetval="0x0" description="DMA Advance TD configuration Register for selected Endpoint." range="17" rwaccess="R/W"/> 
		<bitfield id="DMA_ADV_TD0I" width="1" begin="16" end="16" resetval="0x0" description="DMA Advance TD configuration Register for selected Endpoint." range="16" rwaccess="R/W"/> 
		<bitfield id="DMA_ADV_TD15O" width="1" begin="15" end="15" resetval="0x0" description="DMA Advance TD configuration Register for selected Endpoint." range="15" rwaccess="R/W"/> 
		<bitfield id="DMA_ADV_TD14O" width="1" begin="14" end="14" resetval="0x0" description="DMA Advance TD configuration Register for selected Endpoint." range="14" rwaccess="R/W"/> 
		<bitfield id="DMA_ADV_TD13O" width="1" begin="13" end="13" resetval="0x0" description="DMA Advance TD configuration Register for selected Endpoint." range="13" rwaccess="R/W"/> 
		<bitfield id="DMA_ADV_TD12O" width="1" begin="12" end="12" resetval="0x0" description="DMA Advance TD configuration Register for selected Endpoint." range="12" rwaccess="R/W"/> 
		<bitfield id="DMA_ADV_TD11O" width="1" begin="11" end="11" resetval="0x0" description="DMA Advance TD configuration Register for selected Endpoint." range="11" rwaccess="R/W"/> 
		<bitfield id="DMA_ADV_TD10O" width="1" begin="10" end="10" resetval="0x0" description="DMA Advance TD configuration Register for selected Endpoint." range="10" rwaccess="R/W"/> 
		<bitfield id="DMA_ADV_TD9O" width="1" begin="9" end="9" resetval="0x0" description="DMA Advance TD configuration Register for selected Endpoint." range="9" rwaccess="R/W"/> 
		<bitfield id="DMA_ADV_TD8O" width="1" begin="8" end="8" resetval="0x0" description="DMA Advance TD configuration Register for selected Endpoint." range="8" rwaccess="R/W"/> 
		<bitfield id="DMA_ADV_TD7O" width="1" begin="7" end="7" resetval="0x0" description="DMA Advance TD configuration Register for selected Endpoint." range="7" rwaccess="R/W"/> 
		<bitfield id="DMA_ADV_TD6O" width="1" begin="6" end="6" resetval="0x0" description="DMA Advance TD configuration Register for selected Endpoint." range="6" rwaccess="R/W"/> 
		<bitfield id="DMA_ADV_TD5O" width="1" begin="5" end="5" resetval="0x0" description="DMA Advance TD configuration Register for selected Endpoint." range="5" rwaccess="R/W"/> 
		<bitfield id="DMA_ADV_TD4O" width="1" begin="4" end="4" resetval="0x0" description="DMA Advance TD configuration Register for selected Endpoint." range="4" rwaccess="R/W"/> 
		<bitfield id="DMA_ADV_TD3O" width="1" begin="3" end="3" resetval="0x0" description="DMA Advance TD configuration Register for selected Endpoint." range="3" rwaccess="R/W"/> 
		<bitfield id="DMA_ADV_TD2O" width="1" begin="2" end="2" resetval="0x0" description="DMA Advance TD configuration Register for selected Endpoint." range="2" rwaccess="R/W"/> 
		<bitfield id="DMA_ADV_TD1O" width="1" begin="1" end="1" resetval="0x0" description="DMA Advance TD configuration Register for selected Endpoint." range="1" rwaccess="R/W"/> 
		<bitfield id="DMA_ADV_TD0O" width="1" begin="0" end="0" resetval="0x0" description="DMA Advance TD configuration Register for selected Endpoint." range="0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg1" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg1" offset="0x20100" width="32" description="VBUS debouncer Configuration Register 1">
		<bitfield id="RESERVED" width="14" begin="31" end="18" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="31 - 18" rwaccess="R"/> 
		<bitfield id="DEBOUNCER_CNT" width="18" begin="17" end="0" resetval="0x229376" description="This parameter defines the VBUS debouncer delay i.e. the time interval between the VBUS detection on device input and the start of using it internally.  		 Resolution of this parameter is 128 ns.  		 For simulation purposes it is recommended to set the value 1 [128ns]  		 For synthesis purposes it is recommended to set the value 230000 [~30ms]" range="17 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_dbg_link1" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_dbg_link1" offset="0x20104" width="32" description="USB3.0 Configuration Register 2">
		<bitfield id="RESERVED1" width="4" begin="31" end="28" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="31 - 28" rwaccess="R"/> 
		<bitfield id="LFPS_GEN_PING_SET" width="1" begin="27" end="27" resetval="0x0" description="Set the LFPS_GEN_PING_SET value  		 Writing '1' to this bit writes the LFPS_GEN_PING field value to the device. This bit is automatically cleared.  		 Writing '0' has no effect." range="27" rwaccess="W"/> 
		<bitfield id="RXDET_BREAK_DIS_SET" width="1" begin="26" end="26" resetval="0x0" description="Set the RXDET_BREAK_DIS value  		 Writing '1' to this bit writes the RXDET_BREAK_DIS field value to the device. This bit is automatically cleared.  		 Writing '0' has no effect." range="26" rwaccess="W"/> 
		<bitfield id="LFPS_MIN_GEN_U1_EXIT_SET" width="1" begin="25" end="25" resetval="0x0" description="Set the LFPS_MIN_GEN_U1_EXIT value  		 Writing '1' to this bit writes the LFPS_MIN_GEN_U1_EXIT field value to the device. This bit is automatically cleared.  		 Writing '0' has no effect." range="25" rwaccess="W"/> 
		<bitfield id="LFPS_MIN_DET_U1_EXIT_SET" width="1" begin="24" end="24" resetval="0x0" description="Set the LFPS_MIN_DET_U1_EXIT value  		 Writing '1' to this bit writes the LFPS_MIN_DET_U1_EXIT field value to the device. This bit is automatically cleared. Writing '0' has no effect." range="24" rwaccess="W"/> 
		<bitfield id="RESERVED0" width="2" begin="23" end="22" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="23 - 22" rwaccess="R"/> 
		<bitfield id="LFPS_GEN_PING" width="5" begin="21" end="17" resetval="0x24" description="LFPS_GEN_PING value  		 This parameter configures the LFPS.Ping generation time as shown in the chapter 4.  		 This field is saved to the device only when the field LFPS_GEN_PING_SET is set to '1' during write to the DBG_LINK1 register.  		 Resolution of this parameter is 8 ns.  		 For simulation purposes it is recommended to set the value 24 [~200ns]  		 For synthesis purposes it is recommended to set the value 24 [~200ns]" range="21 - 17" rwaccess="R/W"/> 
		<bitfield id="RXDET_BREAK_DIS" width="1" begin="16" end="16" resetval="0x0" description="RXDET_BREAK_DIS value  		 This parameter configures terminating the Far-end Receiver termination detection sequence:  		 '0': it is possible that USBSS_DEV will terminate Far-end receiver termination detection sequence  		 '1': USBSS_DEV will not terminate Far-end receiver termination detection sequence  		 The impact of the bit to the link behaviour is shown in chapter 4.  		 This field is saved to the device only when the field RXDET_BREAK_DIS_SET is set to '1' during write to the DBG_LINK1 register." range="16" rwaccess="R/W"/> 
		<bitfield id="LFPS_MIN_GEN_U1_EXIT" width="8" begin="15" end="8" resetval="0x10" description="LFPS_MIN_GEN_U1_EXIT value  		 This parameter configures the minimum time for phytxelecidle deassertion when LFPS.U1_Exit signalling is generated as shown in the chapter 4.  		 This field is saved to the device only when the field LFPS_MIN_GEN_U1_EXIT_SET is set to '1' during write to the DBG_LINK1 register.  		 Resolution of this parameter is 8 ns.  		 For simulation purposes it is recommended to set the value 87 [~696ns]  		 For synthesis purposes it is recommended to set the value 87 [~696ns]" range="15 - 8" rwaccess="R/W"/> 
		<bitfield id="LFPS_MIN_DET_U1_EXIT" width="8" begin="7" end="0" resetval="0x36" description="LFPS_MIN_DET_U1_EXIT value  		 This parameter configures the minimum time required for decoding the received LFPS as an LFPS.U1_Exit.  		 Example is shown in the chapter 4.  		 This field is saved to the device only when the field LFPS_MIN_DET_U1_EXIT_SET is set to '1' during write to the DBG_LINK1 register.  		 Resolution of this parameter is 8 ns.  		 For simulation purposes it is recommended to set the value 36 [~300ns].  		 For synthesis purposes it is recommended to set the value 36 [~300ns]." range="7 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_dbg_link2" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_dbg_link2" offset="0x20108" width="32" description="USB3.0 Configuration Register 3">
		<bitfield id="TXDET_DVAL_SET" width="1" begin="31" end="31" resetval="0x0" description="Set the TXDET deassertion value  		 Writing '1' to this bit writes the TXDET_DVAL field value to the device. This bit is automatically cleared.  		 Writing '0' has no effect." range="31" rwaccess="W"/> 
		<bitfield id="PHYRXVAL_DVAL_SET" width="1" begin="30" end="30" resetval="0x0" description="Set the Phyrxvalid latency deassertion value  		 Writing '1' to this bit writes the PHYRXVAL_DVAL field value to the device. This bit is automatically cleared.  		 Writing '0' has no effect.0" range="30" rwaccess="W"/> 
		<bitfield id="RXEQTR_DVAL_SET" width="1" begin="29" end="29" resetval="0x0" description="Set the rxeqtraining deassertion value  		 Writing '1' to this bit writes the RXEQTR_DVAL field value to the device. This bit is automatically cleared.  		 Writing '0' has no effect." range="29" rwaccess="W"/> 
		<bitfield id="RXEQTR_AVAL_SET" width="1" begin="28" end="28" resetval="0x0" description="Set the rxeqtraining assertion value  		 Writing '1' to this bit writes the RXEQTR_AVAL field value to the device. This bit is automatically cleared.  		 Writing '0' has no effect." range="28" rwaccess="W"/> 
		<bitfield id="RESERVED" width="1" begin="27" end="27" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="27" rwaccess="R"/> 
		<bitfield id="TXDET_DVAL" width="3" begin="26" end="24" resetval="0x7" description="TXDET deassertion value  		 This parameter configures the phytxdetrx_loop deassertion time after phystatus deassertion during Far-end receiver termination sequence as shown in the chapter 4.  		 This field is saved to the device only when the field TXDET_DVAL_SET is set to '1' during write to the DBG_LINK2 register." range="26 - 24" rwaccess="R/W"/> 
		<bitfield id="PHYRXVAL_DVAL" width="8" begin="23" end="16" resetval="0x10" description="Phyrxvalid latency deassertion value This parameter enables extending internal phyrxdata and phyrxdatak validity as shown in the chapter 4.  		 This field is saved to the device only when the field PHYRXVAL_DVAL_SET is set to '1' during write to the DBG_LINK2 register." range="23 - 16" rwaccess="R/W"/> 
		<bitfield id="RXEQTR_DVAL" width="8" begin="15" end="8" resetval="0x255" description="Rxeqtraining deassertion value  		 This parameter configures phyrxeqtraining deasserting time as shown in the chapter 4.  		 This field is saved to the device only when the field RXEQTR_DVAL_SET is set to '1' during write to the DBG_LINK2 register." range="15 - 8" rwaccess="R/W"/> 
		<bitfield id="RXEQTR_AVAL" width="8" begin="7" end="0" resetval="0x0" description="Rxeqtraining assertion value  		 This parameter configures phyrxeqtraining asserting time as shown in the chapter 4.  		 This field is saved to the device only when the field RXEQTR_AVAL_SET is set to '1' during write to the DBG_LINK2 register." range="7 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg4" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg4" offset="0x2010C" width="32" description="USB3.0 Configuration Register 4">
		<bitfield id="RXDETECT_QUIET_TIMEOUT_PRESCALE" width="2" begin="31" end="30" resetval="0x2" description="PRESCALER for RXDETECT_QUIET_TIMEOUT :  		- 0x0 : 8ns [PHY pclk clock] 		- 0x1 : 1us 		- 0x2 : 100us 		- 0x3 : no clock - allows disabling certain timeout" range="31 - 30" rwaccess="R/W"/> 
		<bitfield id="RESERVED" width="22" begin="29" end="8" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="29 - 8" rwaccess="R"/> 
		<bitfield id="RXDETECT_QUIET_TIMEOUT" width="8" begin="7" end="0" resetval="0x121" description="RXDETECT_QUIET_TIMEOUT value  		Resolution of this parameter is selected by RXDETECT_QUIET_TIMEOUT_PRESCALE. 		For simulation purposes it is recommended to set the value: 		- 11*100us =~1ms [SystemC device ENV] 		- 13*1us =~12us [VIP based ENV] 		For synthesis purposes it is recommended to set the value 121*100us =~12ms" range="7 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg5" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg5" offset="0x20110" width="32" description="USB3.0 Configuration Register 5">
		<bitfield id="U3_HDSK_FAIL_TIMEOUT_PRESCALE" width="2" begin="31" end="30" resetval="0x2" description="PRESCALER for U3_HDSK_FAIL_TIMEOUT :  		- 0x0 : 8ns [PHY pclk clock] 		- 0x1 : 1us 		- 0x2 : 100us 		- 0x3 : no clock - allows disabling certain timeout" range="31 - 30" rwaccess="R/W"/> 
		<bitfield id="RESERVED" width="19" begin="29" end="11" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="29 - 11" rwaccess="R"/> 
		<bitfield id="U3_HDSK_FAIL_TIMEOUT" width="11" begin="10" end="0" resetval="0x1001" description="U3_HDSK_FAIL_TIMEOUT value  		Resolution of this parameter is selected by U3_HDSK_FAIL_TIMEOUT_PRESCALE. 		For simulation purposes it is recommended to set the value: 		- 11*100us =~1ms [SystemC device ENV] 		- 11*100us =~1ms [VIP based ENV] 		For synthesis purposes it is recommended to set the value 1001*100us =~100ms" range="10 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg6" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg6" offset="0x20114" width="32" description="Configuration Register 6">
		<bitfield id="SSINACTIVE_QUIET_TIMEOUT_PRESCALE" width="2" begin="31" end="30" resetval="0x2" description="PRESCALER for SSINACTIVE_QUIET_TIMEOUT value:  		- 0x0 : 8ns [PHY pclk clock] 		- 0x1 : 1us 		- 0x2 : 100us 		- 0x3 : no clock - allows disabling certain timeout" range="31 - 30" rwaccess="R/W"/> 
		<bitfield id="RESERVED" width="22" begin="29" end="8" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="29 - 8" rwaccess="R"/> 
		<bitfield id="SSINACTIVE_QUIET_TIMEOUT" width="8" begin="7" end="0" resetval="0x121" description="SSINACTIVE_QUIET_TIMEOUT value  		Resolution of this parameter is selected by SSINACTIVE_QUIET_TIMEOUT_PRESCALE. 		For simulation purposes it is recommended to set the value: 		- 11*100us =~1ms [SystemC device ENV] 		- 13*1us =~12us [VIP based ENV] 		For synthesis purposes it is recommended to set the value: 		- 121*100us =~12ms" range="7 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg7" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg7" offset="0x20118" width="32" description="USB3.0 Configuration Register 7">
		<bitfield id="POLLING_LFPS_TIMEOUT_PRESCALE" width="2" begin="31" end="30" resetval="0x2" description="PRESCALER for POLLING_LFPS_TIMEOUT value:  		- 0x0 : 8ns [PHY pclk clock] 		- 0x1 : 1us 		- 0x2 : 100us 		- 0x3 : no clock - allows disabling certain timeout" range="31 - 30" rwaccess="R/W"/> 
		<bitfield id="RESERVED" width="17" begin="29" end="13" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="29 - 13" rwaccess="R"/> 
		<bitfield id="POLLING_LFPS_TIMEOUT" width="13" begin="12" end="0" resetval="0x3601" description="POLLING_LFPS_TIMEOUT value  		Resolution of this parameter is selected by POLLING_LFPS_TIMEOUT_PRESCALE. 		For simulation purposes it is recommended to set the value: 		- 11*100us =~1ms [SystemC device ENV] 		- 481*1us =~480us [VIP based ENV] 		For synthesis purposes it is recommended to set the value: 		- 3601*100us =~360ms" range="12 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg8" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg8" offset="0x2011C" width="32" description="USB3.0 Configuration Register 8">
		<bitfield id="POLLING_ACTIVE_TIMEOUT_PRESCALE" width="2" begin="31" end="30" resetval="0x2" description="PRESCALER for POLLING_ACTIVE_TIMEOUT value:  		- 0x0 : 8ns [PHY pclk clock] 		- 0x1 : 1us 		- 0x2 : 100us 		- 0x3 : no clock - allows disabling certain timeout" range="31 - 30" rwaccess="R/W"/> 
		<bitfield id="RESERVED" width="20" begin="29" end="10" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="29 - 10" rwaccess="R"/> 
		<bitfield id="POLLING_ACTIVE_TIMEOUT" width="10" begin="9" end="0" resetval="0x121" description="POLLING_ACTIVE_TIMEOUT value  		Resolution of this parameter is selected by POLLING_ACTIVE_TIMEOUT_PRESCALE. 		For simulation purposes it is recommended to set the value: 		- 11*100us =~1ms [SystemC device ENV] 		- 31*1us =~30us [VIP based ENV] 		For synthesis purposes it is recommended to set the value: 		- 121*100us =~12ms" range="9 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg9" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg9" offset="0x20120" width="32" description="USB3.0 Configuration Register 9">
		<bitfield id="POLLING_IDLE_TIMEOUT_PRESCALE" width="2" begin="31" end="30" resetval="0x2" description="PRESCALER for POLLING_IDLE_TIMEOUT value:  		- 0x0 : 8ns [PHY pclk clock] 		- 0x1 : 1us 		- 0x2 : 100us 		- 0x3 : no clock - allows disabling certain timeout" range="31 - 30" rwaccess="R/W"/> 
		<bitfield id="RESERVED" width="25" begin="29" end="5" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="29 - 5" rwaccess="R"/> 
		<bitfield id="POLLING_IDLE_TIMEOUT" width="5" begin="4" end="0" resetval="0x21" description="POLLING_IDLE_TIMEOUT value  		Resolution of this parameter is selected by POLLING_IDLE_TIMEOUT_PRESCALE. 		For simulation purposes it is recommended to set the value: 		- 21*100us =~2ms [SystemC device ENV] 		- 3*1us =~2us [VIP based ENV] 		For synthesis purposes it is recommended to set the value: 		- 21*100us =~2ms" range="4 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg10" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg10" offset="0x20124" width="32" description="USB3.0 Configuration Register 10">
		<bitfield id="POLLING_CONF_TIMEOUT_PRESCALE" width="2" begin="31" end="30" resetval="0x2" description="PRESCALER for POLLING_CONF_TIMEOUT value:  		- 0x0 : 8ns [PHY pclk clock] 		- 0x1 : 1us 		- 0x2 : 100us 		- 0x3 : no clock - allows disabling certain timeout" range="31 - 30" rwaccess="R/W"/> 
		<bitfield id="RESERVED" width="22" begin="29" end="8" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="29 - 8" rwaccess="R"/> 
		<bitfield id="POLLING_CONF_TIMEOUT" width="8" begin="7" end="0" resetval="0x121" description="POLLING_CONF_TIMEOUT value  		Resolution of this parameter is selected by POLLING_CONF_TIMEOUT_PRESCALE. 		For simulation purposes it is recommended to set the value: 		- 11*100us =~1ms [SystemC device ENV] 		- 31*1us =~30us [VIP based ENV] 		For synthesis purposes it is recommended to set the value: 		- 121*100us =~12ms" range="7 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg11" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg11" offset="0x20128" width="32" description="USB3.0 Configuration Register 11">
		<bitfield id="RECOVERY_ACTIVE_TIMEOUT_PRESCALE" width="2" begin="31" end="30" resetval="0x2" description="PRESCALER for RECOVERY_ACTIVE_TIMEOUT value:  		- 0x0 : 8ns [PHY pclk clock] 		- 0x1 : 1us 		- 0x2 : 100us 		- 0x3 : no clock - allows disabling certain timeout" range="31 - 30" rwaccess="R/W"/> 
		<bitfield id="RESERVED" width="22" begin="29" end="8" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="29 - 8" rwaccess="R"/> 
		<bitfield id="RECOVERY_ACTIVE_TIMEOUT" width="8" begin="7" end="0" resetval="0x121" description="RECOVERY_ACTIVE_TIMEOUT value  		Resolution of this parameter is selected by RECOVERY_ACTIVE_TIMEOUT_PRESCALE. 		For simulation purposes it is recommended to set the value: 		- 11*100us =~1ms [SystemC device ENV] 		- 101*1us =~100us [VIP based ENV] 		For synthesis purposes it is recommended to set the value: 		- 121*100us =~12ms" range="7 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg12" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg12" offset="0x2012C" width="32" description="USB3.0 Configuration Register 12">
		<bitfield id="RECOVERY_CONF_TIMEOUT_PRESCALE" width="2" begin="31" end="30" resetval="0x2" description="PRESCALER for RECOVERY_CONF_TIMEOUT value:  		- 0x0 : 8ns [PHY pclk clock] 		- 0x1 : 1us 		- 0x2 : 100us 		- 0x3 : no clock - allows disabling certain timeout" range="31 - 30" rwaccess="R/W"/> 
		<bitfield id="RESERVED" width="22" begin="29" end="8" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="29 - 8" rwaccess="R"/> 
		<bitfield id="RECOVERY_CONF_TIMEOUT" width="8" begin="7" end="0" resetval="0x61" description="RECOVERY_CONF_TIMEOUT value  		Resolution of this parameter is selected by RECOVERY_CONF_TIMEOUT_PRESCALE. 		For simulation purposes it is recommended to set the value: 		- 11*100us =~1ms [SystemC device ENV] 		- 101*1us =~100us [VIP based ENV] 		For synthesis purposes it is recommended to set the value: 		- 61*100us =~6ms" range="7 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg13" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg13" offset="0x20130" width="32" description="USB3.0 Configuration Register 13">
		<bitfield id="RECOVERY_IDLE_TIMEOUT_PRESCALE" width="2" begin="31" end="30" resetval="0x2" description="PRESCALER for RECOVERY_IDLE_TIMEOUT value:  		- 0x0 : 8ns [PHY pclk clock] 		- 0x1 : 1us 		- 0x2 : 100us 		- 0x3 : no clock - allows disabling certain timeout" range="31 - 30" rwaccess="R/W"/> 
		<bitfield id="RESERVED" width="23" begin="27" end="5" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="27 - 5" rwaccess="R"/> 
		<bitfield id="RECOVERY_IDLE_TIMEOUT" width="5" begin="4" end="0" resetval="0x21" description="RECOVERY_IDLE_TIMEOUT value  		Resolution of this parameter is selected by RECOVERY_IDLE_TIMEOUT_PRESCALE. 		For simulation purposes it is recommended to set the value: 		- 21*100us =~2ms [SystemC device ENV] 		- 3*1us =~3us [VIP based ENV] 		For synthesis purposes it is recommended to set the value: 		- 21*100us =~2ms" range="4 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg14" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg14" offset="0x20134" width="32" description="USB3.0 Configuration Register 14">
		<bitfield id="HOTRESET_ACTIVE_TIMEOUT_PRESCALE" width="2" begin="31" end="30" resetval="0x2" description="PRESCALER for HOTRESET_ACTIVE_TIMEOUT value:  		- 0x0 : 8ns [PHY pclk clock] 		- 0x1 : 1us 		- 0x2 : 100us 		- 0x3 : no clock - allows disabling certain timeout" range="31 - 30" rwaccess="R/W"/> 
		<bitfield id="RESERVED" width="22" begin="29" end="8" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="29 - 8" rwaccess="R"/> 
		<bitfield id="HOTRESET_ACTIVE_TIMEOUT" width="8" begin="7" end="0" resetval="0x121" description="HOTRESET_ACTIVE_TIMEOUT value  		Resolution of this parameter is selected by HOTRESET_ACTIVE_TIMEOUT_PRESCALE. 		For simulation purposes it is recommended to set the value: 		- 21*100us =~2ms [SystemC device ENV] 		- 13*1us =~13us [VIP based ENV] 		For synthesis purposes it is recommended to set the value: 		- 121*100us =~12ms" range="7 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg15" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg15" offset="0x20138" width="32" description="USB3.0 Configuration Register 15">
		<bitfield id="HOTRESET_EXIT_TIMEOUT_PRESCALE" width="2" begin="31" end="30" resetval="0x2" description="PRESCALER for HOTRESET_EXIT_TIMEOUT value:  		- 0x0 : 8ns [PHY pclk clock] 		- 0x1 : 1us 		- 0x2 : 100us 		- 0x3 : no clock - allows disabling certain timeout" range="31 - 30" rwaccess="R/W"/> 
		<bitfield id="RESERVED" width="25" begin="29" end="5" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="29 - 5" rwaccess="R"/> 
		<bitfield id="HOTRESET_EXIT_TIMEOUT" width="5" begin="4" end="0" resetval="0x21" description="HOTRESET_EXIT_TIMEOUT value  		Resolution of this parameter is selected by HOTRESET_EXIT_TIMEOUT_PRESCALE. 		For simulation purposes it is recommended to set the value: 		- 21*100us =~2ms [SystemC device ENV] 		- 3*1us =~3us [VIP based ENV] 		For synthesis purposes it is recommended to set the value: 		- 21*100us =~2ms" range="4 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg16" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg16" offset="0x2013C" width="32" description="USB3.0 Configuration Register 16">
		<bitfield id="LFPS_PING_REPEAT_PRESCALE" width="2" begin="31" end="30" resetval="0x2" description="PRESCALER for LFPS_PING_REPEAT value:  		- 0x0 : 8ns [PHY pclk clock] 		- 0x1 : 1us 		- 0x2 : 100us 		- 0x3 : no clock - allows disabling certain timeout" range="31 - 30" rwaccess="R/W"/> 
		<bitfield id="RESERVED" width="18" begin="29" end="12" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="29 - 12" rwaccess="R"/> 
		<bitfield id="LFPS_PING_REPEAT" width="12" begin="11" end="0" resetval="0x2001" description="LFPS_PING_REPEAT value  		Resolution of this parameter is selected by LFPS_PING_REPEAT_PRESCALE. 		For simulation purposes it is recommended to set the value: 		- 6*100us =~0.5ms [SystemC device ENV] 		- 4*100us =~400us [VIP based ENV] 		For synthesis purposes it is recommended to set the value: 		- 2001*100us =~200ms" range="11 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg17" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg17" offset="0x20140" width="32" description="USB3.0 Configuration Register 17">
		<bitfield id="PENDING_HP_TIMEOUT_PRESCALE" width="2" begin="31" end="30" resetval="0x0" description="PRESCALER for PENDING_HP_TIMEOUT value:  		- 0x0 : 8ns [PHY pclk clock] 		- 0x1 : 1us 		- 0x2 : 100us 		- 0x3 : no clock - allows disabling certain timeout" range="31 - 30" rwaccess="R/W"/> 
		<bitfield id="RESERVED" width="20" begin="29" end="10" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="29 - 10" rwaccess="R"/> 
		<bitfield id="PENDING_HP_TIMEOUT" width="10" begin="9" end="0" resetval="0x437" description="PENDING_HP_TIMEOUT value  		Resolution of this parameter is selected by PENDING_HP_TIMEOUT_PRESCALE. 		For simulation purposes it is recommended to set the value: 		- 437*8ns =~3.5us [SystemC device ENV] 		- 437*8ns =~3.5us [VIP based ENV] 		For synthesis purposes it is recommended to set the value: 		- 437*8ns =~3.5us" range="9 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg18" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg18" offset="0x20144" width="32" description="USB3.0 Configuration Register 18">
		<bitfield id="CREDIT_HP_TIMEOUT_PRESCALE" width="2" begin="31" end="30" resetval="0x2" description="PRESCALER for CREDIT_HP_TIMEOUT value:  		- 0x0 : 8ns [PHY pclk clock] 		- 0x1 : 1us 		- 0x2 : 100us 		- 0x3 : no clock - allows disabling certain timeout" range="31 - 30" rwaccess="R/W"/> 
		<bitfield id="RESERVED" width="23" begin="29" end="7" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="29 - 7" rwaccess="R"/> 
		<bitfield id="CREDIT_HP_TIMEOUT" width="7" begin="6" end="0" resetval="0x52" description="CREDIT_HP_TIMEOUT value  		Resolution of this parameter is selected by CREDIT_HP_TIMEOUT_PRESCALE. 		For simulation purposes it is recommended to set the value: 		- 11*100us =~1ms [SystemC device ENV] 		- 11*100us =~1ms [VIP based ENV] 		For synthesis purposes it is recommended to set the value: 		- 52*100us =~5.1ms" range="6 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg19" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg19" offset="0x20148" width="32" description="USB3.0 Configuration Register 19">
		<bitfield id="LUP_TIMEOUT_PRESCALE" width="2" begin="31" end="30" resetval="0x1" description="PRESCALER for LUP_TIMEOUT value:  		- 0x0 : 8ns [PHY pclk clock] 		- 0x1 : 1us 		- 0x2 : 100us 		- 0x3 : no clock - allows disabling certain timeout" range="31 - 30" rwaccess="R/W"/> 
		<bitfield id="RESERVED" width="20" begin="29" end="10" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="29 - 10" rwaccess="R"/> 
		<bitfield id="LUP_TIMEOUT" width="10" begin="9" end="0" resetval="0x11" description="LUP_TIMEOUT value  		Resolution of this parameter is selected by LUP_TIMEOUT_PRESCALE. 		For simulation purposes it is recommended to set the value: 		- 11*1us =~11us [SystemC device ENV] 		- 11*1us =~11us [VIP based ENV] 		For synthesis purposes it is recommended to set the value: 		- 11*1us =~11us" range="9 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg20" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg20" offset="0x2014C" width="32" description="USB3.0 Configuration Register 20">
		<bitfield id="LDN_TIMEOUT_PRESCALE" width="2" begin="31" end="30" resetval="0x2" description="PRESCALER for LDN_TIMEOUT value:  		- 0x0 : 8ns [PHY pclk clock] 		- 0x1 : 1us 		- 0x2 : 100us 		- 0x3 : no clock - allows disabling certain timeout" range="31 - 30" rwaccess="R/W"/> 
		<bitfield id="RESERVED" width="22" begin="29" end="8" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="29 - 8" rwaccess="R"/> 
		<bitfield id="LDN_TIMEOUT" width="8" begin="7" end="0" resetval="0x11" description="LDN_TIMEOUT value  		Resolution of this parameter is selected by LDN_TIMEOUT_PRESCALE. 		For simulation purposes it is recommended to set the value: 		- 11*100us =~1ms [SystemC device ENV] 		- 129*1us =~129us [VIP based ENV] 		For synthesis purposes it is recommended to set the value: 		- 11*100us =~1ms" range="7 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg21" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg21" offset="0x20150" width="32" description="USB3.0 Configuration Register 21">
		<bitfield id="PM_LC_TIMEOUT_PRESCALE" width="2" begin="31" end="30" resetval="0x0" description="PRESCALER for PM_LC_TIMEOUT value:  		- 0x0 : 8ns [PHY pclk clock] 		- 0x1 : 1us 		- 0x2 : 100us 		- 0x3 : no clock - allows disabling certain timeout" range="31 - 30" rwaccess="R/W"/> 
		<bitfield id="RESERVED" width="20" begin="29" end="10" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="29 - 10" rwaccess="R"/> 
		<bitfield id="PM_LC_TIMEOUT" width="10" begin="9" end="0" resetval="0x400" description="PM_LC_TIMEOUT value  		Resolution of this parameter is selected by PM_LC_TIMEOUT_PRESCALE. 		For simulation purposes it is recommended to set the value: 		- 400*8ns =~3.2us [SystemC device ENV] 		- 400*8ns =~3.2us [VIP based ENV] 		For synthesis purposes it is recommended to set the value: 		- 400*8ns =~3.2us" range="9 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg22" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg22" offset="0x20154" width="32" description="USB3.0 Configuration Register 22">
		<bitfield id="PM_ENTRY_TIMEOUT_PRESCALE" width="2" begin="31" end="30" resetval="0x0" description="PRESCALER for PM_ENTRY_TIMEOUT value:  		- 0x0 : 8ns [PHY pclk clock] 		- 0x1 : 1us 		- 0x2 : 100us 		- 0x3 : no clock - allows disabling certain timeout" range="31 - 30" rwaccess="R/W"/> 
		<bitfield id="RESERVED" width="19" begin="29" end="11" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="29 - 11" rwaccess="R"/> 
		<bitfield id="PM_ENTRY_TIMEOUT" width="11" begin="10" end="0" resetval="0x800" description="PM_ENTRY_TIMEOUT value  		Resolution of this parameter is selected by PM_ENTRY_TIMEOUT_PRESCALE. 		For simulation purposes it is recommended to set the value: 		- 800*8ns =~6.4us [SystemC device ENV] 		- 800*8ns =~6.4us [VIP based ENV] 		For synthesis purposes it is recommended to set the value: 		- 800*8ns =~6.4us" range="10 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg23" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg23" offset="0x20158" width="32" description="USB3.0 Configuration Register 23">
		<bitfield id="UX_EXIT_TIMEOUT_PRESCALE" width="2" begin="31" end="30" resetval="0x2" description="PRESCALER for UX_EXIT_TIMEOUT value:  		- 0x0 : 8ns [PHY pclk clock] 		- 0x1 : 1us 		- 0x2 : 100us 		- 0x3 : no clock - allows disabling certain timeout" range="31 - 30" rwaccess="R/W"/> 
		<bitfield id="RESERVED" width="23" begin="29" end="7" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="29 - 7" rwaccess="R"/> 
		<bitfield id="UX_EXIT_TIMEOUT" width="7" begin="6" end="0" resetval="0x62" description="UX_EXIT_TIMEOUT value  		Resolution of this parameter is selected by UX_EXIT_TIMEOUT_PRESCALE. 		For simulation purposes it is recommended to set the value: 		- 8*100us =~800us [SystemC device ENV] 		- 3*100us =~300us [VIP based ENV] 		For synthesis purposes it is recommended to set the value: 		- 62*100us =~6.2ms" range="6 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg24" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg24" offset="0x2015C" width="32" description="USB3.0 Configuration Register 24">
		<bitfield id="RESERVED" width="9" begin="31" end="23" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="31 - 23" rwaccess="R"/> 
		<bitfield id="LFPS_DET_RESET_MIN" width="23" begin="22" end="0" resetval="0x2375000" description="LFPS_DET_RESET_MIN value  		 Resolution of this parameter is 8 ns.  		 For simulation purposes it is recommended to set the value 395833 [~3.16ms]  		 For synthesis purposes it is recommended to set the value 2375000 [~19ms]" range="22 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg25" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg25" offset="0x20160" width="32" description="USB3.0 Configuration Register 25">
		<bitfield id="RESERVED" width="8" begin="31" end="24" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="31 - 24" rwaccess="R"/> 
		<bitfield id="LFPS_DET_RESET_MAX" width="24" begin="23" end="0" resetval="0x15000000" description="LFPS_DET_RESET_MAX value  		 Resolution of this parameter is 8 ns.  		 For simulation purposes it is recommended to set the value 5000000 [~40ms]  		 For synthesis purposes it is recommended to set the value 15000000 [~120ms]" range="23 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg26" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg26" offset="0x20164" width="32" description="USB3.0 Configuration Register 26">
		<bitfield id="RESERVED" width="25" begin="31" end="7" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="31 - 7" rwaccess="R"/> 
		<bitfield id="LFPS_DET_POLLING_MIN" width="7" begin="6" end="0" resetval="0x75" description="LFPS_DET_POLLING_MIN value  		 Resolution of this parameter is 8 ns.  		 For simulation purposes it is recommended to set the value 75 [~0.6us]  		 For synthesis purposes it is recommended to set the value 75 [~0.6us]" range="6 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg27" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg27" offset="0x20168" width="32" description="USB3.0 Configuration Register 27">
		<bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="31 - 8" rwaccess="R"/> 
		<bitfield id="LFPS_DET_POLLING_MAX" width="8" begin="7" end="0" resetval="0x187" description="LFPS_DET_POLLING_MAX value  		 Resolution of this parameter is 8 ns.  		 For simulation purposes it is recommended to set the value 175 [~1.4us]  		 For synthesis purposes it is recommended to set the value 175 [~1.4us]" range="7 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg28" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg28" offset="0x2016C" width="32" description="USB3.0 Configuration Register 28">
		<bitfield id="RESERVED" width="29" begin="31" end="3" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="31 - 3" rwaccess="R"/> 
		<bitfield id="LFPS_DET_PING_MIN" width="3" begin="2" end="0" resetval="0x4" description="LFPS_DET_PING_MIN value  		 Resolution of this parameter is 8 ns.  		 For simulation purposes it is recommended to set the value 4 [~40ns]  		 For synthesis purposes it is recommended to set the value 4 [~40ns]" range="2 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg29" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg29" offset="0x20170" width="32" description="USB3.0 Configuration Register 29">
		<bitfield id="RESERVED" width="27" begin="31" end="5" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="31 - 5" rwaccess="R"/> 
		<bitfield id="LFPS_DET_PING_MAX" width="5" begin="4" end="0" resetval="0x23" description="LFPS_DET_PING_MAX value  		 Resolution of this parameter is 8 ns.  		 For simulation purposes it is recommended to set the value 23 [~200ns]  		 For synthesis purposes it is recommended to set the value 23 [~200ns]" range="4 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg30" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg30" offset="0x20174" width="32" description="USB3.0 Configuration Register 30 
		 Note: In current version of the core this register is not implemented. Functionality of this register is provided by DBG_LINK1.LFPS_MIN_DET_U1_EXIT register.">
		<bitfield id="RESERVED" width="26" begin="31" end="6" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="31 - 6" rwaccess="R"/> 
		<bitfield id="LFPS_DET_U1EXIT_MIN" width="6" begin="5" end="0" resetval="0x36" description="LFPS_DET_U1EXIT_MIN value  		 Resolution of this parameter is 8 ns.  		 For simulation purposes it is recommended to set the value 36 [~300ns]  		 For synthesis purposes it is recommended to set the value 36 [~300ns]" range="5 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg31" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg31" offset="0x20178" width="32" description="USB3.0 Configuration Register 31">
		<bitfield id="RESERVED" width="25" begin="31" end="7" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="31 - 7" rwaccess="R"/> 
		<bitfield id="LFPS_DET_U1EXIT_MAX" width="7" begin="6" end="0" resetval="0x111" description="LFPS_DET_U1EXIT_MAX value  		 Resolution of this parameter is 8 ns.  		 For simulation purposes it is recommended to set the value 111 [~900ns]  		 For synthesis purposes it is recommended to set the value 111 [~900ns]" range="6 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg32" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg32" offset="0x2017C" width="32" description="USB3.0 Configuration Register 32">
		<bitfield id="RESERVED" width="26" begin="31" end="6" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="31 - 6" rwaccess="R"/> 
		<bitfield id="LFPS_DET_U2EXIT_MIN" width="6" begin="5" end="0" resetval="0x36" description="LFPS_DET_U2EXIT_MIN value  		 Resolution of this parameter is 8 ns.  		 For simulation purposes it is recommended to set the value 36 [~300ns]  		 For synthesis purposes it is recommended to set the value 36 [~300ns]" range="5 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg33" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg33" offset="0x20180" width="32" description="USB3.0 Configuration Register 33">
		<bitfield id="RESERVED" width="14" begin="31" end="18" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="31 - 18" rwaccess="R"/> 
		<bitfield id="LFPS_DET_U2EXIT_MAX" width="18" begin="17" end="0" resetval="0x250000" description="LFPS_DET_U2EXIT_MAX value  		 Resolution of this parameter is 8 ns.  		 For simulation purposes it is recommended to set the value 250000 [~2ms]  		 For synthesis purposes it is recommended to set the value 250000 [~2ms]" range="17 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg34" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg34" offset="0x20184" width="32" description="USB3.0 Configuration Register 34">
		<bitfield id="RESERVED" width="26" begin="31" end="6" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="31 - 6" rwaccess="R"/> 
		<bitfield id="LFPS_DET_U3EXIT_MIN" width="6" begin="5" end="0" resetval="0x36" description="LFPS_DET_U3EXIT_MIN value  		 Resolution of this parameter is 8 ns.  		 For simulation purposes it is recommended to set the value 36 [~300ns]  		 For synthesis purposes it is recommended to set the value 36 [~300ns]" range="5 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg35" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg35" offset="0x20188" width="32" description="USB3.0 Configuration Register 35">
		<bitfield id="RESERVED" width="11" begin="31" end="21" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="31 - 21" rwaccess="R"/> 
		<bitfield id="LFPS_DET_U3EXIT_MAX" width="21" begin="20" end="0" resetval="0x1250000" description="LFPS_DET_U3EXIT_MAX value  		 Resolution of this parameter is 8 ns.  		 For simulation purposes it is recommended to set the value 1250000 [~10ms]  		 For synthesis purposes it is recommended to set the value 1250000 [~10ms]" range="20 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg36" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg36" offset="0x201AC" width="32" description="USB3.0 Configuration Register 36
		 Note: In current version of the core this register is not implemented. Functionality of this register is provided by DBG_LINK1.LFPS_GEN_PING register.">
		<bitfield id="RESERVED" width="27" begin="31" end="5" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="31 - 5" rwaccess="R"/> 
		<bitfield id="LFPS_GEN_PING" width="5" begin="4" end="0" resetval="0x24" description="LFPS_GEN_PING value  		 Resolution of this parameter is 8 ns.  		 For simulation purposes it is recommended to set the value 24 [~200ns]  		 For synthesis purposes it is recommended to set the value 24 [~200ns]" range="4 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg37" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg37" offset="0x201B0" width="32" description="USB3.0 Configuration Register 37">
		<bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="31 - 8" rwaccess="R"/> 
		<bitfield id="LFPS_GEN_POLLING" width="8" begin="7" end="0" resetval="0x125" description="LFPS_GEN_POLLING value  		 Resolution of this parameter is 8 ns.  		 For simulation purposes it is recommended to set the value 125 [~1us]  		 For synthesis purposes it is recommended to set the value 125 [~1us]" range="7 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg38" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg38" offset="0x201B4" width="32" description="USB3.0 Configuration Register 38">
		<bitfield id="RESERVED" width="14" begin="31" end="18" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="31 - 18" rwaccess="R"/> 
		<bitfield id="LFPS_GEN_U1EXIT" width="18" begin="17" end="0" resetval="0x250000" description="LFPS_GEN_U1EXIT value  		 Resolution of this parameter is 8 ns.  		 For simulation purposes it is recommended to set the value 62500 [~500us]  		 For synthesis purposes it is recommended to set the value 250000 [~2ms]" range="17 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg39" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg39" offset="0x201B8" width="32" description="USB3.0 Configuration Register 39">
		<bitfield id="RESERVED" width="11" begin="31" end="21" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="31 - 21" rwaccess="R"/> 
		<bitfield id="LFPS_GEN_U3EXIT" width="21" begin="20" end="0" resetval="0x1250000" description="LFPS_GEN_U3EXIT value  		 Resolution of this parameter is 8 ns.  		 For simulation purposes it is recommended to set the value 125000 [~1ms]  		 For synthesis purposes it is recommended to set the value 1250000 [~10ms]" range="20 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg40" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg40" offset="0x201BC" width="32" description="USB3.0 Configuration Register 40 
		 Note: In current version of the core this register is not implemented. Functionality of this register is provided by DBG_LINK1.LFPS_MIN_GEN_U1_EXIT register.">
		<bitfield id="RESERVED" width="25" begin="31" end="7" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="31 - 7" rwaccess="R"/> 
		<bitfield id="LFPS_MIN_GEN_U1EXIT" width="7" begin="6" end="0" resetval="0x31" description="LFPS_MIN_GEN_U1EXIT value  		 Resolution of this parameter is 8 ns.  		 For simulation purposes it is recommended to set the value 87 [~696ns]  		 For synthesis purposes it is recommended to set the value 87 [~696ns]" range="6 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg41" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg41" offset="0x201C0" width="32" description="USB3.0 Configuration Register 41">
		<bitfield id="RESERVED" width="17" begin="31" end="15" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="31 - 15" rwaccess="R"/> 
		<bitfield id="LFPS_MIN_GEN_U2EXIT" width="15" begin="14" end="0" resetval="0x12500" description="LFPS_MIN_GEN_U2EXIT value  		Resolution of this parameter is 8 ns.  		For simulation purposes it is recommended to set the value 12500 [~100us]  		For synthesis purposes it is recommended to set the value 12500 [~100us]" range="14 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg42" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg42" offset="0x201C4" width="32" description="USB3.0 Configuration Register 42">
		<bitfield id="RESERVED" width="21" begin="31" end="11" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="31 - 11" rwaccess="R"/> 
		<bitfield id="LFPS_POLLING_REPEAT" width="11" begin="10" end="0" resetval="0x1250" description="LFPS_POLLING_REPEAT value  		 Resolution of this parameter is 8 ns.  		 For simulation purposes it is recommended to set the value 1250 [~10us]  		 For synthesis purposes it is recommended to set the value 1250 [~10us]" range="10 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg43" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg43" offset="0x201C8" width="32" description="USB3.0 Configuration Register 43">
		<bitfield id="RESERVED" width="21" begin="31" end="11" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="31 - 11" rwaccess="R"/> 
		<bitfield id="LFPS_POLLING_MAX_TREPEAT" width="11" begin="10" end="0" resetval="0x1750" description="LFPS_POLLING_MAX_TREPEAT value  		 Resolution of this parameter is 8 ns.  		 For simulation purposes it is recommended to set the value 1750 [~14us]  		 For synthesis purposes it is recommended to set the value 1750 [~14us]" range="10 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg44" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg44" offset="0x201CC" width="32" description="USB3.0 Configuration Register 44">
		<bitfield id="RESERVED" width="21" begin="31" end="11" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="31 - 11" rwaccess="R"/> 
		<bitfield id="LFPS_POLLING_MIN_TREPEAT" width="11" begin="10" end="0" resetval="0x748" description="LFPS_POLLING_MIN_TREPEAT value  		 Resolution of this parameter is 8 ns.  		 For simulation purposes it is recommended to set the value 748 [~6us]  		 For synthesis purposes it is recommended to set the value 748 [~6us]" range="10 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg45" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg45" offset="0x201D0" width="32" description="USB3.0 Configuration Register 45">
		<bitfield id="ITP_WAKEUP_TIMEOUT_PRESCALE" width="2" begin="31" end="30" resetval="0x1" description="PRESCALER for ITP_WAKEUP_TIMEOUT value:  		- 0x0 : 8ns [PHY pclk clock] 		- 0x1 : 1us 		- 0x2 : 100us 		- 0x3 : no clock - allows disabling certain timeout" range="31 - 30" rwaccess="R/W"/> 
		<bitfield id="RESERVED" width="23" begin="29" end="7" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="29 - 7" rwaccess="R"/> 
		<bitfield id="ITP_WAKEUP_TIMEOUT" width="7" begin="6" end="0" resetval="0x101" description="ITP_WAKEUP_TIMEOUT value  		Resolution of this parameter is selected by ITP_WAKEUP_TIMEOUT_PRESCALE. 		For simulation purposes it is recommended to set the value: 		- 101*1us =~100us [SystemC device ENV] 		- 101*1us =~100us [VIP based ENV] 		For synthesis purposes it is recommended to set the value: 		- 101*1us =~100us" range="6 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg46" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg46" offset="0x201D4" width="32" description="USB3.0 Configuration Register 46">
		<bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="31 - 16" rwaccess="R"/> 
		<bitfield id="TSEQ_QUANTITY" width="16" begin="15" end="0" resetval="0x65535" description="TSEQ_QUANTITY value  		 This parameter defines the number of TSEQ training sequences to be sent during Polling.RxEq state.  		 For simulation purposes it is recommended to set the value 655  		 For synthesis purposes it is recommended to set the value 65535." range="15 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg47" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg47" offset="0x201D8" width="32" description="USB3.0 Configuration Register 47">
		<bitfield id="RESERVED" width="12" begin="31" end="20" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="31 - 20" rwaccess="R"/> 
		<bitfield id="ERDY_TIMEOUT_CNT" width="20" begin="19" end="0" resetval="0x512001" description="ERDY_TIMEOUT_CNT value  		 Resolution of this parameter is 1 us.  		 For simulation purposes it is recommended to set the value 16 [~15 us]  		 For synthesis purposes it is recommended to set the value ~512001 [~512ms]" range="19 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg48" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg48" offset="0x201DC" width="32" description="USB2.0 Configuration Register 48">
		<bitfield id="RESERVED" width="14" begin="31" end="18" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="31 - 18" rwaccess="R"/> 
		<bitfield id="TWTRSTFS_J_CNT" width="18" begin="17" end="0" resetval="0x98304" description="Time a device operating in full speed must wait before begin the transition to the Suspend state after it see a constant Idle state on their upstream facing bus lines.  		 Resolution of this parameter is 33.3 ns.  		 For simulation purposes it is recommended to set the value 98304 [~3.28ms]  		 For synthesis purposes it is recommended to set the value 98304 [~3.28ms]" range="17 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg49" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg49" offset="0x201E0" width="32" description="USB2.0 Configuration Register 49">
		<bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="31 - 16" rwaccess="R"/> 
		<bitfield id="TUCH_CNT" width="16" begin="15" end="0" resetval="0x35584" description="TUCH: Minimum duration of a Chirp K from a high-speed capable device within the reset protocol.  		 Resolution of this parameter is 33.3 ns.  		 For simulation purposes it is recommended to set the value 129 [~4.3us]  		 For synthesis purposes it is recommended to set the value 35584 [~1.19ms]" range="15 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg50" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg50" offset="0x201E4" width="32" description="USB2.0 Configuration Register 50">
		<bitfield id="RESERVED" width="20" begin="31" end="12" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="31 - 12" rwaccess="R"/> 
		<bitfield id="TWAITCHK_CNT" width="12" begin="11" end="0" resetval="0x2400" description="Time to wait before device will start to drive Chirp K after detecting reset signalling.  		 Resolution of this parameter is 33.3 ns.  		 For simulation purposes it is recommended to set the value 30 [~1us]  		 For synthesis purposes it is recommended to set the value 2400 [~80us]" range="11 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg51" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg51" offset="0x201E8" width="32" description="USB2.0 Configuration Register 51">
		<bitfield id="RESERVED" width="15" begin="31" end="17" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="31 - 17" rwaccess="R"/> 
		<bitfield id="TWTFS_CNT" width="17" begin="16" end="0" resetval="0x104963" description="TWTFS: Time after end of upstream chirp at which device reverts to full speed default state if no downstream chirp is detected.  		 Resolution of this parameter is 33.3 ns.  		 For simulation purposes it is recommended to set the value 1000 [~33.3us]  		 For synthesis purposes it is recommended to set the value 104963 [~3.5ms]" range="16 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg52" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg52" offset="0x201EC" width="32" description="USB2.0 Configuration Register 52">
		<bitfield id="RESERVED" width="15" begin="31" end="17" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="31 - 17" rwaccess="R"/> 
		<bitfield id="TWTREV_CNT" width="17" begin="16" end="0" resetval="0x90112" description="TWTREV: Time a high-speed capable device operating in high-speed must wait after start of SE0 before reverting to full-speed.  		 Resolution of this parameter is 33.3 ns.  		 For simulation purposes it is recommended to set the value 90112 [~3ms]  		 For synthesis purposes it is recommended to set the value 90112 [~3ms]" range="16 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg53" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg53" offset="0x201F0" width="32" description="USB2.0 Configuration Register 53">
		<bitfield id="RESERVED" width="17" begin="31" end="15" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="31 - 15" rwaccess="R"/> 
		<bitfield id="TWTRSTHS_CNT" width="15" begin="14" end="0" resetval="0x23552" description="TWTRSTHS: Time a device must wait after reverting to full-speed before sampling the bus state for SE0 and beginning the high-speed detection handshake.  		 Resolution of this parameter is 33.3 ns.  		 For simulation purposes it is recommended to set the value 23552 [~785us]  		 For synthesis purposes it is recommended to set the value 23552 [~785us]" range="14 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg54" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg54" offset="0x201F4" width="32" description="USB2.0 Configuration Register 54">
		<bitfield id="RESERVED" width="14" begin="31" end="18" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="31 - 18" rwaccess="R"/> 
		<bitfield id="TWTRSM_CNT" width="18" begin="17" end="0" resetval="0x150016" description="TWTRSM: Period of idle bus before device can initiate resume.  		 Resolution of this parameter is 33.3 ns.  		 For simulation purposes it is recommended to set the value 150016 [~5ms]  		 For synthesis purposes it is recommended to set the value 150016 [~5ms]" range="17 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg55" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg55" offset="0x201F8" width="32" description="USB2.0 Configuration Register 55">
		<bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="31 - 16" rwaccess="R"/> 
		<bitfield id="TDRSMUP_CNT" width="16" begin="15" end="0" resetval="0x32768" description="TDRSMUP: Duration of driving resume upstream.  		Resolution of this parameter is 33.3 ns.  		For simulation purposes it is recommended to set the value 32768 [~1.1ms]  		For synthesis purposes it is recommended to set the value 32768 [~1.1ms]" range="15 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg56" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg56" offset="0x201FC" width="32" description="USB2.0 Configuration Register 56">
		<bitfield id="RESERVED" width="26" begin="31" end="6" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="31 - 6" rwaccess="R"/> 
		<bitfield id="TOUTHS_CNT" width="6" begin="5" end="0" resetval="0x48" description="Time after device expecting a response to a transmission will timeout the transaction.  		 Resolution of this parameter is 33.3 ns.  		 For simulation purposes it is recommended to set the value 48 [~1.6us]  		 For synthesis purposes it is recommended to set the value 48 [~1.6us]" range="5 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg57" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg57" offset="0x20200" width="32" description="USB3.0 Configuration Register 57">
		<bitfield id="RESERVED" width="30" begin="31" end="2" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="31 - 2" rwaccess="R"/> 
		<bitfield id="LFPS_DEB_WIDTH" width="2" begin="1" end="0" resetval="0x2" description="LFPS_DEB_WIDTH value  		 This parameter defines the LFPS debouncer delay. Only two values are allowed: 0x1 or 0x2.  		 For simulation purposes it is recommended to set the value 1.  		 For synthesis purposes it is recommended to set the value 2." range="1 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg58" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg58" offset="0x20204" width="32" description="USB3.0 Configuration Register 58">
		<bitfield id="RESERVED" width="14" begin="31" end="18" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="31 - 18" rwaccess="R"/> 
		<bitfield id="LFPS_GEN_U2EXIT" width="18" begin="17" end="0" resetval="0x250000" description="LFPS_GEN_U2EXIT value  		 Resolution of this parameter is 8 ns.  		 For simulation purposes it is recommended to set the value 62500 [~500us]  		 For synthesis purposes it is recommended to set the value 250000 [~2ms]" range="17 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg59" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg59" offset="0x20208" width="32" description="USB3.0 Configuration Register 59">
		<bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="31 - 16" rwaccess="R"/> 
		<bitfield id="LFPS_MIN_GEN_U3EXIT" width="16" begin="15" end="0" resetval="0x12500" description="LFPS_MIN_GEN_U3EXIT value  		 Resolution of this parameter is 8 ns.  		 For simulation purposes it is recommended to set the value 12500 [~100us]  		 For synthesis purposes it is recommended to set the value 12500 [~100us]" range="15 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg60" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg60" offset="0x2020C" width="32" description="USB3.0 Configuration Register 60">
		<bitfield id="RESERVED" width="25" begin="31" end="7" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="31 - 7" rwaccess="R"/> 
		<bitfield id="PORT_CONFIG_TIMEOUT" width="7" begin="6" end="0" resetval="0x21" description="PORT_CONFIG_TIMEOUT value  		 Resolution of this parameter is 1 us.  		 For simulation purposes it is recommended to set the value 21 [~20us]  		 For synthesis purposes it is recommended to set the value 21 [~20us]" range="6 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg61" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg61" offset="0x20210" width="32" description="USB3.0 Configuration Register 61">
		<bitfield id="RESERVED" width="21" begin="31" end="11" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="31 - 11" rwaccess="R"/> 
		<bitfield id="LFPS_POL_LFPS_TO_RXEQ" width="11" begin="10" end="0" resetval="0x250" description="LFPS_POL_LFPS_TO_RXEQ value  		 Resolution of this parameter is 8 ns.  		 For simulation purposes it is recommended to set the value 250 [~2us]  		 For synthesis purposes it is recommended to set the value 250 [~2us]" range="10 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg62" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg62" offset="0x20214" width="32" description="USB3.0 Configuration Register 62">
		<bitfield id="PHY_TX_LATENCY_PRESCALE" width="2" begin="31" end="30" resetval="0x0" description="PRESCALER for PHY_TX_LATENCY value:  		- 0x0 : 8ns [PHY pclk clock] 		- 0x1 : 1us 		- 0x2 : 100us 		- 0x3 : no clock - allows disabling certain timeout" range="31 - 30" rwaccess="R/W"/> 
		<bitfield id="RESERVED" width="24" begin="29" end="6" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="29 - 6" rwaccess="R"/> 
		<bitfield id="PHY_TX_LATENCY" width="6" begin="5" end="0" resetval="0x11" description="PHY_TX_LATENCY value  		This parameter defines latency from when data appear on PIPE interface to channel + 3 time units [defined by PHY_TX_LATENCY_PRESCALE].  		For simulation purposes it is recommended to set the value 11. 		For synthesis purposes it is recommended to set the value 11" range="5 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg63" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg63" offset="0x20218" width="32" description="USB3.0 Configuration Register 63">
		<bitfield id="RESERVED" width="17" begin="31" end="15" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="31 - 15" rwaccess="R"/> 
		<bitfield id="U2_INACTIVITY_TMOUT" width="15" begin="14" end="0" resetval="0x31999" description="U2_INACTIVITY_TMOUT value  		Resolution of this parameter is 8 ns.  		For simulation purposes it is recommended to set the value: 		- 31999*8ns =~256us [SystemC device ENV] 		- 249*8ns =~2us [VIP based ENV] 		For synthesis purposes it is recommended to set the value: 		- 31999*8ns =~256us" range="14 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg64" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg64" offset="0x20220" width="32" description="USB2.0 Configuration Register 64">
		<bitfield id="RESERVED" width="25" begin="31" end="7" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="31 - 7" rwaccess="R"/> 
		<bitfield id="TFILTSE0" width="7" begin="6" end="0" resetval="0x74" description="TFILTSE0: Reset Handshake Protocol: Time for which a suspended highspeed capable device  must see a continuous SE0 before beginning the high-speed detection handshake.  		Resolution of this parameter is 33.3ns.  		For simulation purposes it is recommended to set the value: 		- 74*33.3ns =~2.46us [SystemC device ENV] 		- 57*33.3ns =~1.9us [VIP based ENV] 		For synthesis purposes it is recommended to set the value: 		- 74*33.3ns =~2.46us" range="6 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg65" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg65" offset="0x20224" width="32" description="USB2.0 Configuration Register 65">
		<bitfield id="RESERVED" width="17" begin="31" end="15" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="31 - 15" rwaccess="R"/> 
		<bitfield id="TFILT" width="7" begin="6" end="0" resetval="0x75" description="TFILT: Time for which a Chirp J or Chirp K must be continuously detected [filtered] by hub or device during Reset handshake.  		Resolution of this parameter is 33.3 ns.  		For simulation purposes it is recommended to set the value: 		- 75*33.3ns =~2.5us [SystemC device ENV] 		- 57*33.3ns =~1.9us [VIP based ENV] 		For synthesis purposes it is recommended to set the value: 		- 75*33.3ns =~2.5us" range="6 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg66" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_cfg_reg66" offset="0x20228" width="32" description="USB2.0 Configuration Register 66">
		<bitfield id="RESERVED" width="17" begin="31" end="15" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="31 - 15" rwaccess="R"/> 
		<bitfield id="TWTRSTFS_SE0" width="7" begin="6" end="0" resetval="0x73" description="TWTRSTFS: Time a high-speed capable device operating in non-suspended fullspeed must wait after start of SE0 before beginning the high-speed detection handshake.  		Resolution of this parameter is 33.3 ns.  		For simulation purposes it is recommended to set the value: 		- 73*33.3ns =~2.43us [SystemC device ENV] 		- 57*33.3ns =~1.9us [VIP based ENV] 		For synthesis purposes it is recommended to set the value: 		- 73*33.3ns =~2.43us" range="6 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_dma_axi_ctrl" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_dma_axi_ctrl" offset="0x20300" width="32" description="DMA AXI Master Control register.
This register is optional, and implemented only when DMA has an AXI interface. This register configures the AXI master interface pins: marlock, marcache , marprot, mawlock, mawcache, mawprot are configurable by AXI Master Control register. The marcache and the mawcache width depends on the AXI release: AXI4/AXI3.">
		<bitfield id="RESERVED3" width="6" begin="31" end="26" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="31 - 26" rwaccess="R"/> 
		<bitfield id="MAWLOCK" width="2" begin="25" end="24" resetval="0x0" description="The mawlock pin configuration" range="25 - 24" rwaccess="R/W"/> 
		<bitfield id="MAWCACHE" width="4" begin="23" end="20" resetval="0x0" description="The mawcache pin configuration" range="23 - 20" rwaccess="R/W"/> 
		<bitfield id="RESERVED2" width="1" begin="19" end="19" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="19" rwaccess="R"/> 
		<bitfield id="MAWPROT" width="3" begin="18" end="16" resetval="0x0" description="The mawprot pin configuration" range="18 - 16" rwaccess="R/W"/> 
		<bitfield id="RESERVED1" width="6" begin="15" end="10" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="15 - 10" rwaccess="R"/> 
		<bitfield id="MARLOCK" width="2" begin="9" end="8" resetval="0x0" description="The marlock pin configuration" range="9 - 8" rwaccess="R/W"/> 
		<bitfield id="MARCACHE" width="4" begin="7" end="4" resetval="0x0" description="The marcache pin configuration" range="7 - 4" rwaccess="R/W"/> 
		<bitfield id="RESERVED0" width="1" begin="3" end="3" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="3" rwaccess="R"/> 
		<bitfield id="MARPROT" width="3" begin="2" end="0" resetval="0x0" description="The marprot pin configuration" range="2 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_dma_axi_id" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_dma_axi_id" offset="0x20304" width="32" description="DMA AXI Master ID register.
This register is optional, and implemented only when DMA has an AXI interface.
Master ID width is configurable using CDNS_USBSSDEV_MAXI_ID_WIDTH define parameter (currently set to 4). Initially master will always output a value of zero regardless of the width. Value on the ID pins can be programmed using AXI Master ID register (DMA_AXI_ID) register.">
		<bitfield id="RESERVED1" width="11" begin="31" end="21" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="31 - 21" rwaccess="R"/> 
		<bitfield id="MAR_ID" width="5" begin="20" end="16" resetval="0x0" description="The marid pin configuration" range="20 - 16" rwaccess="R/W"/> 
		<bitfield id="RESERVED0" width="11" begin="15" end="5" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="15 - 5" rwaccess="R"/> 
		<bitfield id="MAW_ID" width="5" begin="4" end="0" resetval="0x0" description="The mawid and mwid pin configuration" range="4 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_dma_axi_cap" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_dma_axi_cap" offset="0x20308" width="32" description="DMA AXI Master Extended Capability register.
This register is optional, and implemented only when DMA has an AXI interface. It contains status of this AXI interface operations.">
		<bitfield id="RESERVED2" width="1" begin="31" end="31" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="31" rwaccess="R"/> 
		<bitfield id="AXI_IDLE" width="1" begin="30" end="30" resetval="0x1" description="This bit provides information about the AXI Master state: '1': no pending action required by the AXI Master wrapper, '0': the AXI Master wrapper has outstanding transactions." range="30" rwaccess="R"/> 
		<bitfield id="AXI_SLVERR" width="1" begin="29" end="29" resetval="0x0" description="This bit provides an information about AXI SLAVE ERROR response on B or R channel. This flag is cleared by writing '1' to it. Once set it is held until cleared." range="29" rwaccess="R/W1TC"/> 
		<bitfield id="AXI_DECERR" width="1" begin="28" end="28" resetval="0x0" description="This bit provides an information about AXI DECODE ERROR response on B or R channel. This flag is cleared by writing '1' to it. Once set it is held until cleared." range="28" rwaccess="R/W1TC"/> 
		<bitfield id="RESERVED1" width="6" begin="27" end="22" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="27 - 22" rwaccess="R"/> 
		<bitfield id="AXI_SLVERR_EN" width="1" begin="21" end="21" resetval="0x0" description="This bit enables interrupt on AXI SLAVE ERROR detection. When 1 and AXI_SLVERR is 1 then AXI SLAVE ERROR interrupt is requested. When 0 - disabled interrupt from this source" range="21" rwaccess="R/W"/> 
		<bitfield id="AXI_DECERR_EN" width="1" begin="20" end="20" resetval="0x0" description="This bit enables interrupt on AXI DECODE ERROR detection. When 1 and AXI_DECERR is 1 then AXI DECODE ERROR interrupt is requested. When 0 - disabled interrupt from this source" range="20" rwaccess="R/W"/> 
		<bitfield id="RESERVED0" width="20" begin="19" end="0" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="19 - 0" rwaccess="R"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_dma_axi_ctrl0" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_dma_axi_ctrl0" offset="0x2030C" width="32" description="DMA AXI Master Control0 register.
This register is optional, and implemented only when DMA has an AXI interface with outstanding transactions support.">
		<bitfield id="RESERVED" width="28" begin="31" end="4" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="31 - 4" rwaccess="R"/> 
		<bitfield id="B_MAX" width="4" begin="3" end="0" resetval="0x15" description="The register controls maximum burst length - it is used by the AXI Master wrapper to determine maximum value of AxLEN. It uses AXI AxLEN encoding. Default value is the maximum supported one and it is implementation specific. Width of this register is the same as AxLEN signals width. Note: This register should only be written to during the register initialisation process" range="3 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_dma_axi_ctrl1" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_dma_axi_ctrl1" offset="0x20310" width="32" description="DMA AXI Master Control1 register.
This register is optional, and implemented only when DMA has an AXI interface with outstanding transactions support.">
		<bitfield id="RESERVED1" width="11" begin="31" end="21" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="31 - 21" rwaccess="R"/> 
		<bitfield id="WOT" width="5" begin="20" end="16" resetval="0x15" description="Number of outstanding write transactions that can be initiated by the AXI Master wrapper. Default value of this field is CDNS_USBSSDEV_AXI_WCD-1 [define parameter]. The value written to this field should be the requested number of outstanding write transactions minus 1, thus the actual number of possible outstanding write transactions is one more than the programmed value. Note: This register should only be written to during the register initialization process" range="20 - 16" rwaccess="R/W"/> 
		<bitfield id="RESERVED0" width="11" begin="15" end="5" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="15 - 5" rwaccess="R"/> 
		<bitfield id="ROT" width="5" begin="4" end="0" resetval="0x15" description="Number of outstanding read transactions that can be initiated by the AXI Master wrapper. Default value of this field is CDNS_USBSSDEV_AXI_WCD-1 [define parameter]. The value written to this field should be the requested number of outstanding read transactions minus 1, thus the actual number of possible outstanding read transactions is one more than the programmed value. Note: This register should only be written to during the register initialization process" range="4 - 0" rwaccess="R/W"/>
	</register>
	<register id="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_dma_axi_ctrl2" acronym="VBP2APB_WRAP__CONTROLLER_VBP__CORE_ADDR_MAP_dma_axi_ctrl2" offset="0x20314" width="32" description="AXI Master Wrapper Extended Capability Control Register 2. This register may be read from or written to at any time.">
		<bitfield id="RESERVED0" width="25" begin="31" end="7" resetval="0x0" description="Reserved field. Write ignored. 0 when read" range="31 - 7" rwaccess="R"/> 
		<bitfield id="AXI_WTHRES" width="7" begin="6" end="0" resetval="0x1" description="AXI Write Buffer Threshold, RW.               When performing an AXI write burst this field specifies the minimum number of required AXI beats buffered prior to starting the burst on AXI W-Channel by asserting wvalid.              This allows a user to balance the requirement for minimal latency with the requirement for low bus utilisation during bursts.             Burst lengths smaller than or equal to this threshold will be buffered completely and then output on W-Channel.              Burst lengths greater than this threshold will output the burst on the W-Channel such that the first AXI_WTHRES beats will be continuously with no drop of WVALID, beats thereafter may or may not be continuous depending on availability of data.             Legal values are between 1 and 127.             A value of 1 means that the burst is started on W-Channel as soon as any data is available without any additional delay.             A value of 0 is reserved and should not be used as may lead to unpredictable behaviour.             This register can be written only when the AXI Master wrapper is halted [AXI_HALT set to '1'] and idle [AXI_IDLE is '1'].             Note: This register should only be written to during the register initialisation process." range="6 - 0" rwaccess="R/W"/>
	</register>
</module>