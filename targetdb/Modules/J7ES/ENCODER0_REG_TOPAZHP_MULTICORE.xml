<module name="ENCODER0_REG_TOPAZHP_MULTICORE" acronym="" XML_version="1.0" HW_revision="n/a" description="">
  <register id="ENCODER0_CR_MULTICORE_SRST" acronym="ENCODER0_CR_MULTICORE_SRST" offset="0x0" width="32" description="It is important that the correct procedure is used when the host software-resets the MTX and the topazHP cores using the MULTICORE_SRST register. This procedure ensures that MTX is inactive before the surrounding logic is reset. Failing to do this may result in the system bus locking up if MTX is active whilst the software reset is used. Disable MTX by writing zero to the MTX_ENABLE register. Software reset MTX only by writing 0x1 then 0x0 to the MULTICORE_SRST register. Software reset MTX, cores, and IO by writing 0x7 then 0x0 to the MULTICORE_SRST register.">
    <bitfield id="RESERVED" width="29" begin="31" end="3" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_IMG_TOPAZ_CORE_SOFT_RESET" width="1" begin="2" end="2" resetval="0x0" description="Core software reset:" range="" rwaccess="RW"/>
    <bitfield id="CR_IMG_TOPAZ_IO_SOFT_RESET" width="1" begin="1" end="1" resetval="0x0" description="IO Software reset:" range="" rwaccess="RW"/>
    <bitfield id="CR_IMG_TOPAZ_MTX_SOFT_RESET" width="1" begin="0" end="0" resetval="0x0" description="MTX Software reset:" range="" rwaccess="RW"/>
  </register>
  <register id="ENCODER0_CR_MULTICORE_INT_STAT" acronym="ENCODER0_CR_MULTICORE_INT_STAT" offset="0x4" width="32" description="">
    <bitfield id="CR_TOPAZHP_MAS_HOST_INTS" width="1" begin="31" end="31" resetval="0x0" description="Status of TopazHP interrupt due to Host enable register" range="" rwaccess="RW"/>
    <bitfield id="CR_TOPAZHP_MAS_MTX_INTS" width="1" begin="30" end="30" resetval="0x0" description="Status of TopazHP interrupt due to MTX enable register" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="29" end="29" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_INT_STAT_MMU_FAULT_B" width="4" begin="28" end="25" resetval="0x0" description="4 bit indicating a page fault [Pulse generated at event, held by edge detection logic]." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="24" end="24" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_INT_STAT_HOST_CORES" width="8" begin="23" end="16" resetval="0x0" description="Indicates which instances of TopazHP core are currently issuing an IRQ due to the Host enable register." range="" rwaccess="RW"/>
    <bitfield id="CR_INT_STAT_MTX_CORES" width="8" begin="15" end="8" resetval="0x0" description="Indicates which instances of TopazHP core are currently issuing an IRQ due to the MTX enable register." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="7" end="7" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_INT_STAT_MMU_FAULT" width="4" begin="6" end="3" resetval="0x0" description="4 bit indicating a page fault [Pulse generated at event, held by edge detection logic]." range="" rwaccess="RW"/>
    <bitfield id="CR_INT_STAT_MTX_HALT" width="1" begin="2" end="2" resetval="0x0" description="MTX_HALT interrupt status" range="" rwaccess="RW"/>
    <bitfield id="CR_INT_STAT_MTX" width="1" begin="1" end="1" resetval="0x0" description="MTX interrupt status" range="" rwaccess="RW"/>
    <bitfield id="CR_INT_STAT_DMAC" width="1" begin="0" end="0" resetval="0x0" description="" range="" rwaccess="RW"/>
  </register>
  <register id="ENCODER0_CR_MULTICORE_MTX_INT_ENAB" acronym="ENCODER0_CR_MULTICORE_MTX_INT_ENAB" offset="0x8" width="32" description="Two interrupt signals are generated by the core. The same interrupt sources are used, but different interrupt masks can be applied. This is mainly intended so that one interrupt is used by MTX, and the other interrupt is used by the Host.">
    <bitfield id="RESERVED" width="1" begin="31" end="31" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_MTX_TOPAZHP_MAS_INTEN" width="1" begin="30" end="30" resetval="0x0" description="Master interrupt enable" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="29" end="29" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_MTX_INTEN_MMU_FAULT_B" width="4" begin="28" end="25" resetval="0x0" description="0 : Disables MMU_FAULT interrupts" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="24" end="24" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_MTX_INTEN_HOST_CORES" width="8" begin="23" end="16" resetval="0x0" description="Indicates which instances of TopazHP core CORE_HOST_IRQ are currently enabled as interrupt source." range="" rwaccess="RW"/>
    <bitfield id="CR_MTX_INTEN_MTX_CORES" width="8" begin="15" end="8" resetval="0x0" description="Indicates which instances of TopazHP core CORE_MTX_IRQ are currently enabled as interrupt source." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="7" end="7" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_MTX_INTEN_MMU_FAULT" width="4" begin="6" end="3" resetval="0x0" description="0 : Disables MMU_FAULT interrupts" range="" rwaccess="RW"/>
    <bitfield id="CR_MTX_INTEN_MTX_HALT" width="1" begin="2" end="2" resetval="0x0" description="" range="" rwaccess="RW"/>
    <bitfield id="CR_MTX_INTEN_MTX" width="1" begin="1" end="1" resetval="0x0" description="" range="" rwaccess="RW"/>
    <bitfield id="CR_MTX_INTEN_DMAC" width="1" begin="0" end="0" resetval="0x0" description="" range="" rwaccess="RW"/>
  </register>
  <register id="ENCODER0_CR_MULTICORE_HOST_INT_ENAB" acronym="ENCODER0_CR_MULTICORE_HOST_INT_ENAB" offset="0xC" width="32" description="">
    <bitfield id="CR_HOST_TOPAZHP_MAS_INTEN" width="1" begin="31" end="31" resetval="0x0" description="Master interrupt enable" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="30" end="29" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_HOST_INTEN_MMU_FAULT_B" width="4" begin="28" end="25" resetval="0x0" description="0 : Disables MMU_FAULT interrupts" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="24" end="24" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_HOST_INTEN_HOST_CORES" width="8" begin="23" end="16" resetval="0x0" description="Indicates which instances of TopazHP core CORE_HOST_IRQ are currently enabled as interrupt source." range="" rwaccess="RW"/>
    <bitfield id="CR_HOST_INTEN_MTX_CORES" width="8" begin="15" end="8" resetval="0x0" description="Indicates which instances of TopazHP core CORE_MTX_IRQ are currently enabled as interrupt source." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="7" end="7" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_HOST_INTEN_MMU_FAULT" width="4" begin="6" end="3" resetval="0x0" description="0 : Disables MMU_FAULT interrupts" range="" rwaccess="RW"/>
    <bitfield id="CR_HOST_INTEN_MTX_HALT" width="1" begin="2" end="2" resetval="0x0" description="" range="" rwaccess="RW"/>
    <bitfield id="CR_HOST_INTEN_MTX" width="1" begin="1" end="1" resetval="0x0" description="0 : Disables MTX interrupts" range="" rwaccess="RW"/>
    <bitfield id="CR_HOST_INTEN_DMAC" width="1" begin="0" end="0" resetval="0x0" description="" range="" rwaccess="RW"/>
  </register>
  <register id="ENCODER0_CR_MULTICORE_INT_CLEAR" acronym="ENCODER0_CR_MULTICORE_INT_CLEAR" offset="0x10" width="32" description="The value read from the MULTICORE_INT_STAT interrupt status register is based on 'input source' ORed with 'rising edge detection' logic. Either the rising edge of a level based interrupt or the rising edge of a pulse inperrupt will be latched by the rising edge detection circuit. Writing '1' to this register clears the relevant 'edge detection' bit in the interrupt status register when the respective bit of write data bit is set. If the edge detect bit is 0, write has no affect. In the case of level based sources, the value read from the interrupt status register will remain high until the source generating the level is cleared. Edge detection logic is not applied to the interrupts generated by each core, because similar status clearing registers exist for each individial source in each core.">
    <bitfield id="RESERVED" width="3" begin="31" end="29" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_INTCLR_MMU_FAULT_B" width="4" begin="28" end="25" resetval="0x0" description="1 : Clear MMU fault interrupt [clears fault caused by either TopazHP cores or by the DMAC]" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="18" begin="24" end="7" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_INTCLR_MMU_FAULT" width="4" begin="6" end="3" resetval="0x0" description="1 : Clear MMU fault interrupt [clears fault caused by either TopazHP cores or by the DMAC]" range="" rwaccess="RW"/>
    <bitfield id="CR_INTCLR_MTX_HALT" width="1" begin="2" end="2" resetval="0x0" description="" range="" rwaccess="RW"/>
    <bitfield id="CR_INTCLR_MTX" width="1" begin="1" end="1" resetval="0x0" description="" range="" rwaccess="RW"/>
    <bitfield id="CR_INTCLR_DMAC" width="1" begin="0" end="0" resetval="0x0" description="" range="" rwaccess="RW"/>
  </register>
  <register id="ENCODER0_CR_MULTICORE_MAN_CLK_GATE" acronym="ENCODER0_CR_MULTICORE_MAN_CLK_GATE" offset="0x14" width="32" description="">
    <bitfield id="RESERVED" width="30" begin="31" end="2" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_TOPAZ_MTX_MAN_CLK_GATE" width="1" begin="1" end="1" resetval="0x0" description="MTX manual clock gate:" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="0" end="0" resetval="0x0" description="" range="" rwaccess="R"/>
  </register>
  <register id="ENCODER0_CR_TOPAZ_MTX_C_RATIO" acronym="ENCODER0_CR_TOPAZ_MTX_C_RATIO" offset="0x18" width="32" description="Reserved for internal use">
    <bitfield id="RESERVED" width="30" begin="31" end="2" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_MTX_C_RATIO" width="2" begin="1" end="0" resetval="0x0" description="sys_clk : mtx_clk clock ratio" range="" rwaccess="RW"/>
  </register>
  <register id="ENCODER0_CR_MMU_STATUS" acronym="ENCODER0_CR_MMU_STATUS" offset="0x1C" width="32" description="">
    <bitfield id="CR_MMU_FAULT_ADDR" width="20" begin="31" end="12" resetval="0x0" description="Page-aligned address causing page fault" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="11" begin="11" end="1" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_MMU_PF_N_RW" width="1" begin="0" end="0" resetval="0x0" description="Indicates whether the current fault is a page or R/W protection fault" range="" rwaccess="R"/>
  </register>
  <register id="ENCODER0_CR_MMU_MEM_REQ" acronym="ENCODER0_CR_MMU_MEM_REQ" offset="0x20" width="32" description="">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_MEM_REQ_STAT_READS" width="8" begin="7" end="0" resetval="0x0" description="This is the number of outstanding read requests." range="" rwaccess="R"/>
  </register>
  <register id="ENCODER0_CR_MMU_CONTROL0" acronym="ENCODER0_CR_MMU_CONTROL0" offset="0x24" width="32" description="">
    <bitfield id="RESERVED" width="15" begin="31" end="17" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_MMU_BYPASS_TOPAZ" width="1" begin="16" end="16" resetval="0x1" description="Setting this bit to a '1' bypasses the MMU for the TopazHP cores and the DMAC" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="5" begin="15" end="11" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_FLOWRATE_TOPAZ" width="3" begin="10" end="8" resetval="0x0" description="Flowrate control for TopazHP cores" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="7" end="4" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_MMU_INVALDC" width="1" begin="3" end="3" resetval="0x0" description="Writing '1' causes flushing of directory cache [and all other caches and tlbs] [The flush is triggered by the act of writing '1' to this bit, but the flush will complete and MMU will continue to function if the bit is left high." range="" rwaccess="RW"/>
    <bitfield id="CR_MMU_FLUSH" width="1" begin="2" end="2" resetval="0x0" description="Writing '1' causes flushing of address translation cache and all tlbs [The MMU will remain in Flush state until the bit is cleared by writing '0'." range="" rwaccess="RW"/>
    <bitfield id="CR_MMU_PAUSE" width="1" begin="1" end="1" resetval="0x0" description="Writing '1' causes MMU operation to pause [The MMU will remain paused until the bit is cleared by writing '0']" range="" rwaccess="RW"/>
    <bitfield id="CR_MMU_NOREORDER" width="1" begin="0" end="0" resetval="0x0" description="Writing '1' disables transaction re-ordering by signalling to the external SoC infrastructure to closely order the requests [debug only]" range="" rwaccess="RW"/>
  </register>
  <register id="ENCODER0_CR_MMU_CONTROL1" acronym="ENCODER0_CR_MMU_CONTROL1" offset="0x28" width="32" description="">
    <bitfield id="CR_MMU_PAGE_SIZE" width="4" begin="31" end="28" resetval="0xC" description="Page size control for memory arbiter - the value corresponds to the lsb position of the page size" range="" rwaccess="RW"/>
    <bitfield id="CR_MMU_BEST_COUNT" width="8" begin="27" end="20" resetval="0x0" description="Best count for memory arbiter" range="" rwaccess="RW"/>
    <bitfield id="CR_MMU_ADT_TTE" width="8" begin="19" end="12" resetval="0x0" description="TTE value for ADT" range="" rwaccess="RW"/>
    <bitfield id="CR_MMU_TTE_THRESHOLD" width="12" begin="11" end="0" resetval="0xC" description="TTE threshold for memory arbiter" range="" rwaccess="RW"/>
  </register>
  <register id="ENCODER0_CR_MMU_CONTROL2" acronym="ENCODER0_CR_MMU_CONTROL2" offset="0x2C" width="32" description="">
    <bitfield id="RESERVED" width="28" begin="31" end="4" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_MMU_TILING_SCHEME" width="1" begin="3" end="3" resetval="0x0" description="This bit controls the tiling scheme described in MMU Address Translation section." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="2" end="1" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_MMU_ENABLE_36BIT_ADDRESSING" width="1" begin="0" end="0" resetval="0x0" description="Setting this bit to a value of 1 enables the extended MMU addressing [i.e." range="" rwaccess="RW"/>
  </register>
  <register id="ENCODER0_CR_MMU_DIR_LIST_BASE_00" acronym="ENCODER0_CR_MMU_DIR_LIST_BASE_00" offset="0x30" width="32" description="">
    <bitfield id="CR_MMU_DIR_LIST_BASE_ADDR" width="28" begin="31" end="4" resetval="0x0" description="Base address in physical memory for MMU Directory 1 Entries." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="3" end="0" resetval="0x0" description="" range="" rwaccess="R"/>
  </register>
  <register id="ENCODER0_CR_MMU_TILE_00" acronym="ENCODER0_CR_MMU_TILE_00" offset="0x38" width="32" description="">
    <bitfield id="RESERVED" width="2" begin="31" end="30" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_TILE_128BYTE_INTERLEAVE" width="1" begin="29" end="29" resetval="0x0" description="If DDR is arranged so that 128 bytes go to one bank, and the next 128 bytes go to a different bank row accesses into a tile could be more efficient if they swap order every 128 bytes" range="" rwaccess="RW"/>
    <bitfield id="CR_TILE_ENABLE" width="1" begin="28" end="28" resetval="0x0" description="0 : Memory Tiling Disabled" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="27" end="27" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_TILE_STRIDE" width="3" begin="26" end="24" resetval="0x0" description="Defines the X Tile Stride for the memory address range" range="" rwaccess="RW"/>
    <bitfield id="CR_TILE_MAX_ADDR" width="12" begin="23" end="12" resetval="0x0" description="Defines the address for tiling range, in trems of the address MSB's i.e." range="" rwaccess="RW"/>
    <bitfield id="CR_TILE_MIN_ADDR" width="12" begin="11" end="0" resetval="0x0" description="Defines the minimum address for range tiling range, in terms of the address MSB's i.e." range="" rwaccess="RW"/>
  </register>
  <register id="ENCODER0_CR_MMU_TILE_01" acronym="ENCODER0_CR_MMU_TILE_01" offset="0x3C" width="32" description="">
    <bitfield id="RESERVED" width="2" begin="31" end="30" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_TILE_128BYTE_INTERLEAVE" width="1" begin="29" end="29" resetval="0x0" description="If DDR is arranged so that 128 bytes go to one bank, and the next 128 bytes go to a different bank row accesses into a tile could be more efficient if they swap order every 128 bytes" range="" rwaccess="RW"/>
    <bitfield id="CR_TILE_ENABLE" width="1" begin="28" end="28" resetval="0x0" description="0 : Memory Tiling Disabled" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="27" end="27" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_TILE_STRIDE" width="3" begin="26" end="24" resetval="0x0" description="Defines the X Tile Stride for the memory address range" range="" rwaccess="RW"/>
    <bitfield id="CR_TILE_MAX_ADDR" width="12" begin="23" end="12" resetval="0x0" description="Defines the address for tiling range, in trems of the address MSB's i.e." range="" rwaccess="RW"/>
    <bitfield id="CR_TILE_MIN_ADDR" width="12" begin="11" end="0" resetval="0x0" description="Defines the minimum address for range tiling range, in terms of the address MSB's i.e." range="" rwaccess="RW"/>
  </register>
  <register id="ENCODER0_CR_MTX_DEBUG_MSTR" acronym="ENCODER0_CR_MTX_DEBUG_MSTR" offset="0x44" width="32" description="">
    <bitfield id="RESERVED" width="4" begin="31" end="28" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_MTX_MSTR_LAST_RAM_BANK_SIZE" width="4" begin="27" end="24" resetval="0x0" description="Defines size of last RAM bank, where size is 2^[MTX_LAST_RAM_BANK_SIZE+2] bytes" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="23" end="20" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_MTX_MSTR_RAM_BANK_SIZE" width="4" begin="19" end="16" resetval="0x1" description="Defines size of all but last bank, where size is 2^[MTX_RAM_BANK_SIZE+2] bytes" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="15" end="12" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_MTX_MSTR_RAM_BANKS" width="4" begin="11" end="8" resetval="0x0" description="Number of MTX RAM banks" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="7" end="5" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_MTX_MSTR_DBG_GPIO_OUT" width="2" begin="4" end="3" resetval="0x0" description="Data provided by dbg_gpio_out by MTX." range="" rwaccess="RW"/>
    <bitfield id="CR_MTX_MSTR_DBG_IS_SLAVE" width="1" begin="2" end="2" resetval="0x1" description="Determines whether the jtag port of MTX is to be master or slave" range="" rwaccess="RW"/>
    <bitfield id="CR_MTX_MSTR_DBG_GPIO_IN" width="2" begin="1" end="0" resetval="0x0" description="Data for dbg_gpio_in for MTX" range="" rwaccess="RW"/>
  </register>
  <register id="ENCODER0_CR_MTX_DEBUG_SLV" acronym="ENCODER0_CR_MTX_DEBUG_SLV" offset="0x48" width="32" description="">
    <bitfield id="RESERVED" width="4" begin="31" end="28" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_MTX_SLV_LAST_RAM_BANK_SIZE" width="4" begin="27" end="24" resetval="0x0" description="Defines size of last RAM bank, where size is 2^[MTX_LAST_RAM_BANK_SIZE+2] bytes" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="23" end="20" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_MTX_SLV_RAM_BANK_SIZE" width="4" begin="19" end="16" resetval="0x0" description="Defines size of all but last bank, where size is 2^[MTX_RAM_BANK_SIZE+2] bytes" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="15" end="12" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_MTX_SLV_RAM_BANKS" width="4" begin="11" end="8" resetval="0x0" description="Number of MTX RAM banks" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="7" end="5" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_MTX_SLV_DBG_GPIO_OUT" width="2" begin="4" end="3" resetval="0x0" description="Data provided by dbg_gpio_out by MTX." range="" rwaccess="RW"/>
    <bitfield id="CR_MTX_SLV_DBG_IS_SLAVE" width="1" begin="2" end="2" resetval="0x0" description="Determines whether the jtag port of MTX is to be master or slave" range="" rwaccess="RW"/>
    <bitfield id="CR_MTX_SLV_DBG_GPIO_IN" width="2" begin="1" end="0" resetval="0x0" description="Data for dbg_gpio_in for MTX" range="" rwaccess="RW"/>
  </register>
  <register id="ENCODER0_CR_MULTICORE_CORE_SEL_0" acronym="ENCODER0_CR_MULTICORE_CORE_SEL_0" offset="0x50" width="32" description="">
    <bitfield id="CR_WRITES_CORE_ALL" width="1" begin="31" end="31" resetval="0x0" description="0 : Write accesses will be sent to one instance of TopazHP core depending on the address" range="" rwaccess="RW"/>
    <bitfield id="CR_WRITES_MTX_ALL" width="1" begin="30" end="30" resetval="0x0" description="0 : Write accesses will be sent to one MTX depending on the address" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="27" begin="29" end="3" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_DMAC_MTX_SELECT" width="3" begin="2" end="0" resetval="0x0" description="The topaz_core number to which a DMA transfer is targeted." range="" rwaccess="RW"/>
  </register>
  <register id="ENCODER0_CR_MULTICORE_CORE_SEL_1" acronym="ENCODER0_CR_MULTICORE_CORE_SEL_1" offset="0x54" width="32" description="">
    <bitfield id="RESERVED" width="27" begin="31" end="5" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_RTM_PORT_CORE_SELECT" width="5" begin="4" end="0" resetval="0x0" description="The number of the instance of TopazHP core to which the external RTM ports will be connected" range="" rwaccess="RW"/>
  </register>
  <register id="ENCODER0_CR_MULTICORE_HW_CFG" acronym="ENCODER0_CR_MULTICORE_HW_CFG" offset="0x58" width="32" description="">
    <bitfield id="RESERVED" width="4" begin="31" end="28" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_EXTENDED_ADDR_RANGE" width="4" begin="27" end="24" resetval="0x8" description="The number of physical address bits - 32, where a value of 0 indicates" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="5" begin="23" end="19" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_NUM_CORES_PER_MTX" width="3" begin="18" end="16" resetval="0x4" description="The number of TopazHP cores that are controlled by each MTX" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="5" begin="15" end="11" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_NUM_MTX_SUPPORTED" width="3" begin="10" end="8" resetval="0x1" description="The number of instances of MTX that are present" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="3" begin="7" end="5" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_NUM_CORES_SUPPORTED" width="5" begin="4" end="0" resetval="0x4" description="The number of instances of TopazHP core that are present" range="" rwaccess="R"/>
  </register>
  <register id="ENCODER0_CR_MULTICORE_CMD_FIFO_WRITE" acronym="ENCODER0_CR_MULTICORE_CMD_FIFO_WRITE" offset="0x60" width="32" description="">
    <bitfield id="CR_CMD_FIFO_WDATA" width="32" begin="31" end="0" resetval="0x0" description="Data written to this register is stored into the command FIFO." range="" rwaccess="RW"/>
  </register>
  <register id="ENCODER0_CR_MULTICORE_CMD_FIFO_WRITE_SPACE" acronym="ENCODER0_CR_MULTICORE_CMD_FIFO_WRITE_SPACE" offset="0x64" width="32" description="">
    <bitfield id="RESERVED" width="23" begin="31" end="9" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_CMD_FIFO_FULL" width="1" begin="8" end="8" resetval="0x0" description="0 : The command FIFO has space in it for at least 1 word" range="" rwaccess="R"/>
    <bitfield id="CR_CMD_FIFO_SPACE" width="8" begin="7" end="0" resetval="0x20" description="The number of words of space available in the command FIFO." range="" rwaccess="R"/>
  </register>
  <register id="ENCODER0_CR_TOPAZ_CMD_FIFO_READ" acronym="ENCODER0_CR_TOPAZ_CMD_FIFO_READ" offset="0x70" width="32" description="">
    <bitfield id="CR_CMD_FIFO_RDATA" width="32" begin="31" end="0" resetval="0x0" description="Data from the command FIFO can be read by reading this register." range="" rwaccess="RW"/>
  </register>
  <register id="ENCODER0_CR_TOPAZ_CMD_FIFO_READ_AVAILABLE" acronym="ENCODER0_CR_TOPAZ_CMD_FIFO_READ_AVAILABLE" offset="0x74" width="32" description="">
    <bitfield id="RESERVED" width="23" begin="31" end="9" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_CMD_FIFO_NOTEMPTY" width="1" begin="8" end="8" resetval="0x0" description="0 : The command FIFO is empty." range="" rwaccess="R"/>
    <bitfield id="CR_CMD_FIFO_QUANTITY" width="8" begin="7" end="0" resetval="0x0" description="The number of words of data that are available to be read from the command FIFO" range="" rwaccess="R"/>
  </register>
  <register id="ENCODER0_CR_TOPAZ_CMD_FIFO_FLUSH" acronym="ENCODER0_CR_TOPAZ_CMD_FIFO_FLUSH" offset="0x78" width="32" description="">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_CMD_FIFO_FLUSH" width="1" begin="0" end="0" resetval="0x0" description="The action of writing 1 to this register causes all the data currently in the command FIFO to be discarded." range="" rwaccess="RW"/>
  </register>
  <register id="ENCODER0_CR_MMU_TILE_EXT_00" acronym="ENCODER0_CR_MMU_TILE_EXT_00" offset="0x80" width="32" description="">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_TILE_MAX_ADDR_EXT" width="8" begin="15" end="8" resetval="0x0" description="Defines the extended part of max address for tiling range, in terms of the address LSB's i.e." range="" rwaccess="RW"/>
    <bitfield id="CR_TILE_MIN_ADDR_EXT" width="8" begin="7" end="0" resetval="0x0" description="Defines the extended part of min address for tiling range, in terms of the address LSB's i.e." range="" rwaccess="RW"/>
  </register>
  <register id="ENCODER0_CR_MMU_TILE_EXT_01" acronym="ENCODER0_CR_MMU_TILE_EXT_01" offset="0x84" width="32" description="">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_TILE_MAX_ADDR_EXT" width="8" begin="15" end="8" resetval="0x0" description="Defines the extended part of max address for tiling range, in terms of the address LSB's i.e." range="" rwaccess="RW"/>
    <bitfield id="CR_TILE_MIN_ADDR_EXT" width="8" begin="7" end="0" resetval="0x0" description="Defines the extended part of min address for tiling range, in terms of the address LSB's i.e." range="" rwaccess="RW"/>
  </register>
  <register id="ENCODER0_CR_TOPAZHP_CMD_PRIORITY_ENABLE" acronym="ENCODER0_CR_TOPAZHP_CMD_PRIORITY_ENABLE" offset="0x90" width="32" description="This register enables the mem_cmd_priority output for each TopazHP BIF requestor individually. The mem_cmd_priority output is set per memory transaction to indicate to the bus fabric that the transaction is more critical to performance than other requests. Each requestor may have the priority enabled independently. The BIF defaults to high priority on reset for MMU page tables. Note that high priority transactions (as enabled by this register) will not be stalled when the mem_limited_throughput input is set. Transactions issued by the BIF for MMU page table fetches will never be stalled regardless of whether the CMD_PRI_BIF register bit is set.">
    <bitfield id="RESERVED" width="23" begin="31" end="9" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_CMD_PRI_SEQ3_VLC3" width="1" begin="8" end="8" resetval="0x0" description="The mem_cmd_priority output may be set for SEQ3 / VLC3 memory transactions when enabled." range="" rwaccess="RW"/>
    <bitfield id="CR_CMD_PRI_LRITC3" width="1" begin="7" end="7" resetval="0x0" description="The mem_cmd_priority output may be set for LRITC3 memory transactions when enabled." range="" rwaccess="RW"/>
    <bitfield id="CR_CMD_PRI_SEQ2_VLC2" width="1" begin="6" end="6" resetval="0x0" description="The mem_cmd_priority output may be set for SEQ2 / VLC2 memory transactions when enabled." range="" rwaccess="RW"/>
    <bitfield id="CR_CMD_PRI_LRITC2" width="1" begin="5" end="5" resetval="0x0" description="The mem_cmd_priority output may be set for LRITC2 memory transactions when enabled." range="" rwaccess="RW"/>
    <bitfield id="CR_CMD_PRI_SEQ1_VLC1" width="1" begin="4" end="4" resetval="0x0" description="The mem_cmd_priority output may be set for SEQ1 / VLC1 memory transactions when enabled." range="" rwaccess="RW"/>
    <bitfield id="CR_CMD_PRI_LRITC1" width="1" begin="3" end="3" resetval="0x0" description="The mem_cmd_priority output may be set for LRITC1 memory transactions when enabled." range="" rwaccess="RW"/>
    <bitfield id="CR_CMD_PRI_SEQ0_VLC0_DMAC" width="1" begin="2" end="2" resetval="0x0" description="The mem_cmd_priority output may be set for SEQ0 / VLC0 / DMAC memory transactions when enabled." range="" rwaccess="RW"/>
    <bitfield id="CR_CMD_PRI_LRITC0" width="1" begin="1" end="1" resetval="0x0" description="The mem_cmd_priority output may be set for LRITC0 memory transactions when enabled." range="" rwaccess="RW"/>
    <bitfield id="CR_CMD_PRI_BIF" width="1" begin="0" end="0" resetval="0x1" description="The mem_cmd_priority output may be set for BIF [MMU] memory transactions when enabled." range="" rwaccess="RW"/>
  </register>
  <register id="ENCODER0_CR_TOPAZHP_LIMITED_THROUGHPUT" acronym="ENCODER0_CR_TOPAZHP_LIMITED_THROUGHPUT" offset="0x94" width="32" description="This register controls the memory bus stalling behaviour which occurs when the mem_limited_thrughput input is set. The mem_limited_throughput input is set by the bus fabric to indicate to TopazHP that the bus infrastructure is becoming saturated and that higher priority requests should not be blocked by lower priority requests. When the mem_limited_throughput input is set, no additional normal priority requests (with the exception of BIF (MMU) requests) are made for the duration of the request gap (counting the REQUEST_GAP number of clock cycles). Once the request gap is complete, the number of words of normal priority requests is counted up to the limited number of words (LIMITED_WORDS). Any burst transactions in progress are allowed to complete before stalling of normal priority requests recommences for the duration of the request gap. When the mem_limited_throughput input is cleared the counters are disabled (set to zero) and all requests proceed without limit. High priority requests (as defined by the CMD_PRIORITY_ENABLE register) are not stalled and pass unheeded. Requests issued by the BIF for MMU page table fetches always pass unheeded regardless of the value in the CMD_PRIORITY_ENABLE register. When either REQUEST_GAP or LIMITED_WORDS is set to zero the counters are disabled (set to zero) and all memory requests pass unheeded.">
    <bitfield id="RESERVED" width="4" begin="31" end="28" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_REQUEST_GAP" width="12" begin="27" end="16" resetval="0x0" description="Number of clock cycles in the range {0,4095} for which normal priority memory requests are stalled when the mem_limited_throughput input is set." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="15" end="10" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_LIMITED_WORDS" width="10" begin="9" end="0" resetval="0x0" description="Number of normal priority words in the range {0,1023} that can be issued by all requestors combined before applying a request gap when the mem_limited_throughput input is set." range="" rwaccess="RW"/>
  </register>
  <register id="ENCODER0_CR_FIRMWARE_REG_1" acronym="ENCODER0_CR_FIRMWARE_REG_1" offset="0x100" width="32" description="">
    <bitfield id="CR_FIRMWARE_REG_1" width="32" begin="31" end="0" resetval="0x0" description="General purpose register for software use" range="" rwaccess="RW"/>
  </register>
  <register id="ENCODER0_CR_FIRMWARE_REG_2" acronym="ENCODER0_CR_FIRMWARE_REG_2" offset="0x104" width="32" description="">
    <bitfield id="CR_FIRMWARE_REG_2" width="32" begin="31" end="0" resetval="0x0" description="General purpose register for software use" range="" rwaccess="RW"/>
  </register>
  <register id="ENCODER0_CR_FIRMWARE_REG_3" acronym="ENCODER0_CR_FIRMWARE_REG_3" offset="0x108" width="32" description="">
    <bitfield id="CR_FIRMWARE_REG_3" width="32" begin="31" end="0" resetval="0x0" description="General purpose register for software use" range="" rwaccess="RW"/>
  </register>
  <register id="ENCODER0_CR_CYCLE_COUNTER" acronym="ENCODER0_CR_CYCLE_COUNTER" offset="0x110" width="32" description="This counter can be used to keep track of the rate at which the core is encoding macroblocks. To measure frame rate, clear at the start of a frame and read back the value at the end of the frame.">
    <bitfield id="CR_CYCLE_COUNTER" width="32" begin="31" end="0" resetval="0x0" description="32-bit cycle counter, when enabled increments by 1 each clock cycle." range="" rwaccess="RW"/>
  </register>
  <register id="ENCODER0_CR_CYCLE_COUNTER_CTRL" acronym="ENCODER0_CR_CYCLE_COUNTER_CTRL" offset="0x114" width="32" description="">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_CYCLE_COUNTER_ENABLE" width="1" begin="0" end="0" resetval="0x0" description="" range="" rwaccess="RW"/>
  </register>
  <register id="ENCODER0_CR_MULTICORE_IDLE_PWR_MAN" acronym="ENCODER0_CR_MULTICORE_IDLE_PWR_MAN" offset="0x118" width="32" description="">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_TOPAZ_IDLE_DISABLE" width="1" begin="0" end="0" resetval="0x0" description="This field can be used to disable the topaz_idle power management output." range="" rwaccess="RW"/>
  </register>
  <register id="ENCODER0_CR_DIRECT_BIAS_TABLE" acronym="ENCODER0_CR_DIRECT_BIAS_TABLE" offset="0x124" width="32" description="The input to the Direct_Bias shift register based table. Direct_Bias is used to bias selection towards selecting Direct mode output, which is Skip MV(P slice)/Direct mode(Bslice).">
    <bitfield id="RESERVED" width="17" begin="31" end="15" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_DIRECT_BIAS_TABLE" width="15" begin="14" end="0" resetval="0x0" description="Link to the Direct bias table, which is shift register based [52 entries]" range="" rwaccess="RW"/>
  </register>
  <register id="ENCODER0_CR_INTRA_BIAS_TABLE" acronym="ENCODER0_CR_INTRA_BIAS_TABLE" offset="0x128" width="32" description="">
    <bitfield id="CR_INTRA8_BIAS_TABLE" width="16" begin="31" end="16" resetval="0x0" description="Firmware stores the signed INTRA_8x8_BIAS table entries here in decrementing order [27 entries]" range="" rwaccess="RW"/>
    <bitfield id="CR_INTRA16_BIAS_TABLE" width="16" begin="15" end="0" resetval="0x0" description="Firmware stores the signed INTRA_16x16_BIAS table entries here in decrementing order [27 entries]" range="" rwaccess="RW"/>
  </register>
  <register id="ENCODER0_CR_INTER_BIAS_TABLE" acronym="ENCODER0_CR_INTER_BIAS_TABLE" offset="0x12C" width="32" description="Firmware store the SPE_INTER_BIAS table entries here one by one in decrementing order.">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_INTER_BIAS_TABLE" width="16" begin="15" end="0" resetval="0x0" description="Firmware store the signed INTER_BIAS table entries here in decrementing order [27 entries]" range="" rwaccess="RW"/>
  </register>
  <register id="ENCODER0_CR_INTRA_SCALE_TABLE" acronym="ENCODER0_CR_INTRA_SCALE_TABLE" offset="0x130" width="32" description="">
    <bitfield id="RESERVED" width="29" begin="31" end="3" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_INTRA8_SCALE_TABLE" width="3" begin="2" end="0" resetval="0x0" description="Firmware stores the signed INTRA_8x8_SCALE table entries here in decrementing order [27 entries]" range="" rwaccess="RW"/>
  </register>
  <register id="ENCODER0_CR_QPCB_QPCR_OFFSET" acronym="ENCODER0_CR_QPCB_QPCR_OFFSET" offset="0x134" width="32" description="">
    <bitfield id="RESERVED" width="19" begin="31" end="13" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_QPCR_OFFSET" width="5" begin="12" end="8" resetval="0x0" description="Signed offset added to QPy [and then clipped to range 0 to 51] which is used to look-up QPCr from the QPC lookup table." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="7" end="5" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_QPCB_OFFSET" width="5" begin="4" end="0" resetval="0x0" description="Signed offset added to QPy [and then clipped to range 0 to 51] which is used to look-up QPCb from the QPC lookup table." range="" rwaccess="RW"/>
  </register>
  <register id="ENCODER0_CR_INTER_INTRA_SCALE_TABLE" acronym="ENCODER0_CR_INTER_INTRA_SCALE_TABLE" offset="0x140" width="32" description="">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_INTRA_SCALING_TABLE" width="8" begin="15" end="8" resetval="0x0" description="Firmware stores the INTRA_SCALING table here in decrementing order [8 entries]" range="" rwaccess="RW"/>
    <bitfield id="CR_INTER_SCALING_TABLE" width="8" begin="7" end="0" resetval="0x0" description="Firmware stores the INTER_SCALING table here in decrementing order [8 entries]" range="" rwaccess="RW"/>
  </register>
  <register id="ENCODER0_CR_SKIPPED_CODED_SCALE_TABLE" acronym="ENCODER0_CR_SKIPPED_CODED_SCALE_TABLE" offset="0x144" width="32" description="">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_CODED_SCALING_TABLE" width="8" begin="15" end="8" resetval="0x0" description="Firmware stores the CODED_SCALING table here in decrementing order [8 entries]" range="" rwaccess="RW"/>
    <bitfield id="CR_SKIPPED_SCALING_TABLE" width="8" begin="7" end="0" resetval="0x0" description="Firmware stores the SKIPPED_SCALING table here in decrementing order [8 entries]" range="" rwaccess="RW"/>
  </register>
  <register id="ENCODER0_CR_POLYNOM_ALPHA_COEFF_CORE_00" acronym="ENCODER0_CR_POLYNOM_ALPHA_COEFF_CORE_00" offset="0x148" width="32" description="alpha and betta coeffs for lambda table polynomial">
    <bitfield id="RESERVED" width="9" begin="31" end="23" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_POLYNOM_BETA_COEFF_CORE" width="15" begin="22" end="8" resetval="0x0" description="beta coeff for the lambda polynomial [x term], shift register, shift in the following order." range="" rwaccess="RW"/>
    <bitfield id="CR_POLYNOM_ALPHA_COEFF_CORE" width="8" begin="7" end="0" resetval="0x0" description="alpha coeff for the lambda polynomial [x squared term], shift register, shift in the following order." range="" rwaccess="RW"/>
  </register>
  <register id="ENCODER0_CR_POLYNOM_GAMMA_COEFF_CORE_00" acronym="ENCODER0_CR_POLYNOM_GAMMA_COEFF_CORE_00" offset="0x14C" width="32" description="">
    <bitfield id="RESERVED" width="14" begin="31" end="18" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_POLYNOM_GAMMA_COEFF_CORE" width="18" begin="17" end="0" resetval="0x0" description="Gamma coeff for the lambda polynomial [constant term], shift register, shift in the following order" range="" rwaccess="RW"/>
  </register>
  <register id="ENCODER0_CR_POLYNOM_CUTOFF_CORE_00" acronym="ENCODER0_CR_POLYNOM_CUTOFF_CORE_00" offset="0x150" width="32" description="">
    <bitfield id="RESERVED" width="20" begin="31" end="12" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_POLYNOM_SATD_CUTOFF_CORE" width="6" begin="11" end="6" resetval="0x1C" description="Cutoff for the change between the lower and higher qp set of coeffs for the polynomial, greater or equal to this value of qp the polynomial uses the second set of coeffs." range="" rwaccess="RW"/>
    <bitfield id="CR_POLYNOM_SAD_CUTOFF_CORE" width="6" begin="5" end="0" resetval="0x1C" description="Cutoff for the change between the lower and higher qp set of coeffs for the polynomial, greater or equal to this value of qp the polynomial uses the second set of coeffs." range="" rwaccess="RW"/>
  </register>
  <register id="ENCODER0_CR_POLYNOM_ALPHA_COEFF_CORE_01" acronym="ENCODER0_CR_POLYNOM_ALPHA_COEFF_CORE_01" offset="0x154" width="32" description="alpha and betta coeffs for lambda table polynomial">
    <bitfield id="RESERVED" width="9" begin="31" end="23" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_POLYNOM_BETA_COEFF_CORE" width="15" begin="22" end="8" resetval="0x0" description="beta coeff for the lambda polynomial [x term], shift register, shift in the following order." range="" rwaccess="RW"/>
    <bitfield id="CR_POLYNOM_ALPHA_COEFF_CORE" width="8" begin="7" end="0" resetval="0x0" description="alpha coeff for the lambda polynomial [x squared term], shift register, shift in the following order." range="" rwaccess="RW"/>
  </register>
  <register id="ENCODER0_CR_POLYNOM_GAMMA_COEFF_CORE_01" acronym="ENCODER0_CR_POLYNOM_GAMMA_COEFF_CORE_01" offset="0x158" width="32" description="">
    <bitfield id="RESERVED" width="14" begin="31" end="18" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_POLYNOM_GAMMA_COEFF_CORE" width="18" begin="17" end="0" resetval="0x0" description="Gamma coeff for the lambda polynomial [constant term], shift register, shift in the following order" range="" rwaccess="RW"/>
  </register>
  <register id="ENCODER0_CR_POLYNOM_CUTOFF_CORE_01" acronym="ENCODER0_CR_POLYNOM_CUTOFF_CORE_01" offset="0x15C" width="32" description="">
    <bitfield id="RESERVED" width="20" begin="31" end="12" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_POLYNOM_SATD_CUTOFF_CORE" width="6" begin="11" end="6" resetval="0x1C" description="Cutoff for the change between the lower and higher qp set of coeffs for the polynomial, greater or equal to this value of qp the polynomial uses the second set of coeffs." range="" rwaccess="RW"/>
    <bitfield id="CR_POLYNOM_SAD_CUTOFF_CORE" width="6" begin="5" end="0" resetval="0x1C" description="Cutoff for the change between the lower and higher qp set of coeffs for the polynomial, greater or equal to this value of qp the polynomial uses the second set of coeffs." range="" rwaccess="RW"/>
  </register>
  <register id="ENCODER0_CR_POLYNOM_ALPHA_COEFF_CORE_02" acronym="ENCODER0_CR_POLYNOM_ALPHA_COEFF_CORE_02" offset="0x160" width="32" description="alpha and betta coeffs for lambda table polynomial">
    <bitfield id="RESERVED" width="9" begin="31" end="23" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_POLYNOM_BETA_COEFF_CORE" width="15" begin="22" end="8" resetval="0x0" description="beta coeff for the lambda polynomial [x term], shift register, shift in the following order." range="" rwaccess="RW"/>
    <bitfield id="CR_POLYNOM_ALPHA_COEFF_CORE" width="8" begin="7" end="0" resetval="0x0" description="alpha coeff for the lambda polynomial [x squared term], shift register, shift in the following order." range="" rwaccess="RW"/>
  </register>
  <register id="ENCODER0_CR_POLYNOM_GAMMA_COEFF_CORE_02" acronym="ENCODER0_CR_POLYNOM_GAMMA_COEFF_CORE_02" offset="0x164" width="32" description="">
    <bitfield id="RESERVED" width="14" begin="31" end="18" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_POLYNOM_GAMMA_COEFF_CORE" width="18" begin="17" end="0" resetval="0x0" description="Gamma coeff for the lambda polynomial [constant term], shift register, shift in the following order" range="" rwaccess="RW"/>
  </register>
  <register id="ENCODER0_CR_POLYNOM_CUTOFF_CORE_02" acronym="ENCODER0_CR_POLYNOM_CUTOFF_CORE_02" offset="0x168" width="32" description="">
    <bitfield id="RESERVED" width="20" begin="31" end="12" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_POLYNOM_SATD_CUTOFF_CORE" width="6" begin="11" end="6" resetval="0x1C" description="Cutoff for the change between the lower and higher qp set of coeffs for the polynomial, greater or equal to this value of qp the polynomial uses the second set of coeffs." range="" rwaccess="RW"/>
    <bitfield id="CR_POLYNOM_SAD_CUTOFF_CORE" width="6" begin="5" end="0" resetval="0x1C" description="Cutoff for the change between the lower and higher qp set of coeffs for the polynomial, greater or equal to this value of qp the polynomial uses the second set of coeffs." range="" rwaccess="RW"/>
  </register>
  <register id="ENCODER0_CR_POLYNOM_ALPHA_COEFF_CORE_03" acronym="ENCODER0_CR_POLYNOM_ALPHA_COEFF_CORE_03" offset="0x16C" width="32" description="alpha and betta coeffs for lambda table polynomial">
    <bitfield id="RESERVED" width="9" begin="31" end="23" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_POLYNOM_BETA_COEFF_CORE" width="15" begin="22" end="8" resetval="0x0" description="beta coeff for the lambda polynomial [x term], shift register, shift in the following order." range="" rwaccess="RW"/>
    <bitfield id="CR_POLYNOM_ALPHA_COEFF_CORE" width="8" begin="7" end="0" resetval="0x0" description="alpha coeff for the lambda polynomial [x squared term], shift register, shift in the following order." range="" rwaccess="RW"/>
  </register>
  <register id="ENCODER0_CR_POLYNOM_GAMMA_COEFF_CORE_03" acronym="ENCODER0_CR_POLYNOM_GAMMA_COEFF_CORE_03" offset="0x170" width="32" description="">
    <bitfield id="RESERVED" width="14" begin="31" end="18" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_POLYNOM_GAMMA_COEFF_CORE" width="18" begin="17" end="0" resetval="0x0" description="Gamma coeff for the lambda polynomial [constant term], shift register, shift in the following order" range="" rwaccess="RW"/>
  </register>
  <register id="ENCODER0_CR_POLYNOM_CUTOFF_CORE_03" acronym="ENCODER0_CR_POLYNOM_CUTOFF_CORE_03" offset="0x174" width="32" description="">
    <bitfield id="RESERVED" width="20" begin="31" end="12" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_POLYNOM_SATD_CUTOFF_CORE" width="6" begin="11" end="6" resetval="0x1C" description="Cutoff for the change between the lower and higher qp set of coeffs for the polynomial, greater or equal to this value of qp the polynomial uses the second set of coeffs." range="" rwaccess="RW"/>
    <bitfield id="CR_POLYNOM_SAD_CUTOFF_CORE" width="6" begin="5" end="0" resetval="0x1C" description="Cutoff for the change between the lower and higher qp set of coeffs for the polynomial, greater or equal to this value of qp the polynomial uses the second set of coeffs." range="" rwaccess="RW"/>
  </register>
  <register id="ENCODER0_CR_SECURE_CONFIG" acronym="ENCODER0_CR_SECURE_CONFIG" offset="0x200" width="32" description="This register controls the 'secure' status of AXI memory bus transactions issued by the encoder. On devices that are configured to use the IMGBus2 memory bus interface this register should not be used.">
    <bitfield id="RESERVED" width="7" begin="31" end="25" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_DMAC_SECURE" width="1" begin="24" end="24" resetval="0x1" description="0: Memory bus transactions issued by the DMAC are marked as 'non-secure'" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="23" end="20" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_SW_DMA_SECURE_PIPE" width="1" begin="19" end="19" resetval="0x1" description="0: Memory bus transactions issued by the S/W DMA are marked as 'non-secure'" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="18" end="16" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="15" end="12" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_INPUT_SECURE_PIPE" width="1" begin="11" end="11" resetval="0x1" description="0: Memory bus transactions issued by the encoder for reading in current pixel data are marked as 'non-secure'" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="10" end="8" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="7" end="4" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CR_OUTPUT_SECURE_PIPE" width="1" begin="3" end="3" resetval="0x1" description="0: Memory bus transactions issued by the encoder for the following data categories are marked as 'non-secure'" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="2" end="0" resetval="0xX" description="" range="" rwaccess="RW"/>
  </register>
  <register id="ENCODER0_CR_FIRMWARE_REG_4" acronym="ENCODER0_CR_FIRMWARE_REG_4" offset="0x300" width="32" description="">
    <bitfield id="CR_FIRMWARE_REG_4" width="32" begin="31" end="0" resetval="0x0" description="General purpose register for software use" range="" rwaccess="RW"/>
  </register>
  <register id="ENCODER0_CR_FIRMWARE_REG_5" acronym="ENCODER0_CR_FIRMWARE_REG_5" offset="0x304" width="32" description="">
    <bitfield id="CR_FIRMWARE_REG_5" width="32" begin="31" end="0" resetval="0x0" description="General purpose register for software use" range="" rwaccess="RW"/>
  </register>
  <register id="ENCODER0_CR_FIRMWARE_REG_6" acronym="ENCODER0_CR_FIRMWARE_REG_6" offset="0x308" width="32" description="">
    <bitfield id="CR_FIRMWARE_REG_6" width="32" begin="31" end="0" resetval="0x0" description="General purpose register for software use" range="" rwaccess="RW"/>
  </register>
  <register id="ENCODER0_CR_FIRMWARE_REG_7" acronym="ENCODER0_CR_FIRMWARE_REG_7" offset="0x30C" width="32" description="">
    <bitfield id="CR_FIRMWARE_REG_7" width="32" begin="31" end="0" resetval="0x0" description="General purpose register for software use" range="" rwaccess="RW"/>
  </register>
  <register id="ENCODER0_CR_MULTICORE_RSVD0" acronym="ENCODER0_CR_MULTICORE_RSVD0" offset="0x3B0" width="32" description="">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="8" begin="7" end="0" resetval="0x0" description="Reserved" range="" rwaccess="RW"/>
  </register>
  <register id="ENCODER0_CR_TOPAZHP_CORE_ID" acronym="ENCODER0_CR_TOPAZHP_CORE_ID" offset="0x3C0" width="32" description="">
    <bitfield id="CR_TOPAZHP_GROUP_ID" width="8" begin="31" end="24" resetval="0x4" description="This identifies the as part of an IMG IP family group." range="" rwaccess="R"/>
    <bitfield id="CR_TOPAZHP_CORE_ID" width="8" begin="23" end="16" resetval="0x7" description="This identifies the member of the Ip group" range="" rwaccess="R"/>
    <bitfield id="CR_TOPAZHP_CORE_CONFIG" width="16" begin="15" end="0" resetval="0x0" description="IMG Core Configuration." range="" rwaccess="R"/>
  </register>
  <register id="ENCODER0_CR_TOPAZHP_CORE_REV" acronym="ENCODER0_CR_TOPAZHP_CORE_REV" offset="0x3D0" width="32" description="">
    <bitfield id="CR_TOPAZHP_DESIGNER" width="8" begin="31" end="24" resetval="0x0" description="Designer Code" range="" rwaccess="R"/>
    <bitfield id="CR_TOPAZHP_MAJOR_REV" width="8" begin="23" end="16" resetval="0x3" description="IMG Family Major Revision" range="" rwaccess="R"/>
    <bitfield id="CR_TOPAZHP_MINOR_REV" width="8" begin="15" end="8" resetval="0x9" description="IMG Core Minor Revision" range="" rwaccess="R"/>
    <bitfield id="CR_TOPAZHP_MAINT_REV" width="8" begin="7" end="0" resetval="0x8" description="IMG Maintenance Revision" range="" rwaccess="R"/>
  </register>
  <register id="ENCODER0_CR_TOPAZHP_CORE_DES1" acronym="ENCODER0_CR_TOPAZHP_CORE_DES1" offset="0x3E0" width="32" description="This register contains fields indicating which settings were enabled in the custom pack for this instance of the core.">
    <bitfield id="CR_TOPAZHP_MMU_SUPPORTED" width="1" begin="31" end="31" resetval="0x1" description="When set, this indicates that MMU support is enabled in this module." range="" rwaccess="R"/>
    <bitfield id="CR_TOPAZHP_DMAC_SUPPORTED" width="1" begin="30" end="30" resetval="0x1" description="When set, this indicates that DMAC support is enabled in this module." range="" rwaccess="R"/>
    <bitfield id="CR_TOPAZHP_H264_SUPPORTED" width="1" begin="29" end="29" resetval="0x1" description="When set, this indicates that H264 support is enabled in this module." range="" rwaccess="R"/>
    <bitfield id="CR_TOPAZHP_MPEG4_SUPPORTED" width="1" begin="28" end="28" resetval="0x1" description="When set, this indicates that MPEG4 support is enabled in this module." range="" rwaccess="R"/>
    <bitfield id="CR_TOPAZHP_H263_SUPPORTED" width="1" begin="27" end="27" resetval="0x1" description="When set, this indicates that H.236 support is enabled in this module." range="" rwaccess="R"/>
    <bitfield id="CR_TOPAZHP_JPEG_SUPPORTED" width="1" begin="26" end="26" resetval="0x1" description="When set, this indicates that JPEG support is enabled on pipe 0 in this module." range="" rwaccess="R"/>
    <bitfield id="CR_TOPAZHP_SLAVE_JPEG_SUPPORTED" width="1" begin="25" end="25" resetval="0x1" description="When set, this indicates that JPEG support is enabled on other pipes in this module." range="" rwaccess="R"/>
    <bitfield id="CR_TOPAZHP_H264_CABAC_SUPPORTED" width="1" begin="24" end="24" resetval="0x1" description="When set, this indicates that CABAC support is enabled in this module." range="" rwaccess="R"/>
    <bitfield id="CR_TOPAZHP_H264_16X8_8X16_SUPPORTED" width="1" begin="23" end="23" resetval="0x1" description="When set, this indicates that 16x8 and 8x16 macroblock partition support is enabled in this module." range="" rwaccess="R"/>
    <bitfield id="CR_TOPAZHP_H264_B_PIC_SUPPORTED" width="1" begin="22" end="22" resetval="0x1" description="When set, this indicates that B picture support is enabled in this module." range="" rwaccess="R"/>
    <bitfield id="CR_TOPAZHP_H264_INTERLACED_SUPPORTED" width="1" begin="21" end="21" resetval="0x1" description="When set, this indicates that H264 interlace support is enabled in this module." range="" rwaccess="R"/>
    <bitfield id="CR_TOPAZHP_H264_8X8_TRANSFORM_SUPPORTED" width="1" begin="20" end="20" resetval="0x1" description="When set, this indicates that H264 8x8 transform is enabled in this module." range="" rwaccess="R"/>
    <bitfield id="CR_TOPAZHP_H264_DEFAULT_TABLES_SUPPORTED" width="1" begin="19" end="19" resetval="0x1" description="When set, this indicates that H264 default scaling list quantisation support is enabled in this module." range="" rwaccess="R"/>
    <bitfield id="CR_TOPAZHP_H264_MULTIPASS_SUPPORTED" width="1" begin="18" end="18" resetval="0x1" description="When set, this indicates that multipass support is enabled in this module." range="" rwaccess="R"/>
    <bitfield id="CR_TOPAZHP_H264_SPATIAL_DIRECT_SUPPORTED" width="1" begin="17" end="17" resetval="0x1" description="When set, this indicates that spatial direct mode support is enabled in this module." range="" rwaccess="R"/>
    <bitfield id="CR_TOPAZHP_H264_2_REF_ON_P_PIC_SUPPORTED" width="1" begin="16" end="16" resetval="0x1" description="When set, this indicates that the use of 2 reference pictures on a P picture is enabled in this module." range="" rwaccess="R"/>
    <bitfield id="CR_TOPAZHP_H264_WEIGHTED_PRED_SUPPORTED" width="1" begin="15" end="15" resetval="0x1" description="When set, this indicates that weighted prediction support is enabled in this module." range="" rwaccess="R"/>
    <bitfield id="CR_TOPAZHP_H264_WEIGHTED_PRED_ME_SUPPORTED" width="1" begin="14" end="14" resetval="0x1" description="When set, this indicates that weighted prediction support [for motion estimation] is enabled in this module." range="" rwaccess="R"/>
    <bitfield id="CR_TOPAZHP_SIGNATURES_SUPPORTED_ALL" width="1" begin="13" end="13" resetval="0x0" description="When set, this indicates that all signature registers are enabled in this module." range="" rwaccess="R"/>
    <bitfield id="CR_TOPAZHP_SIGNATURES_SUPPORTED_SUBSET" width="1" begin="12" end="12" resetval="0x1" description="When set, this indicates that a subset of the signature registers are enabled in this module." range="" rwaccess="R"/>
    <bitfield id="CR_TOPAZHP_MPEG2_SUPPORTED" width="1" begin="11" end="11" resetval="0x1" description="When set, this indicates that MPEG2 support is enabled in this module." range="" rwaccess="R"/>
    <bitfield id="CR_TOPAZHP_H264_CUSTOM_QUANT_SUPPORTED" width="1" begin="10" end="10" resetval="0x1" description="When set, this indicates that custom quantisation table support is enabled in this module." range="" rwaccess="R"/>
    <bitfield id="CR_TOPAZHP_H264_LOSSLESS_SUPPORTED" width="1" begin="9" end="9" resetval="0x1" description="When set, this indicates that lossless compression support is enabled in this module." range="" rwaccess="R"/>
    <bitfield id="CR_TOPAZHP_GENERATE_PERFORMANCE_STORE" width="1" begin="8" end="8" resetval="0x0" description="When set, this indicates that MMU support is enabled in this module." range="" rwaccess="R"/>
    <bitfield id="CR_TOPAZHP_SCALER_SUPPORTED" width="1" begin="7" end="7" resetval="0x1" description="When set, this indicates that support for down-scaling the input picture for video encode is enabled in this module." range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="7" begin="6" end="0" resetval="0x0" description="" range="" rwaccess="R"/>
  </register>
  <register id="ENCODER0_CR_TOPAZHP_CORE_DES2" acronym="ENCODER0_CR_TOPAZHP_CORE_DES2" offset="0x3F0" width="32" description="The SOC designer can use this register for their own revision control.">
    <bitfield id="CR_TOPAZHP_DESIGNER2" width="32" begin="31" end="0" resetval="0x0" description="Designer Revision Field2" range="" rwaccess="R"/>
  </register>
</module>
