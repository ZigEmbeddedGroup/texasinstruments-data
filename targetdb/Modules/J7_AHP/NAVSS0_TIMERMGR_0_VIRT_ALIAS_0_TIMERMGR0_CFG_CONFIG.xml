<module name="NAVSS0_TIMERMGR_0_VIRT_ALIAS_0_TIMERMGR0_CFG_CONFIG" acronym="" XML_version="1.0" HW_revision="n/a" description="">
	<register id="VIRT_ALIAS_0_TIMERMGR0__CFG__CONFIG_TM_ID" acronym="VIRT_ALIAS_0_TIMERMGR0__CFG__CONFIG_TM_ID" offset="0x0" width="32" description="">
		<bitfield id="SCHEME" width="2" begin="31" end="30" resetval="0x1" description="PID scheme" range="31 - 30" rwaccess="R"/> 
		<bitfield id="BU" width="2" begin="29" end="28" resetval="0x2" description="PID bu identifier" range="29 - 28" rwaccess="R"/> 
		<bitfield id="FUNCTION" width="12" begin="27" end="16" resetval="0x1784" description="PID function identifier" range="27 - 16" rwaccess="R"/> 
		<bitfield id="RTL_VER" width="5" begin="15" end="11" resetval="0x5" description="PID RTL version number" range="15 - 11" rwaccess="R"/> 
		<bitfield id="MAJOR_REV" width="3" begin="10" end="8" resetval="0x1" description="PID Major revision number" range="10 - 8" rwaccess="R"/> 
		<bitfield id="CUSTOM" width="2" begin="7" end="6" resetval="0x0" description="PID custom" range="7 - 6" rwaccess="R"/> 
		<bitfield id="MINOR_REV" width="6" begin="5" end="0" resetval="0x1" description="PID Minor revision number" range="5 - 0" rwaccess="R"/>
	</register>
	<register id="VIRT_ALIAS_0_TIMERMGR0__CFG__CONFIG_TM_CNTL" acronym="VIRT_ALIAS_0_TIMERMGR0__CFG__CONFIG_TM_CNTL" offset="0x4" width="32" description="">
		<bitfield id="MASS_ENABLE" width="1" begin="12" end="12" resetval="0x0" description="Always reads zero. When a 1 is written to this bit, all timers from 0 to the TM_CNTL.max_timer will be enabled. Useful for initial programming, to not need to loop over every TIMER_CONTROL register to enable every timer if many or all are being used. This should only be used during initialization, or when TM_CNTL.enable is set to 0, as this does not set the timers, only enable them" range="12" rwaccess="W"/> 
		<bitfield id="MAX_TIMER" width="10" begin="10" end="1" resetval="0x1023" description="The maximum timer that will be checked - e.g. if only using 512 timers, set this to 511. All timers above this number will be ignored. Should be set once during initialization" range="10 - 1" rwaccess="R/W"/> 
		<bitfield id="ENABLE" width="1" begin="0" end="0" resetval="0x0" description="Enables the timer manager. When this bit is zero, the timers will all be halted and will not count" range="0" rwaccess="R/W"/>
	</register>
	<register id="VIRT_ALIAS_0_TIMERMGR0__CFG__CONFIG_TIMER_COUNTER" acronym="VIRT_ALIAS_0_TIMERMGR0__CFG__CONFIG_TIMER_COUNTER" offset="0x8" width="32" description="">
		<bitfield id="COUNT" width="32" begin="31" end="0" resetval="0x0" description="The current timer_counter value, in the timebase being used by all timers in this module" range="31 - 0" rwaccess="R"/>
	</register>
	<register id="VIRT_ALIAS_0_TIMERMGR0__CFG__CONFIG_TIMEOUT_STATUS0" acronym="VIRT_ALIAS_0_TIMERMGR0__CFG__CONFIG_TIMEOUT_STATUS0" offset="0xA0" width="32" description="">
		<bitfield id="VALID0" width="1" begin="23" end="23" resetval="0x0" description="1 indicates that expired_timer0 is a valid expired timer. If num_expired_timers > 0, this should always be a 1" range="23" rwaccess="R"/> 
		<bitfield id="EXPIRED_TIMER0" width="11" begin="22" end="12" resetval="0x0" description="The ID of the first timer to expire" range="22 - 12" rwaccess="R"/> 
		<bitfield id="NUM_EXPIRED_TIMERS" width="12" begin="11" end="0" resetval="0x0" description="The total number of expired timers" range="11 - 0" rwaccess="R"/>
	</register>
	<register id="VIRT_ALIAS_0_TIMERMGR0__CFG__CONFIG_TIMEOUT_STATUS1" acronym="VIRT_ALIAS_0_TIMERMGR0__CFG__CONFIG_TIMEOUT_STATUS1" offset="0xA4" width="32" description="">
		<bitfield id="VALID2" width="1" begin="23" end="23" resetval="0x0" description="1 indicates that expired_timer2 is valid" range="23" rwaccess="R"/> 
		<bitfield id="EXPIRED_TIMER2" width="11" begin="22" end="12" resetval="0x0" description="The ID of the third timer to expire" range="22 - 12" rwaccess="R"/> 
		<bitfield id="VALID1" width="1" begin="11" end="11" resetval="0x0" description="1 indicates that expired_timer1 is valid" range="11" rwaccess="R"/> 
		<bitfield id="EXPIRED_TIMER1" width="11" begin="10" end="0" resetval="0x0" description="The ID of the second timer to expire" range="10 - 0" rwaccess="R"/>
	</register>
	<register id="VIRT_ALIAS_0_TIMERMGR0__CFG__CONFIG_TIMEOUT_STATUS_BANK0" acronym="VIRT_ALIAS_0_TIMERMGR0__CFG__CONFIG_TIMEOUT_STATUS_BANK0" offset="0xA8" width="32" description="">
		<bitfield id="BANK_STATUS" width="32" begin="31" end="0" resetval="0x0" description="A 1 in bit N indicates that the corresponding bank has expired timers" range="31 - 0" rwaccess="R"/>
	</register>
	<register id="VIRT_ALIAS_0_TIMERMGR0__CFG__CONFIG_TIMER_STATUS" acronym="VIRT_ALIAS_0_TIMERMGR0__CFG__CONFIG_TIMER_STATUS" offset="0x100" width="32" description="">
		<bitfield id="STATUS" width="32" begin="31" end="0" resetval="0x0" description="Each bit is the timeout status for an individual timer" range="31 - 0" rwaccess="R"/>
	</register>
</module>